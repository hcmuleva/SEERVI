"""
exam or exam
examName:weekly/monthly/surpries
examType:MOCK/PREPRATION/ANUULAEXAM/
subject/unit/topic
questions[]
markingscheme: JSON{
    type:negative/positive /no marks
    sc:marks
    mcq:marks
    descriptive:marks
    special:marks
    explainationoption: oncomplete exam/evertquestion/dontshow
}

examlevel
description
showExplaination
showanswer
allowedCorrection
duration(ms)
attemptedDate
commentFromTeacher
isPublished
isApproved
createddBBy
weightage
validFrom
ValidTo
retryAllowed
threshold { basedOn: MarksObtain/correctQuestions }
isForLevelPromotion
totalmarks
"""
type Exam {
  id: ID! @id
  name: String!
  type: String!
  subject: Subject @relation(name: "ExamToSubject", onDelete: SET_NULL)
  unit: Unit @relation(name: "ExamToUnit", onDelete: SET_NULL)
  topic: Topic @relation(name: "ExamToTopic", onDelete: SET_NULL)
  questions: [Question!]! @relation(name: "QuestionToExam", onDelete: SET_NULL)
  markingscheme: Json
  level: Int
  threshold: Json
  isForLevelPromotion: Boolean @default(value: false)
  showExplaination: String
  showanswer: Boolean @default(value: true)
  description: String
  allowedCorrection: Boolean @default(value: true)
  duration: Int
  commentFromTeacher: String
  isPublished: Boolean @default(value: true)
  isApproved: Boolean @default(value: true)
  createdBy: User! @relation(name: "ExamCreatedByToUser", onDelete: SET_NULL)
  weightage: Float
  totalmarks: Float
  validFrom: DateTime @createdAt
  validTo: DateTime
  retryAllowed: Boolean @default(value: true)
  results: [Result!]! @relation(name: "ResultToExam", onDelete: CASCADE)
  course: Course @relation(name: "ExamToCourse", onDelete: SET_NULL)
}

type Unit{
     """
     Unit: 
     name: Unit name 
     Subject : Unit may belongs to subject ART/Commorce ELX Mech etc.... its optional because lower classes will not have it
     topics: there may be list of Topics belongs to Unit
     contents: there may be list of content belongs to Unit
     createdBy: To track who has created this
     updatedBy: to track who has update this
     plandate: we can plan in advance, when Unit need to release
     isPublished: we can mark Unit publish/unpublish so that user can view only publised Unit.
     state: ACTIVE,DORMANT, DEACTIVE
     status: APPROVED/SUBMITTED/REJECTED
     available: Free/Paid/Subscription based etc....
      
     
     """
     id: ID! @id
     name:String!
     subject:Subject!            @relation(name: "UnitToSubject", onDelete: SET_NULL)
     topics: [Topic!]!           @relation(name: "TopicToUnit", onDelete: CASCADE)
     contents:[Content!]!        @relation(name: "ContentToUnit", onDelete: CASCADE)
     
     createdBy:User              @relation(name: "UnitToUser", onDelete: SET_NULL)
     updateBy:[User]             @relation(name: "UnitToUserUpdate", onDelete: SET_NULL)
     plantDate:DateTime
     isPublished:Boolean!
     state:String!
     status:String!
     available:String 
     questions:[Question!]!      @relation(name: "QuestionToUnit", onDelete: SET_NULL)
     updatedAt:DateTime!         @updatedAt
     createdAt:DateTime!         @createdAt
     quizs:[Quiz!]!              @relation(name: "QuizToUnit", onDelete: CASCADE)
}
type Query {
    allorgs: [Organization!]! 
    orgById(id:ID!):Organization!
    orgByname(name:String!):Organization! 
    allsuborgs:[Suborg!]!
    suborgsoforg(id:String!):[Suborg!]!
    suborgById(id:ID!):Suborg!
    groupById(id:ID!):Group!
    allGroups:[Group!]!
    subgroupById(id:ID!):SubGroup!
    allSubGroups:[SubGroup!]!

}
type Mutation{
     createOrganization(data: CreateOrganizationInput!): Organization!
     createSubOrg(data:CreateSubOrganizationInput!):Suborg!
     deleteOrg(id:ID!):Organization!
     updateOrg(id:ID! , data:UpdateOrganizationInpput): Organization!
     deleteSubOrg(id:ID!):Suborg!
     updateSuborg(id:ID!,data:UpdateSubOrgInpput!):Suborg!
     createGroup(data:CreateGroupInput!):Group!
     deleteGroup(id:ID!):Group!
     updateGroup(id:ID!,data:UpdateGroupInput!):Group!
     createSubGroup(data:CreateSubGroupInput!):SubGroup!
     deleteSubGroup(id:ID!):SubGroup!
     updateSubGroup(id:ID!,data:UpdateSubGroupInput!):SubGroup!
}
type Organization{
  id:ID!
  name:String!
  description:String!
  
  
}

input CreateOrganizationInput{
  name:String!
  description:String 
}
input UpdateOrganizationInpput{
  name:String
  description:String 
}
type Suborg{
    id:ID!
    name:String!
    description:String
    author:[User!]
    orgid:Organization!
    groups:[Group!]!
    
}

input CreateSubOrganizationInput{
    name:String!
    description:String
    orgid:String!

}
input UpdateSubOrgInpput{
  name:String
  description:String 
}

type Group{
  id: ID! 
  name:String!
  description:String 
  suborgid:Suborg!
  subgroups:[SubGroup!]!
  
}
input CreateGroupInput{
    name:String!
    description:String
    suborgid:String!

}
input UpdateGroupInput{
    name:String
    description:String
}


type SubGroup{
  id: ID! 
  name:String!
  description:String 
  groupid:Group! 
  memberships:[Membership!]!
  
}
input CreateSubGroupInput{
    name:String!
    description:String
    groupid:String!

}
input UpdateSubGroupInput{
    name:String
    description:String
}
type Membership{
  id:ID!
  name:String!
  userid:User!
  subgroup:SubGroup!
  status:MembershipStatus
  description:String
}
input MembershipInput{
  name:String!
  userid:String!
  subgroup:String!
  status:String
  description:String
}
input MembershipUpdateIInput{
  name:String
  userid:String
  subgroup:String
  status:String
  description:String
}
enum MembershipStatus{
  ACTIVE
  EXPIRED
  INACTIVE
  DORMANT
  RENEWED
  SPECIALGRANT

}
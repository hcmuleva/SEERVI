type Query {
  allorgs: [Organization!]!
  orgById(id: ID!): Organization!
  orgByname(name: String!): Organization!
  allsuborgs: [Suborg!]!
  suborgsoforg(id: String!): [Suborg!]!
  suborgById(id: String!): Suborg!
  groupsOfSubOrg(id: String!): [Group!]!

  groupById(id: ID!): Group!
  allGroups: [Group!]!
  subgroupById(id: String!): SubGroup!
  allSubGroups: [SubGroup!]!
  subgroupsOfGroup(id: String!): [SubGroup!]!
}
type Mutation {
  orgOnboardBySuperAdmin(data: CreateOrganizationInput): Organization!
  createOrganization(data: CreateOrganizationInput!): Organization!
  createSubOrg(data: CreateSubOrganizationInput!): Suborg!
  deleteOrg(id: ID!): Organization!
  updateOrg(id: ID!, data: UpdateOrganizationInpput): Organization!
  deleteSubOrg(id: ID!): Suborg!
  updateSuborg(id: ID!, data: UpdateSubOrgInpput!): Suborg!
  createGroup(data: CreateGroupInput!): Group!
  deleteGroup(id: ID!): Group!
  updateGroup(id: ID!, data: UpdateGroupInput!): Group!
  createSubGroup(data: CreateSubGroupInput!): SubGroup!
  deleteSubGroup(id: ID!): SubGroup!
  updateSubGroup(id: ID!, data: UpdateSubGroupInput!): SubGroup!
}
type Organization {
  id: ID!
  name: String!
  logo: String
  color: String
  author: [User!]!
  orgRoles: [Role!]!
  description: String!
}

input CreateOrganizationInput {
  name: String!
  logo: String
  description: String
}
input UpdateOrganizationInpput {
  name: String
  logo: String
  description: String
}
type Suborg {
  id: ID!
  name: String!
  description: String
  author: [User!]!
  orgid: Organization!
  userGroups: [Group!]!
  suborgRoles: [Role!]!
}

input CreateSubOrganizationInput {
  name: String!
  description: String
  orgid: String!
}
input UpdateSubOrgInpput {
  name: String
  description: String
}

type Group {
  id: ID!
  name: String!
  description: String
  suborgid: Suborg!
  subgroups: [SubGroup!]!
  groupRoles: [Role!]!
}
input CreateGroupInput {
  name: String!
  description: String
  suborgid: String!
}
input UpdateGroupInput {
  name: String
  description: String
}

type SubGroup {
  id: ID!
  name: String!
  description: String
  groupid: Group!

  medium: [Medium!]!
  subgroupRoles: [Role!]!
}

input CreateSubGroupInput {
  name: String!
  description: String
  groupid: String!
}
input UpdateSubGroupInput {
  name: String
  description: String
}

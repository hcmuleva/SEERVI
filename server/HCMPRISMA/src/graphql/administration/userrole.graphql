type Query {
  alluserroles: [UserRole!]!
  userRoleByUserId(userid: String!): [UserRole!]!
}
type Mutation {
  createUserRole(data: CreateUserRoleInput): UserRole!
  updateUserRole(id: ID!, data: UpdateUserRoleInput): UserRole!
  deleteUserRole(id: ID!): UserRole!
}
type UserRole {
  id: ID!
  userid: User!
  roleid: Role!
  status: RoleStatus
  description: String
}
input CreateUserRoleInput {
  userid: String!
  roleid: String!
  status: String
  description: String
}

input UpdateUserRoleInput {
  userid: String
  roleid: String
  status: String
  description: String
}

enum RoleStatus {
  ACTIVE @default
  EXPIRED
  INACTIVE
  DORMANT
  RENEWED
  SPECIALGRANT
}

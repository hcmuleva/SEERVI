type Query {
  getAllSubjects: [Subject!]!
  getSubjectById(id:ID!):Subject!
  getSubgroupSubjects(id:ID!):[Subject!]!
  getSubjectByStd(id:ID!):[Subject!]!
}
type Mutation {
  createSubject(data: SubjectInputData!): Subject!
  updateSubject(id: ID!, data: SubjectUpdateInputData!): Subject!
  deleteSubject(id: ID!): Subject!
}
type Subject {
  id: ID!
  name: String!
  picture: String
  medium: Medium
  std: Std!
  category: String
  board: String
  group: Group
  subgroup: SubGroup
  level:    Int 
  units: [Unit!]!
  topic: [Topic!]!
  contents: [Content!]!
  plantDate: DateTime
  isPublished: Boolean
  state: String
  status: String
  available: String
  examples:[Example!]!
  description: String
}
input SubjectInputData {
  name: String!
  picture: String
  medium: String
  std: String!
  level:    Int 
  educationProfiles: Json
  category: String
  board: String
  group: String
  subgroup: String
  plantDate: DateTime
  isPublished: Boolean
  state: String
  status: String
  available: String
  description: String
}
input SubjectUpdateInputData {
  name: String
  picture: String
  medium: String
  std: String
  level:    Int 
  educationProfiles: Json
  category: String
  board: String
  group: String
  subgroup: String
  plantDate: DateTime
  isPublished: Boolean
  state: String
  status: String
  available: String
  description: String
}

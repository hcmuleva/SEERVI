{"version":3,"sources":["AppTopbar.js","AppMenu.js","AppProfile.js","service/CarService.js","components/Dashboard.js","service/CountryService.js","components/FormsDemo.js","service/NodeService.js","components/SampleDemo.js","service/EventService.js","components/DataDemo.js","components/PanelsDemo.js","components/OverlaysDemo.js","components/MenusDemo.js","components/MessagesDemo.js","components/ChartsDemo.js","components/MiscDemo.js","components/EmptyPage.js","service/CustomerService.js","tbd/mypractice/DataTableDemo.js","tbd/mypractice/CardView.js","tbd/mypractice/Gridview.js","components/Documentation.js","projectcomponents/content/TreeViewContentCreation.js","service/graphql/education/teacher/mutations/content.js","service/graphql/education/common/queries/subjects.js","service/graphql/education/common/queries/unit.js","common/S3UploadFile.js","common/keys.js","projectcomponents/content/Content.js","projectcomponents/question/QuestionTreeView.js","service/graphql/education/teacher/mutations/question.js","projectcomponents/question/Options.js","projectcomponents/question/QuestionContent.js","projectcomponents/question/Explaination.js","projectcomponents/question/Question.js","projectcomponents/contenttypes.js","service/graphql/education/common/queries/assignedsubjects.js","service/graphql/education/teacher/mutations/subject.js","projectcomponents/Subjectcard.js","components/TeacherSubjects.js","components/MySubjects.js","projectcomponents/formulas/FormulaTreeView.js","projectcomponents/common/OptionalField.js","service/graphql/education/teacher/mutations/formula.js","projectcomponents/formulas/FormulaCreation.js","projectcomponents/content/preview/CardView.js","projectcomponents/content/preview/PreviewController.js","projectcomponents/formulas/Formulas.js","projectcomponents/content/Syllabus.js","projectcomponents/content/Material.js","projectcomponents/content/Exams.js","projectcomponents/content/TeacherMgmt.js","projectcomponents/exams/ExamTreeView.js","projectcomponents/exams/GrowlDemo.js","projectcomponents/exams/QuestionAvailable.js","projectcomponents/exams/Exams.js","projectcomponents/papers/Papers.js","projectcomponents/tipstricks/TipsTricsTreeView.js","service/graphql/education/teacher/mutations/tipstricks.js","projectcomponents/tipstricks/TipsTricksCreation.js","projectcomponents/tipstricks/TipsTrics.js","projectcomponents/example/ExampleTreeView.js","service/graphql/education/teacher/mutations/example.js","projectcomponents/example/Example.js","service/graphql/education/teacher/mutations/unit.js","service/graphql/education/teacher/mutations/topic.js","projectcomponents/teacher/Syllabus/SyllabusTreeView.js","projectcomponents/teacher/Syllabus/Syllabus.js","projectcomponents/teacher/TeacherTabbedView.js","App.js","serviceWorker.js","ScrollToTop.js","service/graphql/users/query/user.js","tbd/login.js","common/apolloclient.js","index.js"],"names":["AppTopbar","className","onClick","this","props","onToggleMenu","type","placeholder","Component","defaultProps","AppSubmenu","state","activeIndex","event","item","index","disabled","preventDefault","command","originalEvent","setState","onMenuItemClick","submenuIcon","items","badge","Fragment","icon","label","i","content","renderLinkContent","to","activeClassName","e","exact","target","href","url","map","active","styleClass","classNames","badgeStyleClass","key","root","renderLink","AppMenu","model","AppProfile","expanded","bind","src","alt","CarService","axios","get","then","res","data","Dashboard","style","backgroundColor","color","CountryService","_this","countriesData","FormsDemo","cars","selectedType","chipsValue","date1","date2","date3","date4","date5","date6","date7","checkboxValue","radioValue","inputSwitchValue","dropdownCity","spinnerValue","sliderValue","listBoxCity","ratingValue","colorPickerValue","inputGroupValue","carOptions","value","cities","listBoxCities","types","splitButtonItems","countryService","onCheckboxChange","filterCountry","filterBrands","autoCompleteItemTemplate","getCountries","brands","results","filter","country","name","toLowerCase","startsWith","query","filteredCountries","setTimeout","length","brand","filteredBrands","width","display","margin","fontSize","float","selected","checked","push","splice","indexOf","rows","cols","autoResize","htmlFor","marginBottom","minLength","id","size","field","suggestions","completeMethod","onChange","dropdown","multiple","itemTemplate","options","inline","marginTop","showTime","dateFormat","timeOnly","showIcon","readOnly","numberOfMonths","view","inputId","autoWidth","Slider","range","height","toggleButtonValue","iconPos","textAlign","NodeService","files","SampleDemo","date","selectedNodeKey","dialogVisible","dataTableValue","dataTableSelection","dataViewValue","treeData","picklistSourceCars","picklistTargetCars","orderlistCars","layout","selectedCars","menuItems","window","location","hash","panelMenuItems","separator","carService","nodeService","dataViewItemTemplate","orderListTemplate","getCarsSmall","getCarsLarge","getTreeNodes","nodes","car","year","padding","borderBottom","vin","header","cursor","dialogFooter","dialogValue","dataViewHeader","position","onKeyUp","dv","mask","slotChar","visible","footer","onHide","selectionMode","selection","onSelectionChange","sortable","ref","el","filterBy","paginatorPosition","paginator","source","sourceHeader","targetHeader","responsive","listStyle","leftIcon","toggleable","selectionKeys","EventService","DataDemo","treeData1","treeData2","selectedFile","selectedFiles","documents","documentsSelection","fullCalendarEvents","sortOptions","organizationChartValue","children","eventService","pickListTemplate","onSortChange","getCarsMedium","getTreeTableNodes","getEvents","events","sortOrder","sortField","substring","sortKey","fullcalendarOptions","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","defaultView","defaultDate","left","center","right","editable","sourceStyle","targetStyle","expander","PanelsDemo","legend","marginRight","OverlaysDemo","images","thumbnail","title","history","overlayPanel1","toggle","overlayPanel2","showCloseIcon","dismissable","modal","tooltip","tooltipOptions","MenusDemo","breadcrumdItems","home","stepsItems","tieredItems","tabMenuItems","megaMenuItems","menu","popup","global","menuWidth","orientation","MessagesDemo","showInfo","showSuccess","showWarn","showError","msg","severity","summary","detail","growl","show","messages","text","paddingLeft","ChartsDemo","lineData","labels","datasets","fill","borderColor","barData","pieData","hoverBackgroundColor","polarData","radarData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","MiscDemo","onUpload","interval","setInterval","val","Math","floor","random","clearInterval","accept","maxFileSize","EmptyPage","useState","mytext","setMytext","onTextChange","htmlValue","CustomerService","DataTableDemo","customers","setCustomers","selectedCustomers","setSelectedCustomers","globalFilter","setGlobalFilter","selectedRepresentatives","setSelectedRepresentatives","dateFilter","setDateFilter","selectedStatus","setSelectedStatus","customerService","dt","useRef","representatives","image","statuses","useEffect","getCustomersLarge","representativeItemTemplate","option","srcSet","verticalAlign","marginLeft","onRepresentativeFilterChange","current","onDateFilterChange","formatDate","month","getMonth","day","getDate","getFullYear","statusItemTemplate","onStatusFilterChange","onInput","representativeFilter","optionLabel","optionValue","dateFilterEl","statusFilter","showClear","dataKey","rowHover","emptyMessage","currentPageReportTemplate","paginatorTemplate","rowsPerPageOptions","filterPlaceholder","filterField","body","rowData","code","filterMatchMode","representative","filterElement","filterFunction","undefined","trim","status","activity","showValue","headerStyle","bodyStyle","overflow","CardView","Gridview","Documentation","TreeViewContentCreation","setSelectionKeys","selectionValue","setNodes","rootElm","unitData","units","unit","unitElm","subjectid","topicElm","topics","topic","topicContentsElm","contents","level","topicname","unitname","unitLevelContent","onSelect","setTreeData","node","onSelectionValueChange","CREATE_CONTENT","gql","GET_SUBJECT_SYLLABUS_BY_ID","GET_SUBJECT_BY_ID","GET_ALLFORMULA_SUBJECT_BY_ID","GET_ALLTIPSTRICKS_SUBJECT_BY_ID","GET_ALLEXAMPLE_SUBJECT_BY_ID","GET_ALLQUESTIONS_SUBJECT_BY_ID","config","accessKeyId","secretAccessKey","region","dirName","bucketName","S3UploadFile","file","ReactS3Client","S3","uploadFile","catch","err","console","log","Content","match","params","contentType","setContentLevel","setLevel","available","contentTypeVal","setContentTypeVal","setContentTitle","setTitle","contentData","setContentData","setUrl","fileInfo","setFileInfo","useMutation","createContent","resp","createContentFunction","myurl","myobj","isPublished","description","variables","refetchQueries","Error","useQuery","unitLoading","loading","unitError","error","message","getSubjectById","paddingRight","getEditor","File","QuestionTreeView","dataval","topicquestionsElm","questions","question","unitLevelquestion","CREATE_QUESTION","Options","setContent","optionindex","setOptionindex","mcqCorrect","setMcqCorrect","onChangeMCQ","selectedMCQ","myData","optionData","isCorrect","setOptionData","getCardForOption","ReactHtmlParser","questionType","myoptionData","getButton","getEditorType","QuestionContent","questionContent","setQuestionContent","Explaination","Question","activeItem","setActiveItem","setQuestionType","createQuestion","resetData","marginRiight","onTabChange","getComponent","myQueObj","quetype","descrtionType","descrtionurl","descriptionfileInfo","modifiedData","opt","quefile","uploadFiles","ContentTypes","useHistory","setSelected","setType","MY_ASSIGNED_SUBJECTS","MY_ASSIGNED_SUBJECTS_QUE","UPDATE_SUBJECT","Subjectcard","subject","picture","refresh","setRefresh","updateSubject","updateSubjectURL","subjectname","getPage","subTitle","std","gradename","borderRadius","username","TeacherSubjects","assignedSubjectsLoading","assignedSubjectsError","assignedSubjectsData","mySubjectList","mySubscription","sub","subscribedAs","userid","firstname","lastname","email","mySubjects","MySubjects","FormulaTreeView","topicformulasElm","formulas","formula","unitLevelformula","OptionalField","CREATE_FORMULA","FormulaCreation","createFormula","setStatus","setAvailable","dataList","getCardData","controls","light","playbackRate","getCard","PreviewController","viewType","Formulas","contentLevel","itemVal","setActiveIndex","Syllabus","Material","Exams","TeacherMgmt","compName","setCompName","ExamTreeView","rootNode","unitNodes","myunitlevelquestionsList","mytopiclevelquestionsList","subjectQueElm","mysubjectquestionsList","subjectELM","retryAllowed","showAnswer","isForLevelPromotion","examSettings","setExamSettings","onChangeExamSetting","comp","top","bottom","leaf","setAvbQue","GrowlDemo","sticky","clear","QuestionAvailable","avaialableQue","sourceState","setSourceState","targetState","setTargetState","myavailableQue","que","getInputGroup","showSourceControls","showTargetControls","avbQue","Papers","TipsTricsTreeView","topictipstricksElm","tipstricks","CREATE_TIPSTRICKS","TipsTricksCreation","createTipsTricks","TipsTrics","ExampleTreeView","topicexamplesElm","examples","example","unitLevelexample","subjectRoot","action","actionid","CREATE_EXAMPLE","Example","createExample","createExampleFunction","CREATE_UNIT","CREATE_TOPIC","SyllabusTreeView","createUnit","createTopic","unittopicName","setUnittopicName","TeacherTabbedView","App","layoutMode","layoutColorMode","staticMenuInactive","overlayMenuActive","mobileMenuActive","onWrapperClick","onSidebarClick","createMenu","menuClick","isDesktop","element","classList","add","remove","replace","RegExp","split","join","innerWidth","addClass","document","removeClass","logo","wrapperClass","sidebarClassName","sidebar","path","component","Boolean","hostname","ScrollToTop","prevProps","scrollTo","withRouter","LOGIN_USER","LoginMd","userLogin","handleSubmit","a","password","loginResponse","login","token","localStorage","setItem","class","onSubmit","for","required","client","jwt","httpURL","websocketURL","request","operation","setContext","headers","Authorization","requestLink","ApolloLink","forward","Observable","observer","handle","Promise","resolve","oper","subscribe","next","complete","unsubscribe","wsLink","from","onError","graphQLErrors","networkError","locations","WebSocketLink","uri","reconnect","connectionParams","httpLink","HttpLink","credentials","link","getMainDefinition","kind","ApolloClient","cache","InMemoryCache","getClient","getItem","ReactDOM","render","getElementById"],"mappings":"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M,CACH,CACGI,MAAM,MACND,KAAK,yBAGR,CACGC,MAAM,SACND,KAAK,0BAGR,CACGC,MAAM,SACND,KAAK,oBACLH,MAAM,CACH,CACGI,MAAM,SACND,KAAK,qBACLH,MAAM,CACH,CACGI,MAAM,QACND,KAAK,uBAId,CACGA,KAAK,mBACLC,MAAM,YAMrB,CACGA,MAAM,SACND,KAAK,uBACLH,MAAM,CACH,CACGI,MAAM,OACND,KAAK,qBACLH,MAAM,CACH,CACGI,MAAM,OACND,KAAK,6BAER,CACGC,MAAM,SACND,KAAK,gCAId,CACGC,MAAM,WACND,KAAK,6BACLH,MAAM,CACH,CACGI,MAAM,SACND,KAAK,kCAMpB,CACGC,MAAM,OACND,KAAK,0BAIbH,MAAO,CACH,CACII,MAAO,UACPJ,MAAO,CAAC,CAACI,MAAO,MAAOD,KAAM,mBAAmBR,QAAQ,kBAAMyJ,OAAOC,SAASC,KAAK,gBAC3E,CAAClJ,MAAO,SAAUD,KAAM,oBAAqBW,IAAK,4BAE9D,CACIV,MAAO,UACPJ,MAAO,CAAC,CAACI,MAAO,UAAWD,KAAM,kBAAkBR,QAAQ,kBAAMyJ,OAAOC,SAASC,KAAK,MAC9E,CAAClJ,MAAO,WAAYD,KAAM,4BAK1CoJ,eAAgB,CACZ,CACInJ,MAAM,YACND,KAAK,mBACLH,MAAM,CACH,CACGI,MAAM,MACND,KAAK,mBACLH,MAAM,CACH,CACGI,MAAM,WACND,KAAK,wBAER,CACGC,MAAM,QACND,KAAK,uBAKd,CACGC,MAAM,SACND,KAAK,qBAER,CACGqJ,WAAU,GAEb,CACGpJ,MAAM,SACND,KAAK,+BAId,CACGC,MAAM,SACND,KAAK,qBACLH,MAAM,CACH,CACGI,MAAM,OACND,KAAK,0BAER,CACGC,MAAM,QACND,KAAK,2BAER,CACGC,MAAM,SACND,KAAK,4BAER,CACGC,MAAM,UACND,KAAK,+BAKd,CACGC,MAAM,WACND,KAAK,mBACLH,MAAM,CACH,CACGI,MAAM,MACND,KAAK,yBAGR,CACGC,MAAM,SACND,KAAK,0BAGR,CACGC,MAAM,SACND,KAAK,oBACLH,MAAM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","file":"static/js/main.e12c1028.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {InputText} from 'primereact/inputtext';\nimport PropTypes from 'prop-types';\n\nexport class AppTopbar extends Component {\n\n    static defaultProps = {\n        onToggleMenu: null\n    }\n\n    static propTypes = {\n        onToggleMenu: PropTypes.func.isRequired\n    }\n\n    render() {\n        return (\n            <div className=\"layout-topbar clearfix\">\n                <button className=\"p-link layout-menu-button\" onClick={this.props.onToggleMenu}>\n                    <span className=\"pi pi-bars\"/>\n                </button>\n                <div className=\"layout-topbar-icons\">\n                    <span className=\"layout-topbar-search\">\n                        <InputText type=\"text\" placeholder=\"Search\" />\n                        <span className=\"layout-topbar-search-icon pi pi-search\"/>\n                    </span>\n                    <button className=\"p-link\">\n                        <span className=\"layout-topbar-item-text\">Events</span>\n                        <span className=\"layout-topbar-icon pi pi-calendar\"/>\n                        <span className=\"layout-topbar-badge\">5</span>\n                    </button>\n                    <button className=\"p-link\">\n                        <span className=\"layout-topbar-item-text\">Settings</span>\n                        <span className=\"layout-topbar-icon pi pi-cog\"/>\n                    </button>\n                    <button className=\"p-link\">\n                        <span className=\"layout-topbar-item-text\">User</span>\n                        <span className=\"layout-topbar-icon pi pi-user\"/>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nclass AppSubmenu extends Component {\n  static defaultProps = {\n    className: null,\n    items: null,\n    onMenuItemClick: null,\n    root: false,\n  };\n\n  static propTypes = {\n    className: PropTypes.string,\n    items: PropTypes.array,\n    onMenuItemClick: PropTypes.func,\n    root: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { activeIndex: null };\n  }\n\n  onMenuItemClick(event, item, index) {\n    //avoid processing disabled items\n    if (item.disabled) {\n      event.preventDefault();\n      return true;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n    }\n\n    if (index === this.state.activeIndex) this.setState({ activeIndex: null });\n    else this.setState({ activeIndex: index });\n\n    if (this.props.onMenuItemClick) {\n      this.props.onMenuItemClick({\n        originalEvent: event,\n        item: item,\n      });\n    }\n  }\n\n  renderLinkContent(item) {\n    let submenuIcon = item.items && (\n      <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>\n    );\n    let badge = item.badge && (\n      <span className=\"menuitem-badge\">{item.badge}</span>\n    );\n\n    return (\n      <React.Fragment>\n        <i className={item.icon}></i>\n        <span>{item.label}</span>\n        {submenuIcon}\n        {badge}\n      </React.Fragment>\n    );\n  }\n\n  renderLink(item, i) {\n    let content = this.renderLinkContent(item);\n\n    if (item.to) {\n      return (\n        <NavLink\n          activeClassName=\"active-route\"\n          to={item.to}\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\n          exact\n          target={item.target}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\n          target={item.target}\n        >\n          {content}\n        </a>\n      );\n    }\n  }\n\n  render() {\n    let items =\n      this.props.items &&\n      this.props.items.map((item, i) => {\n        let active = this.state.activeIndex === i;\n        let styleClass = classNames(item.badgeStyleClass, {\n          \"active-menuitem\": active && !item.to,\n        });\n\n        return (\n          <li className={styleClass} key={i}>\n            {item.items && this.props.root === true && (\n              <div className=\"arrow\"></div>\n            )}\n            {this.renderLink(item, i)}\n            <AppSubmenu\n              items={item.items}\n              onMenuItemClick={this.props.onMenuItemClick}\n            />\n          </li>\n        );\n      });\n\n    return items ? <ul className={this.props.className}>{items}</ul> : null;\n  }\n}\n\nexport class AppMenu extends Component {\n  static defaultProps = {\n    model: null,\n    onMenuItemClick: null,\n  };\n\n  static propTypes = {\n    model: PropTypes.array,\n    onMenuItemClick: PropTypes.func,\n  };\n\n  render() {\n    return (\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={this.props.model}\n          className=\"layout-menu\"\n          onMenuItemClick={this.props.onMenuItemClick}\n          root={true}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\nexport class AppProfile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      expanded: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(event) {\n    this.setState({ expanded: !this.state.expanded });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"layout-profile\">\n        <div>\n          <img src=\"assets/layout/images/profile.png\" alt=\"\" />\n        </div>\n        <button className=\"p-link layout-profile-link\" onClick={this.onClick}>\n          <span className=\"username\">Harish Muleva</span>\n          <i className=\"pi pi-fw pi-cog\" />\n        </button>\n        <ul\n          className={classNames({\n            \"layout-profile-expanded\": this.state.expanded,\n          })}\n        >\n          <li>\n            <button className=\"p-link\">\n              <i className=\"pi pi-fw pi-user\" />\n              <span>Account</span>\n            </button>\n          </li>\n          <li>\n            <button className=\"p-link\">\n              <i className=\"pi pi-fw pi-inbox\" />\n              <span>Notifications</span>\n              <span className=\"menuitem-badge\">2</span>\n            </button>\n          </li>\n          <li>\n            <button className=\"p-link\">\n              <i className=\"pi pi-fw pi-power-off\" />\n              <span>Logout</span>\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nexport class CarService {\n    \n    getCarsSmall() {\n        return axios.get('assets/demo/data/cars-small.json')\n                .then(res => res.data.data);\n    }\n\n    getCarsMedium() {\n        return axios.get('assets/demo/data/cars-medium.json')\n                .then(res => res.data.data);\n    }\n\n    getCarsLarge() {\n        return axios.get('assets/demo/data/cars-large.json')\n                .then(res => res.data.data);\n    }\n}","import React, { Component } from \"react\";\nimport { CarService } from \"../service/CarService\";\nimport { Panel } from \"primereact/panel\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from \"primereact/button\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Chart } from \"primereact/chart\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { FullCalendar } from \"primereact/fullcalendar\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\n\nexport function Dashboard() {\n  return (\n    <div className=\"p-grid p-fluid dashboard\">\n      <div className=\"p-col-12 p-lg-4\">\n        <div className=\"card summary\">\n          <span className=\"title\">HCMUsers</span>\n          <span className=\"detail\">Number of visitors</span>\n          <span className=\"count visitors\">12</span>\n          <span className=\"subjectcount visitors\">12</span>\n        </div>\n      </div>\n      <div className=\"p-col-12 p-lg-4\">\n        <div className=\"card summary\">\n          <span className=\"title\">Sales</span>\n          <span className=\"title\">Sales</span>\n          <span className=\"detail\">Number of purchases</span>\n          <span className=\"count purchases\">534</span>\n        </div>\n      </div>\n      <div className=\"p-col-12 p-lg-4\">\n        <div className=\"card summary\">\n          <span className=\"title\">Revenue</span>\n          <span className=\"detail\">Income for today</span>\n          <span className=\"count revenue\">$3,200</span>\n        </div>\n      </div>\n\n      <div className=\"p-col-12 p-md-6 p-xl-3\">\n        <div className=\"highlight-box\">\n          <div\n            className=\"initials\"\n            style={{ backgroundColor: \"#007be5\", color: \"#00448f\" }}\n          >\n            <span>TV</span>\n          </div>\n          <div className=\"highlight-details \">\n            <i className=\"pi pi-search\" />\n            <span>Total Queries</span>\n            <span className=\"count\">523</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"p-col-12 p-md-6 p-xl-3\">\n        <div className=\"highlight-box\">\n          <div\n            className=\"initials\"\n            style={{ backgroundColor: \"#ef6262\", color: \"#a83d3b\" }}\n          >\n            <span>TI</span>\n          </div>\n          <div className=\"highlight-details \">\n            <i className=\"pi pi-question-circle\" />\n            <span>Total Issues</span>\n            <span className=\"count\">81</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"p-col-12 p-md-6 p-xl-3\">\n        <div className=\"highlight-box\">\n          <div\n            className=\"initials\"\n            style={{ backgroundColor: \"#20d077\", color: \"#038d4a\" }}\n          >\n            <span>OI</span>\n          </div>\n          <div className=\"highlight-details \">\n            <i className=\"pi pi-filter\" />\n            <span>Open Issues</span>\n            <span className=\"count\">21</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"p-col-12 p-md-6 p-xl-3\">\n        <div className=\"highlight-box\">\n          <div\n            className=\"initials\"\n            style={{ backgroundColor: \"#f9c851\", color: \"#b58c2b\" }}\n          >\n            <span>CI</span>\n          </div>\n          <div className=\"highlight-details \">\n            <i className=\"pi pi-check\" />\n            <span>Closed Issues</span>\n            <span className=\"count\">60</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport class CountryService {\n\n    getCountries(_this) {\n        return axios.get('assets/demo/data/countries.json')\n            .then(res => res.data.data)\n            .then(data => {\n                _this.setState({ countriesData: data });\n                return data;\n            });\n    }\n}","import React, { Component } from 'react';\nimport {CountryService} from '../service/CountryService';\nimport {InputText} from 'primereact/inputtext';\nimport {InputTextarea} from 'primereact/inputtextarea';\nimport {AutoComplete} from 'primereact/autocomplete';\nimport {MultiSelect} from 'primereact/multiselect';\nimport {Calendar} from 'primereact/calendar';\nimport {Chips} from 'primereact/chips';\nimport {Checkbox} from 'primereact/checkbox';\nimport {RadioButton} from 'primereact/radiobutton';\nimport {InputSwitch} from 'primereact/inputswitch';\nimport {Dropdown} from 'primereact/dropdown';\nimport {Password} from 'primereact/password';\nimport {Spinner} from 'primereact/spinner';\nimport {Slider} from 'primereact/components/slider/Slider';\nimport {ListBox} from 'primereact/listbox';\nimport {Rating} from 'primereact/rating';\nimport {ColorPicker} from 'primereact/colorpicker';\nimport {Editor} from 'primereact/editor';\nimport {ToggleButton} from 'primereact/togglebutton';\nimport {SelectButton} from 'primereact/selectbutton';\nimport {Button} from 'primereact/button';\nimport {SplitButton} from 'primereact/splitbutton';\n\nexport class FormsDemo extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            countriesData: [],\n            cars: [],\n            selectedType: null,\n            chipsValue: [],\n            date1: null,\n            date2: null,\n            date3: null,\n            date4: null,\n            date5: null,\n            date6: null,\n            date7: null,\n            checkboxValue: [],\n            radioValue: null,\n            inputSwitchValue: false,\n            dropdownCity: null,\n            spinnerValue: null,\n            sliderValue: [20,80],\n            listBoxCity: null,\n            ratingValue: null,\n            colorPickerValue: null,\n            inputGroupValue: null,\n            carOptions: [\n                {label: 'Audi', value: 'Audi'},\n                {label: 'BMW', value: 'BMW'},\n                {label: 'Fiat', value: 'Fiat'},\n                {label: 'Honda', value: 'Honda'},\n                {label: 'Jaguar', value: 'Jaguar'},\n                {label: 'Mercedes', value: 'Mercedes'},\n                {label: 'Renault', value: 'Renault'},\n                {label: 'VW', value: 'VW'},\n                {label: 'Volvo', value: 'Volvo'}\n            ],\n            cities: [\n                {label: 'Select City', value: null},\n                {label: 'New York', value: 'New York'},\n                {label: 'Rome', value: 'Rome'},\n                {label: 'London', value: 'London'},\n                {label: 'Istanbul', value: 'Istanbul'},\n                {label: 'Paris', value: 'Paris'}\n            ],\n            listBoxCities: [\n                {label: 'Madrid', value: 'Madrid'},\n                {label: 'Geneva', value: 'Geneva'},\n                {label: 'Los Angeles', value: 'Los Angeles'},\n                {label: 'Monaco', value: 'Monaco'},\n                {label: 'Berlin', value: 'Berlin'}\n            ],\n            types: [\n                {label: 'Apartment', value: 'Apartment'},\n                {label: 'House', value: 'House'},\n                {label: 'Studio', value: 'Studio'}\n            ],\n            splitButtonItems: [\n                {label: 'Update', icon: 'pi pi-refresh'},\n                {label: 'Delete', icon: 'pi pi-times'},\n                {label: 'Home', icon: 'pi pi-home', url: 'http://www.primefaces.org/primereact'}\n            ]\n        };\n\n        this.countryService = new CountryService();\n        this.onCheckboxChange = this.onCheckboxChange.bind(this);\n        this.filterCountry = this.filterCountry.bind(this);\n        this.filterBrands = this.filterBrands.bind(this);\n        this.autoCompleteItemTemplate = this.autoCompleteItemTemplate.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({countriesData: this.countryService.getCountries(this)})\n        this.brands = ['Audi', 'BMW', 'Fiat', 'Ford', 'Honda', 'Jaguar', 'Mercedes', 'Renault', 'Volvo'];\n    }\n\n    filterCountry(event) {\n        let results = this.state.countriesData.filter((country) => {\n            return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n        this.setState({ filteredCountries: results });\n    }\n\n    filterBrands(event) {\n        setTimeout(() => {\n            let results;\n\n            if (event.query.length === 0) {\n                results = [...this.brands];\n            }\n            else {\n                results = this.brands.filter((brand) => {\n                    return brand.toLowerCase().startsWith(event.query.toLowerCase());\n                });\n            }\n\n            this.setState({ filteredBrands: results });\n        }, 250);\n    }\n\n    autoCompleteItemTemplate(brand) {\n        if (!brand) {\n            return;\n        }\n\n        return (\n                <div className=\"p-clearfix\">\n                    <img alt={brand} src={`assets/demo/images/car/${brand}.png`} style={{ width: '32px', display: 'inline-block', margin: '5px 0 2px 5px' }} />\n                    <div style={{ fontSize: '18px', float: 'right', margin: '10px 10px 0 0' }}>{brand}</div>\n                </div>\n        );\n    }\n\n    onCheckboxChange(event){\n        let selected = [...this.state.checkboxValue];\n        if (event.checked)\n            selected.push(event.value);\n        else\n            selected.splice(selected.indexOf(event.value), 1);\n\n        this.setState({checkboxValue: selected});\n    }\n\n    render() {\n        return (\n            <div className=\"p-grid p-fluid\">\n                <div className=\"p-col-12 p-lg-6\">\n                    <div className=\"card card-w-title\">\n                        <h1>InputText</h1>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-12 p-md-4\">\n                                <InputText placeholder=\"Name\"/>\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <InputText placeholder=\"Email\"/>\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <InputText placeholder=\"Phone\"/>\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <InputText placeholder=\"Address\" />\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <InputText placeholder=\"Disabled\" disabled={true} />\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <InputText placeholder=\"Error\" className=\"p-error\"/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card card-w-title\">\n                        <h1>TextArea</h1>\n                        <InputTextarea rows={3} cols={30} placeholder=\"Your Message\" autoResize={true} />\n                    </div>\n\n                    <div className=\"card card-w-title\">\n                        <h1>AutoComplete</h1>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-12\">\n                                <label htmlFor=\"acSimple\">Simple</label>\n                            </div>\n                            <div className=\"p-col-12\" style={{marginBottom:'10px'}}>\n                                <AutoComplete minLength={1} placeholder=\"Countries\" id=\"acSimple\" size={30} field=\"name\" suggestions={this.state.filteredCountries}\n                                            completeMethod={this.filterCountry} value={this.state.country} onChange={event => this.setState({ country: event.value, filteredCountries: null})} />\n                            </div>\n                            <div className=\"p-col-12\">\n                                <label htmlFor=\"acAdvanced\">Advanced</label>\n                            </div>\n                            <div className=\"p-col-12\">\n                                <AutoComplete minLength={1} placeholder=\"Hint: type 'v' or 'f'\" id=\"acAdvanced\" size={30} dropdown={true} multiple={true}\n                                            suggestions={this.state.filteredBrands} completeMethod={this.filterBrands} value={this.state.brand}\n                                            onChange={event => this.setState({ brand: event.value, filteredBrands: null})} itemTemplate={this.autoCompleteItemTemplate} />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card card-w-title\">\n                        <h1>MultiSelect</h1>\n                        <MultiSelect value={this.state.cars} options={this.state.carOptions} onChange={event => this.setState({cars: event.value})} filter={true}/>\n                    </div>\n\n                    <div className=\"card card-w-title\">\n                        <h1>Calendar</h1>\n                        <Calendar value={this.state.date1} onChange={(e) => this.setState({date1: e.value})} inline={true} />\n\n                        <div className=\"p-grid-m\" style={{marginTop:'20px'}}>\n                            <div className=\"p-col-12\">\n                                <Calendar placeholder=\"Popup\" value={this.state.date2} onChange={(e) => this.setState({date2: e.value})}/>\n                            </div>\n                            <div className=\"p-col-12\">\n                                <Calendar placeholder=\"DateTime\" showTime={true} dateFormat=\"mm/dd/yy\" value={this.state.date3} onChange={(e) => this.setState({date3: e.value})}/>\n                            </div>\n                            <div className=\"p-col-12\">\n                                <Calendar placeholder=\"Time\" timeOnly={true} showTime={true} value={this.state.date4} onChange={(e) => this.setState({date4: e.value})}/>\n                            </div>\n                            <div className=\"p-col-12\">\n                                <Calendar placeholder=\"Button\" showIcon={true} value={this.state.date5} onChange={(e) => this.setState({date5: e.value})}/>\n                            </div>\n                            <div className=\"p-col-12\">\n                                <Calendar readOnly={true} placeholder=\"Multiple Months\" numberOfMonths={3} value={this.state.date6} onChange={(e) => this.setState({date6: e.value})}/>\n                            </div>\n                            <div className=\"p-col-12\">\n                                <Calendar readOnly={true} dateFormat=\"mm/yy\" placeholder=\"Month Picker\" view=\"month\" value={this.state.date7} onChange={(e) => this.setState({date7: e.value})}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card card-w-title\">\n                        <h1>Chips</h1>\n                        <Chips value={this.state.chipsValue} onChange={(e) => this.setState({chipsValue: e.value})}/>\n                    </div>\n                </div>\n                <div className=\"p-col-12 p-lg-6\">\n                    <div className=\"card card-w-title\">\n                        <h1>Checkboxes</h1>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-12 p-md-4\">\n                                <Checkbox value=\"Ultima\" inputId=\"cb1\" onChange={this.onCheckboxChange} checked={this.state.checkboxValue.indexOf('Ultima') > -1} />\n                                <label htmlFor=\"cb1\" className=\"p-checkbox-label\">Ultima</label>\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <Checkbox value=\"Avalon\" inputId=\"cb2\" onChange={this.onCheckboxChange} checked={this.state.checkboxValue.indexOf('Avalon') > -1} />\n                                <label htmlFor=\"cb2\" className=\"p-checkbox-label\">Avalon</label>\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <Checkbox value=\"Serenity\" inputId=\"cb3\" onChange={this.onCheckboxChange} checked={this.state.checkboxValue.indexOf('Serenity') > -1} />\n                                <label htmlFor=\"cb3\" className=\"p-checkbox-label\">Serenity</label>\n                            </div>\n                        </div>\n                    </div>\n        \n                    <div className=\"card card-w-title\">\n                        <h1>RadioButtons</h1>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-12 p-md-4\">\n                                <RadioButton value=\"Ultima\" inputId=\"rb1\" onChange={event => this.setState({radioValue: event.value})} checked={this.state.radioValue === \"Ultima\"}/>\n                                <label htmlFor=\"rb1\" className=\"p-radiobutton-label\">Ultima</label>\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <RadioButton value=\"Avalon\" inputId=\"rb2\" onChange={event => this.setState({radioValue: event.value})} checked={this.state.radioValue === \"Avalon\"}/>\n                                <label htmlFor=\"rb2\" className=\"p-radiobutton-label\">Avalon</label>\n                            </div>\n                            <div className=\"p-col-12 p-md-4\">\n                                <RadioButton value=\"Serenity\" inputId=\"rb3\" onChange={event => this.setState({radioValue: event.value})} checked={this.state.radioValue === \"Serenity\"}/>\n                                <label htmlFor=\"rb3\" className=\"p-radiobutton-label\">Serenity</label>\n                            </div>\n                        </div>\n                    </div>\n        \n                    <div className=\"card card-w-title\">\n                        <h1>InputSwitch</h1>\n                        <InputSwitch checked={this.state.inputSwitchValue} onChange={event => this.setState({inputSwitchValue: event.value})} />\n                    </div>\n            \n                    <div className=\"card card-w-title\">\n                        <h1>Dropdown</h1>\n                        <Dropdown options={this.state.cities} value={this.state.dropdownCity} onChange={event => this.setState({dropdownCity: event.value})} autoWidth={false} />\n                    </div>\n            \n                    <div className=\"card card-w-title\">\n                        <h1>Password</h1>\n                        <Password/>\n                    </div>\n            \n                    <div className=\"card card-w-title\">\n                        <h1>Spinner</h1>\n                        <Spinner value={this.state.spinnerValue} onChange={event => this.setState({spinnerValue: event.value})} />\n                    </div>\n        \n                    <div className=\"card card-w-title\">\n                        <h1>Slider</h1>\n                        <Slider range={true} value={this.state.sliderValue} onChange={event => this.setState({sliderValue: event.value})} />\n                    </div>\n            \n                    <div className=\"card card-w-title\">\n                        <h1>ListBox</h1>\n                        <ListBox options={this.state.listBoxCities} value={this.state.listBoxCity} onChange={event => this.setState({listBoxCity: event.value})} filter={true} />\n                    </div>\n\n                    <div className=\"card card-w-title\">\n                        <h1>Rating</h1>\n                        <Rating value={this.state.ratingValue} onChange={event => this.setState({ratingValue: event.value})} />\n                    </div>\n            \n                    <div className=\"card card-w-title\">\n                        <h1>ColorPicker</h1>\n                        <ColorPicker inline={true} value={this.state.colorPickerValue} onChange={event => this.setState({colorPickerValue: event.value})} />\n                    </div>\n                </div>\n\n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>Input Groups</h1>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-12 p-md-6\">\n                                <div className=\"p-inputgroup\">\n                                    <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\" /></span>\n                                    <InputText placeholder=\"Username\"/>\n                                </div>\n                            </div>\n\n                            <div className=\"p-col-12 p-md-6\">\n                                <div className=\"p-inputgroup\">\n                                    <span className=\"p-inputgroup-addon\"><i className=\"pi pi-clock\" /></span>\n                                    <span className=\"p-inputgroup-addon\"><i className=\"pi pi-star\"></i></span>\n                                    <InputText placeholder=\"Payment\"/>\n                                    <span className=\"p-inputgroup-addon\">$</span>\n                                    <span className=\"p-inputgroup-addon\">.00</span>\n                                </div>\n                            </div>\n\n                            <div className=\"p-col-12 p-md-6\">\n                                <div className=\"p-inputgroup\">\n                                    <InputText placeholder=\"Search\"/>\n                                    <Button icon=\"pi pi-search\"/>\n                                </div>\n                            </div>\n\n                            <div className=\"p-col-12 p-md-6\">\n                                <div className=\"p-inputgroup\">\n                                    <span className=\"p-inputgroup-addon p-inputgroup-addon-checkbox\">\n                                        <Checkbox checked={this.state.inputGroupValue} onChange={event => this.setState({inputGroupValue: event.checked})} />\n                                    </span>\n                                    <InputText placeholder=\"Confirm\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>Editor</h1>\n                        <Editor style={{height:'320px'}} />\n                    </div>\n                </div>\n\n                <div className=\"p-col-12 p-nogutter\">\n                    <div className=\"p-grid\">\n                        <div className=\"p-col-12 p-lg-6\">\n                            <div className=\"card card-w-title\">\n                                <h1>Buttons</h1>\n\n                                <div className=\"p-grid\">\n                                    <div className=\"p-col-12\">ToggleButton</div>\n                                    <div className=\"p-col-12\">\n                                        <ToggleButton checked={this.state.toggleButtonValue} onChange={event => this.setState({toggleButtonValue: event.value})} />\n                                    </div>\n                            \n                                    <div className=\"p-col-12\">SelectButton</div>\n                                    <div className=\"p-col-12\">\n                                        <SelectButton value={this.state.selectedType} options={this.state.types} onChange={event => this.setState({selectedType: event.value})} />\n                                    </div>\n                            \n                                    <div className=\"p-col-12\">Button</div>\n                                    <div className=\"p-col-12\">\n                                        <Button label=\"Bookmark\"/>\n                                    </div>\n\n                                    <div className=\"p-col-12\">Left Icon</div>\n                                    <div className=\"p-col-12\">\n                                        <Button label=\"Clear\" icon=\"pi pi-times\" />\n                                    </div>\n                            \n                                    <div className=\"p-col-12\">Right Icon</div>\n                                    <div className=\"p-col-12\">\n                                        <Button label=\"Clear\" icon=\"pi pi-times\" iconPos=\"right\"/>\n                                    </div>\n\n                                    <div className=\"p-col-12\">Icon Only</div>\n                                    <div className=\"p-col-12\">\n                                        <Button icon=\"pi pi-check\"/>\n                                    </div>\n\n                                    <div className=\"p-col-12\">Link</div>\n                                    <div className=\"p-col-12\"><a href=\"http://www.primefaces.org\">Homepage</a></div>\n\n                                    <div className=\"p-col-12\">SplitButton</div>\n                                    <div className=\"p-col-12\">\n                                        <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.state.splitButtonItems} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"p-col-12 p-lg-6\">\n                            <div className=\"card card-w-title\">\n                                <h1>Colored Buttons</h1>\n                                <p>Flat buttons with various color alternatives.</p>\n                                \n                                <div className=\"p-grid\">\n                                    <div className=\"p-col-12 p-md-4\" style={{textAlign:'center'}}>\n                                        <Button label=\"Primary\" style={{marginBottom:'10px'}} />\n                                        <Button label=\"Secondary\" style={{marginBottom:'10px'}} className=\"p-button-secondary\" />\n                                        <Button label=\"Success\" style={{marginBottom:'10px'}} className=\"p-button-success\" />\n                                        <Button label=\"Info\" style={{marginBottom:'10px'}} className=\"p-button-info\" />\n                                        <Button label=\"Warning\" style={{marginBottom:'10px'}} className=\"p-button-warning\" />\n                                        <Button label=\"Danger\" style={{marginBottom:'10px'}} className=\"p-button-danger\" />\n                                    </div>\n                                    <div className=\"p-col-12 p-md-4\" style={{textAlign:'center'}}>\n                                        <Button label=\"Primary\" style={{marginBottom:'10px'}} className=\"p-button-raised\"/>\n                                        <Button label=\"Secondary\" style={{marginBottom:'10px'}} className=\"p-button-secondary p-button-raised\" />\n                                        <Button label=\"Success\" style={{marginBottom:'10px'}} className=\"p-button-success p-button-raised\" />\n                                        <Button label=\"Info\" style={{marginBottom:'10px'}} className=\"p-button-info p-button-raised\" />\n                                        <Button label=\"Warning\" style={{marginBottom:'10px'}} className=\"p-button-warning p-button-raised\" />\n                                        <Button label=\"Danger\" style={{marginBottom:'10px'}} className=\"p-button-danger p-button-raised\" />\n                                    </div>\n                                    <div className=\"p-col-12 p-md-4\" style={{textAlign:'center'}}>\n                                        <Button label=\"Primary\" style={{marginBottom:'10px'}}  className=\"p-button-rounded\"/>\n                                        <Button label=\"Secondary\" style={{marginBottom:'10px'}} className=\"p-button-secondary p-button-rounded\" />\n                                        <Button label=\"Success\" style={{marginBottom:'10px'}} className=\"p-button-success p-button-rounded\" />\n                                        <Button label=\"Info\" style={{marginBottom:'10px'}} className=\"p-button-info p-button-rounded\" />\n                                        <Button label=\"Warning\" style={{marginBottom:'10px'}} className=\"p-button-warning p-button-rounded\" />\n                                        <Button label=\"Danger\" style={{marginBottom:'10px'}} className=\"p-button-danger p-button-rounded\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import axios from \"axios\";\n\nexport class NodeService {\n  getFiles(_this) {\n    return axios\n      .get(\"assets/demo/data/files.json\")\n      .then((res) => res.data.data)\n      .then((data) => {\n        _this.setState({ files: data });\n        return data;\n      });\n  }\n\n  getFilesystem(_this) {\n    return axios\n      .get(\"assets/demo/data/filesystem.json\")\n      .then((res) => res.data.data)\n      .then((data) => {\n        _this.setState({ files: data });\n        return data;\n      });\n  }\n\n  getTreeNodes() {\n    return axios\n      .get(\"assets/demo/data/treenodes.json\")\n      .then((res) => res.data.root);\n  }\n\n  getTreeTableNodes() {\n    return axios\n      .get(\"assets/demo/data/treetablenodes.json\")\n      .then((res) => res.data.root);\n  }\n}\n","import React, {Component} from 'react';\nimport {CountryService} from '../service/CountryService';\nimport {CarService} from '../service/CarService';\nimport {NodeService} from '../service/NodeService';\nimport {InputText} from 'primereact/inputtext';\nimport {InputTextarea} from 'primereact/inputtextarea';\nimport {AutoComplete} from 'primereact/autocomplete';\nimport {MultiSelect} from 'primereact/multiselect';\nimport {Calendar} from 'primereact/calendar';\nimport {DataTable} from 'primereact/datatable';\nimport {DataView, DataViewLayoutOptions} from 'primereact/dataview';\nimport {Tree} from 'primereact/tree';\nimport {Checkbox} from 'primereact/checkbox';\nimport {Menu} from 'primereact/menu';\nimport {PanelMenu} from 'primereact/panelmenu';\nimport {InputMask} from 'primereact/inputmask';\nimport {Dropdown} from 'primereact/dropdown';\nimport {Password} from 'primereact/password';\nimport {Spinner} from 'primereact/spinner';\nimport {Slider} from 'primereact/slider';\nimport {ListBox} from 'primereact/listbox';\nimport {RadioButton} from 'primereact/radiobutton';\nimport {PickList} from 'primereact/picklist';\nimport {OrderList} from 'primereact/orderlist';\nimport {ToggleButton} from 'primereact/togglebutton';\nimport {SelectButton} from 'primereact/selectbutton';\nimport {Button} from 'primereact/button';\nimport {SplitButton} from 'primereact/splitbutton';\nimport {Accordion,AccordionTab} from 'primereact/accordion';\nimport {Panel} from 'primereact/panel';\nimport {TabView, TabPanel} from 'primereact/tabview';\nimport {ProgressBar} from 'primereact/progressbar';\nimport {Dialog} from 'primereact/dialog';\nimport {Column} from 'primereact/column';\n\nexport class SampleDemo extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            date: null,\n            country: null,\n            filteredCountries: null,\n            countriesData: [],\n            dropdownCity: null,\n\t\t\tselectedNodeKey: null,\n            cities: [\n                {label: 'Select City', value: null},\n                {label: 'New York', value: 'New York'},\n                {label: 'Rome', value: 'Rome'},\n                {label: 'London', value: 'London'},\n                {label: 'Istanbul', value: 'Istanbul'},\n                {label: 'Paris', value: 'Paris'},\n            ],\n            spinnerValue: null,\n            checkboxValue: [],\n            radioValue: null,\n            sliderValue: null,\n            toggleButtonValue: null,\n            dialogVisible: false,\n            dataTableValue: [],\n            dataTableSelection: null,\n            dataViewValue: [],\n            treeData: [],\n            picklistSourceCars: [],\n            picklistTargetCars: [],\n            orderlistCars: [],\n            layout: 'list',\n            selectedCars: [],\n            carOptions: [\n                {label: 'Audi', value: 'Audi'},\n                {label: 'BMW', value: 'BMW'},\n                {label: 'Fiat', value: 'Fiat'},\n                {label: 'Honda', value: 'Honda'},\n                {label: 'Jaguar', value: 'Jaguar'},\n                {label: 'Mercedes', value: 'Mercedes'},\n                {label: 'Renault', value: 'Renault'},\n                {label: 'VW', value: 'VW'},\n                {label: 'Volvo', value: 'Volvo'}\n            ],\n            listBoxCity: null,\n            listBoxCities: [\n                {label: 'Madrid', value: 'Madrid'},\n                {label: 'Geneva', value: 'Geneva'},\n                {label: 'Los Angeles', value: 'Los Angeles'},\n                {label: 'Monaco', value: 'Monaco'},\n                {label: 'Berlin', value: 'Berlin'}\n            ],\n            selectedType: null,\n            types: [\n                {label: 'Apartment', value: 'Apartment'},\n                {label: 'House', value: 'House'},\n                {label: 'Studio', value: 'Studio'}\n            ],    \n            splitButtonItems: [\n                {label: 'Update', icon: 'pi pi-refresh'},\n                {label: 'Delete', icon: 'pi pi-times'},\n                {label: 'Home', icon: 'pi pi-home', url: 'http://www.primefaces.org/primereact'}\n            ],\n            menuItems: [\n                {\n                    label: 'Options',\n                    items: [{label: 'New', icon: 'pi pi-fw pi-plus',command:() => window.location.hash=\"/fileupload\"},\n                            {label: 'Delete', icon: 'pi pi-fw pi-trash', url: 'http://primetek.com.tr'}]\n                }, \n                {\n                    label: 'Account',\n                    items: [{label: 'Options', icon: 'pi pi-fw pi-cog',command:() => window.location.hash=\"/\"},\n                            {label: 'Sign Out', icon: 'pi pi-fw pi-power-off'} ]\n                }\n            ],\n            panelMenuItems: [\n                {\n                    label:'Documents',\n                    icon:'pi pi-fw pi-file',\n                    items:[\n                       {\n                          label:'New',\n                          icon:'pi pi-fw pi-plus',\n                          items:[\n                             {\n                                label:'Bookmark',\n                                icon:'pi pi-fw pi-bookmark'\n                             },\n                             {\n                                label:'Video',\n                                icon:'pi pi-fw pi-video'\n                             },\n              \n                          ]\n                       },\n                       {\n                          label:'Delete',\n                          icon:'pi pi-fw pi-trash'\n                       },\n                       {\n                          separator:true\n                       },\n                       {\n                          label:'Export',\n                          icon:'pi pi-fw pi-external-link'\n                       }\n                    ]\n                 },\n                 {\n                    label:'Manage',\n                    icon:'pi pi-fw pi-pencil',\n                    items:[\n                       {\n                          label:'Left',\n                          icon:'pi pi-fw pi-align-left'\n                       },\n                       {\n                          label:'Right',\n                          icon:'pi pi-fw pi-align-right'\n                       },\n                       {\n                          label:'Center',\n                          icon:'pi pi-fw pi-align-center'\n                       },\n                       {\n                          label:'Justify',\n                          icon:'pi pi-fw pi-align-justify'\n                       },\n              \n                    ]\n                 },\n                 {\n                    label:'Accounts',\n                    icon:'pi pi-fw pi-user',\n                    items:[\n                       {\n                          label:'New',\n                          icon:'pi pi-fw pi-user-plus',\n              \n                       },\n                       {\n                          label:'Delete',\n                          icon:'pi pi-fw pi-user-minus',\n              \n                       },\n                       {\n                          label:'Search',\n                          icon:'pi pi-fw pi-users',\n                          items:[\n                             {\n                                label:'Filter',\n                                icon:'pi pi-fw pi-filter',\n                                items:[\n                                   {\n                                      label:'Print',\n                                      icon:'pi pi-fw pi-print'\n                                   }\n                                ]\n                             },\n                             {\n                                icon:'pi pi-fw pi-bars',\n                                label:'List'\n                             }\n                          ]\n                       }\n                    ]\n                 },\n                 {\n                    label:'Calendar',\n                    icon:'pi pi-fw pi-calendar',\n                    items:[\n                       {\n                          label:'Edit',\n                          icon:'pi pi-fw pi-pencil',\n                          items:[\n                             {\n                                label:'Save',\n                                icon:'pi pi-fw pi-calendar-plus'\n                             },\n                             {\n                                label:'Delete',\n                                icon:'pi pi-fw pi-calendar-minus'\n                             }\n                          ]\n                       },\n                       {\n                          label:'Archieve',\n                          icon:'pi pi-fw pi-calendar-times',\n                          items:[\n                             {\n                                label:'Remove',\n                                icon:'pi pi-fw pi-calendar-minus'\n                             }\n                          ]\n                       }\n                    ]\n                 }\n            ]\n        };\n\n        this.countryService = new CountryService();\n        this.carService = new CarService();\n        this.nodeService = new NodeService();\n\n        this.onCheckboxChange = this.onCheckboxChange.bind(this);\n        this.filterCountry = this.filterCountry.bind(this);\n        \n        this.dataViewItemTemplate = this.dataViewItemTemplate.bind(this);\n        this.orderListTemplate = this.orderListTemplate.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({countriesData: this.countryService.getCountries(this)});\n        this.carService.getCarsSmall().then(data => this.setState({dataTableValue: data}));\n        this.carService.getCarsLarge().then(data => this.setState({dataViewValue: data}));\n        this.nodeService.getTreeNodes(this).then(nodes => this.setState({treeData: nodes}));\n        this.carService.getCarsSmall().then(data => this.setState({picklistSourceCars: data}));\n        this.carService.getCarsSmall().then(data => this.setState({orderlistCars: data}));\n    }\n\n    filterCountry(event) {\n        const results = this.state.countriesData.filter((country) => {\n            return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n\n        this.setState({filteredCountries: results});\n    }\n\n    onCheckboxChange(event){\n        let selected = [...this.state.checkboxValue];\n\n        if(event.checked)\n            selected.push(event.value);\n        else\n            selected.splice(selected.indexOf(event.value), 1);\n\n        this.setState({checkboxValue: selected});\n    }\n\n    orderListTemplate(car){\n        if (!car) {\n            return;\n        }\n\n        return (\n            <div className=\"p-clearfix\">\n                <img src={`assets/demo/images/car/${car.brand}.png`} alt={car.brand} style={{display:'inline-block',margin:'2px 0 2px 2px', width: '50px'}} />\n                <div style={{fontSize:14,float:'right',margin:'15px 5px 0 0'}}>{car.brand} - {car.year} - {car.color}</div>\n            </div>\n        );\n    }\n\n    dataViewItemTemplate(car,layout) {\n        if (!car) {\n            return;\n        }\n\n        let src = \"assets/demo/images/car/\" + car.brand + \".png\";\n\n        if (layout === 'list') {\n            return (\n                <div className=\"p-grid\" style={{padding: '2em', borderBottom: '1px solid #d9d9d9'}}>\n                    <div className=\"p-col-12 p-md-3\">\n                        <img src={src} alt={car.brand} />\n                    </div>\n                    <div className=\"p-col-12 p-md-8 car-details\">\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-2 p-sm-6\">Vin:</div>\n                            <div className=\"p-col-10 p-sm-6\">{car.vin}</div>\n\n                            <div className=\"p-col-2 p-sm-6\">Year:</div>\n                            <div className=\"p-col-10 p-sm-6\">{car.year}</div>\n\n                            <div className=\"p-col-2 p-sm-6\">Brand:</div>\n                            <div className=\"p-col-10 p-sm-6\">{car.brand}</div>\n\n                            <div className=\"p-col-2 p-sm-6\">Color:</div>\n                            <div className=\"p-col-10 p-sm-6\">{car.color}</div>\n                        </div>\n                    </div>\n\n                    <div className=\"p-col-12 p-md-1 search-icon\" style={{marginTop:'40px'}}>\n                        <Button icon=\"pi pi-search\"></Button>\n                    </div>\n                </div>\n            );\n        }\n\n        if (layout === 'grid') {\n            return (\n                <div style={{ padding: '.5em' }} className=\"p-col-12 p-md-3\">\n                    <Panel header={car.vin} style={{ textAlign: 'center' }}>\n                        <img src={`assets/demo/images/car/${car.brand}.png`} alt={car.brand} />\n                        <div className=\"car-detail\">{car.year} - {car.color}</div>\n                        <i className=\"pi pi-search\" style={{ cursor: 'pointer' }}></i>\n                    </Panel>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        const dialogFooter = (\n            <Button label=\"Login\" icon=\"pi pi-user\" onClick={() => this.setState({dialogValue:false})} />\n        );\n        \n        const dataViewHeader = (\n            <div className=\"p-grid\">\n                <div className=\"p-col-6 p-md-8 filter-container\">\n                    <div style={{position:'relative'}}>\n                        <InputText placeholder=\"Search by brand\" onKeyUp={e => this.dv.filter(e.target.value)} />\n                    </div>\n                </div>\n                <div className=\"p-col-6 p-md-4\" style={{textAlign: 'right'}}>\n                    <DataViewLayoutOptions layout={this.state.layout} onChange={(e) => this.setState({layout: e.value})} />\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"p-fluid\">\n                <div className=\"p-grid\">\n                    <div className=\"p-col-12\">\n                        <div className=\"p-messages p-component p-messages-success\" style={{margin: '0 0 1em 0', display: 'block'}}>\n                            <div className=\"p-messages-wrapper\">\n                                <span className=\"p-messages-icon pi pi-fw pi-2x pi-check\"></span>\n                                <ul>\n                                    <li>\n                                        <span className=\"p-messages-detail\">Designer API is a theme engine for the complete PrimeReact UI Suite and includes this demo application \n                                        to test the commonly used components while designing your theme.\n                                        </span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className=\"card card-w-title\">\n                            <h1>Form Elements</h1>\n                            <div className=\"p-grid\">\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"input\">Input</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <InputText id=\"input\" />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"textarea\">Textarea</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <InputTextarea id=\"textarea\" rows={3} cols={30} autoResize={true}></InputTextarea>\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"calendar\">Calendar</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <Calendar id=\"calendar\" value={this.state.date} onChange={event => this.setState({date: event.value})}></Calendar>\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"autocomplete\">AutoComplete</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <AutoComplete minLength={1} placeholder=\"Countries\" id=\"autocomplete\" field=\"name\" suggestions={this.state.filteredCountries}\n                                                completeMethod={this.filterCountry} value={this.state.country}\n                                                onChange={event => this.setState({country: event.value, filteredCountries: null})}\n                                    />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"dropdown\">Dropdown</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <Dropdown options={this.state.cities} value={this.state.dropdownCity} onChange={event => this.setState({dropdownCity: event.value})} autoWidth={false} />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"password\">Password</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <Password id=\"password\" />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"mask\">Mask</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <InputMask id=\"mask\" mask=\"99/99/9999\" slotChar=\"dd/mm/yyyy\" placeholder=\"Date\" />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"spinner\">Spinner</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <Spinner value={this.state.spinnerValue} onChange={event => this.setState({spinnerValue: event.value})} />\n                                </div>\n\n                                <div className=\"p-col-12 p-md-2\">\n                                    Checkbox\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <div className=\"p-grid\">\n                                        <div className=\"p-col-12\">\n                                            <Checkbox value=\"Ultima\" inputId=\"cb1\" onChange={this.onCheckboxChange} checked={this.state.checkboxValue.indexOf('Ultima') > -1} />\n                                            <label htmlFor=\"cb1\" className=\"p-checkbox-label\">Ultima</label>\n                                        </div>\n                                        <div className=\"p-col-12\">\n                                            <Checkbox value=\"Avalon\" inputId=\"cb2\" onChange={this.onCheckboxChange} checked={this.state.checkboxValue.indexOf('Avalon') > -1} />\n                                            <label htmlFor=\"cb2\" className=\"p-checkbox-label\">Avalon</label>\n                                        </div>\n                                        <div className=\"p-col-12\">\n                                            <Checkbox value=\"Serenity\" inputId=\"cb3\" onChange={this.onCheckboxChange} checked={this.state.checkboxValue.indexOf('Serenity') > -1} />\n                                            <label htmlFor=\"cb3\" className=\"p-checkbox-label\">Serenity</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    RadioButton\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <div className=\"p-grid\">\n                                        <div className=\"p-col-12\">\n                                            <RadioButton value=\"Ultima\" inputId=\"rb1\" onChange={event => this.setState({radioValue: event.value})} checked={this.state.radioValue === \"Ultima\"} />\n                                            <label htmlFor=\"rb1\" className=\"p-radiobutton-label\">Ultima</label>\n                                        </div>\n                                        <div className=\"p-col-12\">\n                                            <RadioButton value=\"Avalon\" inputId=\"rb2\" onChange={event => this.setState({radioValue: event.value})} checked={this.state.radioValue === \"Avalon\"} />\n                                            <label htmlFor=\"rb2\" className=\"p-radiobutton-label\">Avalon</label>\n                                        </div>\n                                        <div className=\"p-col-12\">\n                                            <RadioButton value=\"Serenity\" inputId=\"rb3\" onChange={event => this.setState({radioValue: event.value})} checked={this.state.radioValue === \"Serenity\"} />\n                                            <label htmlFor=\"rb3\" className=\"p-radiobutton-label\">Serenity</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"slider\">Slider</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <Slider id=\"slider\" value={this.state.sliderValue} onChange={event => this.setState({sliderValue: event.value})} />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    Button\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <Button label=\"Edit\" icon=\"pi pi-pencil\" />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    SplitButton\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.state.splitButtonItems} />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"multiselect\">MultiSelect</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <MultiSelect id=\"multiselect\" placeholder=\"Choose\" value={this.state.selectedCars} options={this.state.carOptions} onChange={event => this.setState({selectedCars: event.value})} />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    ToggleButton\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <ToggleButton checked={this.state.toggleButtonValue} onChange={event => this.setState({toggleButtonValue: event.value})} />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    SelectButton\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <SelectButton value={this.state.selectedType} options={this.state.types} onChange={event => this.setState({selectedType: event.value})} />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    <label htmlFor=\"listbox\">ListBox</label>\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <ListBox value={this.state.listBoxCity} options={this.state.listBoxCities} onChange={event => this.setState({listBoxCity: event.value})} filter={true} />\n                                </div>\n                                <div className=\"p-col-12 p-md-2\">\n                                    Dialog\n                                </div>\n                                <div className=\"p-col-12 p-md-4\">\n                                    <Button label=\"Login\" icon=\"pi pi-external-link\" onClick={() => this.setState({dialogVisible:true})} />\n                                </div>\n                            </div>\n\n                            <Dialog header=\"Login\" visible={this.state.dialogVisible} footer={dialogFooter} onHide={() => this.setState({dialogVisible:false})}>\n                                <div className=\"p-grid\">\n                                    <div className=\"p-col-12\">\n                                        <InputText placeholder=\"Username\" />\n                                    </div>\n                                    <div className=\"p-col-12\">\n                                        <InputText placeholder=\"Password\" />\n                                    </div>\n                                </div>\n                            </Dialog>\n                        </div>\n\n\n                        <div className=\"card card-w-title\">\n                            <h1>DataTable</h1>\n                            <DataTable value={this.state.dataTableValue} selectionMode=\"single\" header=\"DataTable\" selection={this.state.dataTableSelection}\n                                    onSelectionChange={event => this.setState({dataTableSelection: event.value})}>\n                                <Column field=\"vin\" header=\"Vin\" sortable={true} />\n                                <Column field=\"year\" header=\"Year\" sortable={true} />\n                                <Column field=\"brand\" header=\"Brand\" sortable={true} />\n                                <Column field=\"color\" header=\"Color\" sortable={true} />\n                            </DataTable>\n                        </div>\n                    </div>\n                    <div className=\"p-col-12\">\n                        <div className=\"card card-w-title\">\n                            <h1>DataView</h1>\n                            <DataView ref={el => this.dv = el} value={this.state.dataViewValue} filterBy=\"brand\" itemTemplate={this.dataViewItemTemplate}\n                                    paginatorPosition=\"both\" paginator={true} rows={10} header={dataViewHeader} layout={this.state.layout} />\n                        </div>\n                    </div>\n                    <div className=\"p-col-12 p-lg-6\">\n                        <div className=\"card card-w-title\">\n                            <h1>PickList</h1>\n                            <PickList source={this.state.picklistSourceCars} target={this.state.picklistTargetCars} sourceHeader=\"Available\" targetHeader=\"Selected\"\n                                    responsive={true} itemTemplate={(car) => <span>{car.brand}</span>} \n                                    onChange={event => this.setState({picklistSourceCars: event.source, picklistTargetCars: event.target})} />\n                        </div>\n\n                        <div className=\"card card-w-title\">\n                            <h1>OrderList</h1>\n                            <OrderList value={this.state.orderlistCars} responsive={true} header=\"OrderList\" listStyle={{height:250}}\n                                    itemTemplate={this.orderListTemplate} onChange={event => this.setState({orderlistCars: event.value})} />\n                        </div>\n\n                        <div className=\"card card-w-title\">\n                            <h1>ProgressBar</h1>\n                            <ProgressBar value={50} />\n                        </div>\n\n                        <div className=\"card card-w-title\">\n                            <h1>PanelMenu</h1>\n                            <PanelMenu model={this.state.panelMenuItems} />\n                        </div>\n                    </div>\n                    <div className=\"p-col-12 p-lg-6\">\n                        <div className=\"card card-w-title\">\n                            <h1>Accordion Panel</h1>\n                            <Accordion>\n                                <AccordionTab header=\"Godfather I\">\n                                    The story begins as Don Vito Corleone, the head of a New York Mafia family, oversees his daughters wedding.\n                                    His beloved son Michael has just come home from the war, but does not intend to become part of his fathers business.\n                                    Through Michaels life the nature of the family business becomes clear. The business of the family is just like the head\n                                    of the family, kind and benevolent to those who give respect,\n                                    but given to ruthless violence whenever anything stands against the good of the family.\n                                </AccordionTab>\n                                <AccordionTab header=\"Godfather II\">\n                                    Francis Ford Coppolas legendary continuation and sequel to his landmark 1972 film, The_Godfather parallels the young\n                                    Vito Corleone's rise with his son Michael's spiritual fall, deepening The_Godfathers depiction of the dark side of\n                                    the American dream. In the early 1900s, the child Vito flees his Sicilian village for America after the local Mafia kills his family.\n                                    Vito struggles to make a living, legally or illegally, for his wife and growing brood in Little Italy, killing the local Black Hand\n                                    Fanucci after he demands his customary cut of the tyro's business. With Fanucci gone, Vito's communal stature grows.\n                                </AccordionTab>\n                                <AccordionTab header=\"Godfather III\">\n                                    After a break of more than 15 years, director Francis Ford Coppola and writer Mario Puzo returned to the well for this\n                                    third and final story of the fictional Corleone crime family. Two decades have passed, and crime kingpin Michael Corleone,\n                                    now divorced from his wife Kay has nearly succeeded in keeping his promise that his family would one day be completely legitimate.\n                                </AccordionTab>\n                            </Accordion>\n\n                            <h1>TabView</h1>\n                            <TabView>\n                                <TabPanel header=\"Godfather I\" leftIcon=\"pi pi-check\">\n                                    The story begins as Don Vito Corleone, the head of a New York Mafia family, overseeshis daughter's wedding. His beloved son ichael has just come home from the war, but does not intend to become part of his father's business. Through Michael's life the nature of the family business becomes clear. The business of the family is just like the head of the family, kind and benevolent to those who give respect, but given to ruthless violence whenever anything stands against the good of the family.\n                                </TabPanel>\n                                <TabPanel header=\"Godfather II\" leftIcon=\"pi pi-user\">\n                                    Francis Ford Coppola's legendary continuation and sequel to his landmark 1972 film, The_Godfather parallels the young Vito Corleone's rise with his son Michael's spiritual fall, deepening The_Godfather's depiction of the dark side of the American dream. In the early 1900s, the child Vito flees his Sicilian village for America after the local Mafia kills his family. Vito struggles to make a living, legally or illegally, for his wife and growing brood in Little Italy.\n                                </TabPanel>\n                                <TabPanel header=\"Godfather III\">\n                                    The Godfather Part III is set in 1979 and 1980. Michael has moved back to New York and taken great strides to remove the family from crime. He turns over his New York criminal interests to longtime enforcer Joey Zasa. He uses his wealth in an attempt to rehabilitate his reputation through numerous philanthropic acts, administered by a foundation named after his father. A decade earlier, he gave custody of his two children to Kay, who has since remarried.\n                                </TabPanel>\n                            </TabView>\n                        </div>\n\n                        <div className=\"card card-w-title\">\n                            <h1>Panel</h1>\n                            <Panel header=\"Godfather I\" toggleable={true}>\n                                The story begins as Don Vito Corleone, the head of a New York Mafia family, oversees his daughter's wedding.\n                                His beloved son Michael has just come home from the war, but does not intend to become part of his father's business.\n                                Through Michael's life the nature of the family business becomes clear. The business of the family is just like the head of the family,\n                                kind and benevolent to those who give respect, but given to ruthless violence whenever anything stands against the good of the family.\n                            </Panel>\n                        </div>\n\n                        <div className=\"card card-w-title\">\n                            <h1>Tree</h1>\n                            <Tree value={this.state.treeData} selectionMode=\"single\" selectionKeys={this.state.selectedNodeKey} onSelectionChange={e => this.setState({selectedNodeKey: e.value})}/>\n                        </div>\n\n                        <div className=\"card card-w-title\">\n                            <h1>Menu</h1>\n                            <Menu model={this.state.menuItems} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import axios from 'axios';\n\nexport class EventService {\n\n    getEvents() {\n        return axios.get('assets/demo/data/scheduleevents.json')\n            .then(res => res.data.data);\n    }\n}","import React, { Component } from \"react\";\nimport { CarService } from \"../service/CarService\";\nimport { NodeService } from \"../service/NodeService\";\nimport { EventService } from \"../service/EventService\";\nimport { OrganizationChart } from \"primereact/organizationchart\";\nimport { DataTable } from \"primereact/datatable\";\nimport { FullCalendar } from \"primereact/fullcalendar\";\nimport { Tree } from \"primereact/tree\";\nimport { TreeTable } from \"primereact/treetable\";\nimport { Column } from \"primereact/column\";\nimport { PickList } from \"primereact/picklist\";\nimport { OrderList } from \"primereact/orderlist\";\nimport { Panel } from \"primereact/panel\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { DataView, DataViewLayoutOptions } from \"primereact/dataview\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nexport class DataDemo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dataTableValue: [],\n      dataViewValue: [],\n      picklistSourceCars: [],\n      picklistTargetCars: [],\n      orderlistCars: [],\n      treeData1: [],\n      treeData2: [],\n      selectedFile: null,\n      selectedFiles: null,\n      documents: [],\n      documentsSelection: null,\n      fullCalendarEvents: [],\n      layout: \"list\",\n      sortOptions: [\n        { label: \"Newest First\", value: \"!year\" },\n        { label: \"Oldest First\", value: \"year\" },\n        { label: \"Brand\", value: \"brand\" },\n      ],\n      organizationChartValue: [\n        {\n          label: \"F.C Barcelona\",\n          expanded: true,\n          children: [\n            {\n              label: \"F.C Barcelona\",\n              expanded: true,\n              children: [\n                {\n                  label: \"Chelsea FC\",\n                },\n                {\n                  label: \"F.C. Barcelona\",\n                },\n              ],\n            },\n            {\n              label: \"Real Madrid\",\n              expanded: true,\n              children: [\n                {\n                  label: \"Bayern Munich\",\n                },\n                {\n                  label: \"Real Madrid\",\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n\n    this.carService = new CarService();\n    this.nodeService = new NodeService();\n    this.eventService = new EventService();\n\n    this.dataViewItemTemplate = this.dataViewItemTemplate.bind(this);\n    this.pickListTemplate = this.pickListTemplate.bind(this);\n    this.orderListTemplate = this.orderListTemplate.bind(this);\n    this.onSortChange = this.onSortChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.carService\n      .getCarsMedium()\n      .then((data) => this.setState({ dataTableValue: data }));\n    this.nodeService\n      .getTreeNodes(this)\n      .then((nodes) => this.setState({ treeData1: nodes }));\n    this.nodeService\n      .getTreeNodes(this)\n      .then((nodes) => this.setState({ treeData2: nodes }));\n    this.carService\n      .getCarsLarge()\n      .then((data) => this.setState({ dataViewValue: data }));\n    this.nodeService\n      .getTreeTableNodes()\n      .then((files) => this.setState({ documents: files }));\n    this.carService\n      .getCarsMedium()\n      .then((data) => this.setState({ picklistSourceCars: data }));\n    this.carService\n      .getCarsSmall()\n      .then((data) => this.setState({ orderlistCars: data }));\n    this.eventService\n      .getEvents()\n      .then((events) => this.setState({ fullCalendarEvents: events }));\n  }\n\n  pickListTemplate(car) {\n    if (!car) {\n      return;\n    }\n\n    return (\n      <div className=\"p-clearfix\">\n        <img\n          src={`assets/demo/images/car/${car.brand}.png`}\n          alt={car.brand}\n          style={{\n            display: \"inline-block\",\n            margin: \"2px 0 2px 2px\",\n            width: \"50px\",\n          }}\n        />\n        <div\n          style={{ fontSize: \"16px\", float: \"right\", margin: \"15px 5px 0 0\" }}\n        >\n          {car.brand}\n        </div>\n      </div>\n    );\n  }\n\n  orderListTemplate(car) {\n    if (!car) {\n      return;\n    }\n\n    return (\n      <div className=\"p-clearfix\">\n        <img\n          src={`assets/demo/images/car/${car.brand}.png`}\n          alt={car.brand}\n          style={{\n            display: \"inline-block\",\n            margin: \"2px 0 2px 2px\",\n            width: \"50px\",\n          }}\n        />\n        <div style={{ fontSize: 14, float: \"right\", margin: \"15px 5px 0 0\" }}>\n          {car.year} - {car.color}\n        </div>\n      </div>\n    );\n  }\n\n  dataViewItemTemplate(car, layout) {\n    if (!car) {\n      return;\n    }\n\n    let src = \"assets/demo/images/car/\" + car.brand + \".png\";\n\n    if (layout === \"list\") {\n      return (\n        <div\n          className=\"p-grid\"\n          style={{ padding: \"2em\", borderBottom: \"1px solid #d9d9d9\" }}\n        >\n          <div className=\"p-col-12 p-md-3\">\n            <img src={src} alt={car.brand} />\n          </div>\n          <div className=\"p-col-12 p-md-8 car-details\">\n            <div className=\"p-grid\">\n              <div className=\"p-col-2 p-sm-6\">Vin:</div>\n              <div className=\"p-col-10 p-sm-6\">{car.vin}</div>\n\n              <div className=\"p-col-2 p-sm-6\">Year:</div>\n              <div className=\"p-col-10 p-sm-6\">{car.year}</div>\n\n              <div className=\"p-col-2 p-sm-6\">Brand:</div>\n              <div className=\"p-col-10 p-sm-6\">{car.brand}</div>\n\n              <div className=\"p-col-2 p-sm-6\">Color:</div>\n              <div className=\"p-col-10 p-sm-6\">{car.color}</div>\n            </div>\n          </div>\n\n          <div\n            className=\"p-col-12 p-md-1 search-icon\"\n            style={{ marginTop: \"40px\" }}\n          >\n            <Button icon=\"pi pi-search\"></Button>\n          </div>\n        </div>\n      );\n    }\n\n    if (layout === \"grid\") {\n      return (\n        <div style={{ padding: \".5em\" }} className=\"p-col-12 p-md-3\">\n          <Panel header={car.vin} style={{ textAlign: \"center\" }}>\n            <img\n              src={`assets/demo/images/car/${car.brand}.png`}\n              alt={car.brand}\n            />\n            <div className=\"car-detail\">\n              {car.year} - {car.color}\n            </div>\n            <Button icon=\"pi pi-search\"></Button>\n          </Panel>\n        </div>\n      );\n    }\n  }\n\n  onSortChange(event) {\n    let value = event.value;\n\n    if (value.indexOf(\"!\") === 0)\n      this.setState({\n        sortOrder: -1,\n        sortField: value.substring(1, value.length),\n        sortKey: value,\n      });\n    else this.setState({ sortOrder: 1, sortField: value, sortKey: value });\n  }\n\n  render() {\n    let fullcalendarOptions = {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      defaultView: \"dayGridMonth\",\n      defaultDate: \"2016-02-01\",\n      header: {\n        left: \"prev,next\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n      },\n      editable: true,\n    };\n\n    const header = (\n      <div className=\"p-grid\">\n        <div className=\"p-col-12 p-md-4\" style={{ textAlign: \"left\" }}>\n          <Dropdown\n            options={this.state.sortOptions}\n            value={this.state.sortKey}\n            placeholder=\"Sort By\"\n            onChange={this.onSortChange}\n          />\n        </div>\n        <div className=\"p-col-6 p-md-4\">\n          <InputText\n            placeholder=\"Search by brand\"\n            onKeyUp={(event) => this.dv.filter(event.target.value)}\n          />\n        </div>\n        <div className=\"p-col-6 p-md-4\" style={{ textAlign: \"right\" }}>\n          <DataViewLayoutOptions\n            layout={this.state.layout}\n            onChange={(event) => this.setState({ layout: event.value })}\n          />\n        </div>\n      </div>\n    );\n\n    return (\n      <div className=\"p-grid\">\n        <div className=\"p-col-12\">\n          <div className=\"card card-w-title\">\n            <h1>DataTable</h1>\n            <DataTable\n              value={this.state.dataTableValue}\n              paginatorPosition=\"both\"\n              selectionMode=\"single\"\n              header=\"List of Cars\"\n              paginator={true}\n              rows={10}\n              responsive={true}\n              selection={this.state.dataTableSelection}\n              onSelectionChange={(event) =>\n                this.setState({ dataTableSelection: event.value })\n              }\n            >\n              <Column field=\"vin\" header=\"Vin\" sortable={true} />\n              <Column field=\"year\" header=\"Year\" sortable={true} />\n              <Column field=\"brand\" header=\"Brand\" sortable={true} />\n              <Column field=\"color\" header=\"Color\" sortable={true} />\n            </DataTable>\n          </div>\n        </div>\n\n        <div className=\"p-col-12\">\n          <div className=\"card card-w-title\">\n            <h1>DataView</h1>\n            <DataView\n              ref={(el) => (this.dv = el)}\n              value={this.state.dataViewValue}\n              filterBy=\"brand\"\n              itemTemplate={this.dataViewItemTemplate}\n              layout={this.state.layout}\n              paginatorPosition={\"both\"}\n              paginator={true}\n              rows={10}\n              header={header}\n              sortOrder={this.state.sortOrder}\n              sortField={this.state.sortField}\n            />\n          </div>\n        </div>\n\n        <div className=\"p-col-12 p-md-8\">\n          <div className=\"card card-w-title\">\n            <h1>PickList</h1>\n            <PickList\n              source={this.state.picklistSourceCars}\n              target={this.state.picklistTargetCars}\n              sourceHeader=\"Available\"\n              targetHeader=\"Selected\"\n              responsive={true}\n              itemTemplate={this.pickListTemplate}\n              sourceStyle={{ height: 250 }}\n              targetStyle={{ height: 250 }}\n              onChange={(event) =>\n                this.setState({\n                  picklistSourceCars: event.source,\n                  picklistTargetCars: event.target,\n                })\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"p-col-12 p-md-4\">\n          <div className=\"card card-w-title\">\n            <h1>OrderList</h1>\n            <OrderList\n              value={this.state.orderlistCars}\n              responsive={true}\n              header=\"OrderList\"\n              listStyle={{ height: 250 }}\n              itemTemplate={this.orderListTemplate}\n              onChange={(event) =>\n                this.setState({ orderlistCars: event.value })\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"p-col-12\">\n          <div className=\"card card-w-title\">\n            <div className=\"p-grid\">\n              <div className=\"p-col-12 p-md-6\">\n                <h1>Tree</h1>\n                <Tree\n                  value={this.state.treeData1}\n                  selectionMode=\"single\"\n                  selectionKeys={this.state.selectedFile}\n                  onSelectionChange={(event) =>\n                    this.setState({ selectedFile: event.value })\n                  }\n                />\n              </div>\n              <div className=\"p-col-12 p-md-6\">\n                <h1>Checkbox Tree</h1>\n                <Tree\n                  value={this.state.treeData2}\n                  selectionMode=\"checkbox\"\n                  selectionKeys={this.state.selectedFiles}\n                  onSelectionChange={(event) =>\n                    this.setState({ selectedFiles: event.value })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"p-col-12\">\n          <div className=\"card card-w-title\">\n            <h1>Organization Chart</h1>\n            <OrganizationChart value={this.state.organizationChartValue} />\n          </div>\n        </div>\n\n        <div className=\"p-col-12\">\n          <div className=\"card card-w-title\">\n            <h1>TreeTable</h1>\n            <TreeTable\n              value={this.state.documents}\n              header=\"Documents\"\n              selectionMode=\"single\"\n              selectionKeys={this.state.documentsSelection}\n              onSelectionChange={(event) =>\n                this.setState({ documentsSelection: event.value })\n              }\n            >\n              <Column field=\"name\" header=\"Name\" expander></Column>\n              <Column field=\"size\" header=\"Size\"></Column>\n              <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n          </div>\n        </div>\n\n        <div className=\"p-col-12\">\n          <div className=\"card card-w-title\">\n            <h1>Schedule</h1>\n            <FullCalendar\n              events={this.state.fullCalendarEvents}\n              options={fullcalendarOptions}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Accordion, AccordionTab} from 'primereact/accordion';\nimport {Fieldset} from 'primereact/fieldset';\nimport {Panel} from 'primereact/panel';\nimport {TabView, TabPanel} from 'primereact/tabview';\nimport {Toolbar} from 'primereact/toolbar';\nimport {Button} from 'primereact/button';\n\nexport class PanelsDemo extends Component {\n\n    render() {\n        return (\n            <div className=\"p-grid\">\n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>AccordionPanel</h1>\n                        <Accordion>\n                            <AccordionTab header=\"Godfather I\">\n                                The story begins as Don Vito Corleone, the head of a New York Mafia family, overseeshis daughter's wedding. His beloved son ichael has just come home from the war, but does not intend to become part of his father's business. Through Michael's life the nature of the family business becomes clear. The business of the family is just like the head of the family, kind and benevolent to those who give respect, but given to ruthless violence whenever anything stands against the good of the family.\n                            </AccordionTab>\n                            <AccordionTab header=\"Godfather II\">\n                                Francis Ford Coppola's legendary continuation and sequel to his landmark 1972 film, The_Godfather parallels the young Vito Corleone's rise with his son Michael's spiritual fall, deepening The_Godfather's depiction of the dark side of the American dream. In the early 1900s, the child Vito flees his Sicilian village for America after the local Mafia kills his family. Vito struggles to make a living, legally or illegally, for his wife and growing brood in Little Italy.\n                            </AccordionTab>\n                            <AccordionTab header=\"Godfather III\">\n                                The Godfather Part III is set in 1979 and 1980. Michael has moved back to New York and taken great strides to remove the family from crime. He turns over his New York criminal interests to longtime enforcer Joey Zasa. He uses his wealth in an attempt to rehabilitate his reputation through numerous philanthropic acts, administered by a foundation named after his father. A decade earlier, he gave custody of his two children to Kay, who has since remarried.\n                            </AccordionTab>\n                        </Accordion>\n                    </div>\n                </div>\n\n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>Panel</h1>\n                        <Panel header=\"Godfather I\" toggleable={true}>\n                            The story begins as Don Vito Corleone, the head of a New York Mafia family, oversees his daughter's wedding.\n                            His beloved son Michael has just come home from the war, but does not intend to become part of his father's business.\n                            Through Michael's life the nature of the family business becomes clear. The business of the family is just like the head of the family,\n                            kind and benevolent to those who give respect, but given to ruthless violence whenever anything stands against the good of the family.\n                        </Panel>\n                    </div>\n                </div>\n\n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>TabView</h1>\n                        <TabView>\n                            <TabPanel header=\"Godfather I\" leftIcon=\"pi pi-check\">\n                                The story begins as Don Vito Corleone, the head of a New York Mafia family, overseeshis daughter's wedding. His beloved son ichael has just come home from the war, but does not intend to become part of his father's business. Through Michael's life the nature of the family business becomes clear. The business of the family is just like the head of the family, kind and benevolent to those who give respect, but given to ruthless violence whenever anything stands against the good of the family.\n                            </TabPanel>\n                            <TabPanel header=\"Godfather II\" leftIcon=\"pi pi-user\">\n                                Francis Ford Coppola's legendary continuation and sequel to his landmark 1972 film, The_Godfather parallels the young Vito Corleone's rise with his son Michael's spiritual fall, deepening The_Godfather's depiction of the dark side of the American dream. In the early 1900s, the child Vito flees his Sicilian village for America after the local Mafia kills his family. Vito struggles to make a living, legally or illegally, for his wife and growing brood in Little Italy.\n                            </TabPanel>\n                            <TabPanel header=\"Godfather III\">\n                                The Godfather Part III is set in 1979 and 1980. Michael has moved back to New York and taken great strides to remove the family from crime. He turns over his New York criminal interests to longtime enforcer Joey Zasa. He uses his wealth in an attempt to rehabilitate his reputation through numerous philanthropic acts, administered by a foundation named after his father. A decade earlier, he gave custody of his two children to Kay, who has since remarried.\n                            </TabPanel>\n                        </TabView>\n                    </div>\n                </div>\n\n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>Fieldset</h1>\n                        <Fieldset legend=\"Toggleable\" toggleable={true}>\n                            The story begins as Don Vito Corleone, the head of a New York Mafia family, oversees his daughter's wedding.\n                            His beloved son Michael has just come home from the war, but does not intend to become part of his father's business.\n                            Through life of Michael the nature of the family business becomes clear. The business of the family is just like the head of the family,\n                            kind and benevolent to those who give respect,\n                            but given to ruthless violence whenever anything stands against the good of the family.\n                        </Fieldset>\n                    </div>\n                </div>\n                \n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>Toolbar</h1>\n                        <Toolbar>\n                            <div className=\"p-toolbar-group-left\">\n                                <Button label=\"New\" icon=\"pi pi-plus\" style={{marginRight:'.25em'}} />\n                                <Button label=\"Upload\" icon=\"pi pi-upload\" className=\"p-button-success\" />\n                                <i className=\"pi pi-bars p-toolbar-separator\" style={{marginRight:'.25em'}} />\n                                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-warning\" />\n                            </div>\n                            <div className=\"p-toolbar-group-right\">\n                                <Button icon=\"pi pi-search\" style={{marginRight:'.25em'}} />\n                                <Button icon=\"pi pi-calendar\" className=\"p-button-success\" style={{marginRight:'.25em'}} />\n                                <Button icon=\"pi pi-times\" className=\"p-button-danger\" />\n                            </div>\n                        </Toolbar>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Redirect, history } from \"react-router-dom\";\nimport { CarService } from \"../service/CarService\";\nimport { OverlayPanel } from \"primereact/overlaypanel\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Lightbox } from \"primereact/lightbox\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport Iframe from \"react-iframe\";\n\nexport class OverlaysDemo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dataTableValue: [],\n      display: false,\n      images: [\n        {\n          source: \"assets/demo/images/sopranos/sopranos1.jpg\",\n          thumbnail: \"assets/demo/images/sopranos/sopranos1_small.jpg\",\n          title: \"Sopranos 1\",\n        },\n        {\n          source: \"assets/demo/images/sopranos/sopranos2.jpg\",\n          thumbnail: \"assets/demo/images/sopranos/sopranos2_small.jpg\",\n          title: \"Sopranos 2\",\n        },\n        {\n          source: \"assets/demo/images/sopranos/sopranos3.jpg\",\n          thumbnail: \"assets/demo/images/sopranos/sopranos3_small.jpg\",\n          title: \"Sopranos 3\",\n        },\n        {\n          source: \"assets/demo/images/sopranos/sopranos4.jpg\",\n          thumbnail: \"assets/demo/images/sopranos/sopranos4_small.jpg\",\n          title: \"Sopranos 4\",\n        },\n      ],\n    };\n\n    this.carService = new CarService();\n  }\n\n  componentDidMount() {\n    this.carService\n      .getCarsSmall()\n      .then((data) => this.setState({ dataTableValue: data.splice(0, 5) }));\n  }\n\n  render() {\n    const dialogFooter = (\n      <div>\n        <Button\n          icon=\"pi pi-check\"\n          onClick={() => this.setState({ display: false })}\n          label=\"Yes\"\n        />\n        <Button\n          icon=\"pi pi-times\"\n          onClick={() => this.setState({ display: false })}\n          label=\"No\"\n          className=\"p-button-secondary\"\n        />\n      </div>\n    );\n\n    return (\n      <div className=\"p-grid p-fluid\">\n        <div className=\"p-col-12 p-lg-6\">\n          <div className=\"card\">\n            <h1>Overlay Panel</h1>\n            <button\n              onClick={() => {\n                this.props.history.push(\"/menus\");\n              }}\n            >\n              QB\n            </button>\n            <div className=\"p-grid\">\n              <div className=\"p-col-6\">\n                <Button\n                  label=\"Image\"\n                  onClick={(event) => this.overlayPanel1.toggle(event)}\n                />\n                <OverlayPanel ref={(el) => (this.overlayPanel1 = el)}>\n                  <img\n                    src=\"assets/demo/images/nature/nature1.jpg\"\n                    alt=\"Nature 1\"\n                  />\n                  <Iframe\n                    url=\"https://zbimages.s3-ap-southeast-1.amazonaws.com/12th/profile/vzKcUbYVuHzJrKC3ZQtuCf.html\"\n                    width=\"450px\"\n                    height=\"450px\"\n                    id=\"sdd\"\n                    className=\"myClassname\"\n                    display=\"initial\"\n                    position=\"relative\"\n                  />\n                </OverlayPanel>\n              </div>\n              <div className=\"p-col-6\">\n                <Button\n                  label=\"DataTable\"\n                  onClick={(event) => this.overlayPanel2.toggle(event)}\n                />\n                <OverlayPanel\n                  ref={(el) => (this.overlayPanel2 = el)}\n                  showCloseIcon={true}\n                  dismissable={false}\n                >\n                  <DataTable\n                    value={this.state.dataTableValue}\n                    style={{ width: \"500px\" }}\n                  >\n                    <Column field=\"vin\" header=\"Vin\" sortable={true} />\n                    <Column field=\"year\" header=\"Year\" sortable={true} />\n                    <Column field=\"brand\" header=\"Brand\" sortable={true} />\n                    <Column field=\"color\" header=\"Color\" sortable={true} />\n                  </DataTable>\n                </OverlayPanel>\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <h1>Dialog</h1>\n            <Dialog\n              header=\"Godfather I\"\n              visible={this.state.display}\n              modal={true}\n              width=\"400px\"\n              footer={dialogFooter}\n              onHide={() => this.setState({ display: false })}\n            >\n              <p>\n                The story begins as Don Vito Corleone, the head of a New York\n                Mafia family, oversees his daughter's wedding. His beloved son\n                Michael has just come home from the war, but does not intend to\n                become part of his father's business. Through Michael's life the\n                nature of the family business becomes clear. The business of the\n                family is just like the head of the family, kind and benevolent\n                to those who give respect, but given to ruthless violence\n                whenever anything stands against the good of the family.\n              </p>\n            </Dialog>\n            <Button\n              icon=\"pi pi-external-link\"\n              label=\"Show\"\n              onClick={() => this.setState({ display: true })}\n            />\n          </div>\n        </div>\n        <div className=\"p-col-12 p-lg-6\">\n          <div className=\"card\">\n            <h1>LightBox</h1>\n            <Lightbox images={this.state.images} />\n          </div>\n          <div className=\"card\">\n            <h1>Tooltip</h1>\n            <InputText\n              tooltip=\"Username\"\n              tooltipOptions={{ position: \"bottom\" }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {BreadCrumb} from 'primereact/breadcrumb';\nimport {Steps} from 'primereact/steps';\nimport {Menubar} from 'primereact/menubar';\nimport {Button} from 'primereact/button';\nimport {Menu} from 'primereact/menu';\nimport {TieredMenu} from 'primereact/tieredmenu';\nimport {ContextMenu} from 'primereact/contextmenu';\nimport {SlideMenu} from 'primereact/slidemenu';\nimport {PanelMenu} from 'primereact/panelmenu';\nimport {TabMenu} from 'primereact/tabmenu';\nimport {MegaMenu} from 'primereact/megamenu';\n\nexport class MenusDemo extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            breadcrumdItems: [\n                {label:'Categories'},\n                {label:'Sports'},\n                {label:'Football'},\n                {label:'Countries'},\n                {label:'Spain'},\n                {label:'F.C. Barcelona'},\n                {label:'Squad'},\n                {label:'Lionel Messi', url: 'https://en.wikipedia.org/wiki/Lionel_Messi'}\n            ],\n            home: {\n                icon: 'pi pi-home', url: 'https://www.primefaces.org/primereact'\n            },\n            stepsItems: [\n                {\n                    label: 'Personal'\n                },\n                {\n                    label: 'Seat'\n                },\n                {\n                    label: 'Payment'\n                },\n                {\n                    label: 'Confirmation'\n                }\n            ],\n            tieredItems: [\n                {\n                    label:'File',\n                    icon:'pi pi-fw pi-file',\n                    items:[\n                       {\n                          label:'New',\n                          icon:'pi pi-fw pi-plus',\n                          items:[\n                             {\n                                label:'Bookmark',\n                                icon:'pi pi-fw pi-bookmark'\n                             },\n                             {\n                                label:'Video',\n                                icon:'pi pi-fw pi-video'\n                             },\n              \n                          ]\n                       },\n                       {\n                          label:'Delete',\n                          icon:'pi pi-fw pi-trash'\n                       },\n                       {\n                          separator:true\n                       },\n                       {\n                          label:'Export',\n                          icon:'pi pi-fw pi-external-link'\n                       }\n                    ]\n                 },\n                 {\n                    label:'Edit',\n                    icon:'pi pi-fw pi-pencil',\n                    items:[\n                       {\n                          label:'Left',\n                          icon:'pi pi-fw pi-align-left'\n                       },\n                       {\n                          label:'Right',\n                          icon:'pi pi-fw pi-align-right'\n                       },\n                       {\n                          label:'Center',\n                          icon:'pi pi-fw pi-align-center'\n                       },\n                       {\n                          label:'Justify',\n                          icon:'pi pi-fw pi-align-justify'\n                       },\n              \n                    ]\n                 },\n                 {\n                    label:'Users',\n                    icon:'pi pi-fw pi-user',\n                    items:[\n                       {\n                          label:'New',\n                          icon:'pi pi-fw pi-user-plus',\n              \n                       },\n                       {\n                          label:'Delete',\n                          icon:'pi pi-fw pi-user-minus',\n              \n                       },\n                       {\n                          label:'Search',\n                          icon:'pi pi-fw pi-users',\n                          items:[\n                             {\n                                label:'Filter',\n                                icon:'pi pi-fw pi-filter',\n                                items:[\n                                   {\n                                      label:'Print',\n                                      icon:'pi pi-fw pi-print'\n                                   }\n                                ]\n                             },\n                             {\n                                icon:'pi pi-fw pi-bars',\n                                label:'List'\n                             }\n                          ]\n                       }\n                    ]\n                 },\n                 {\n                    label:'Events',\n                    icon:'pi pi-fw pi-calendar',\n                    items:[\n                       {\n                          label:'Edit',\n                          icon:'pi pi-fw pi-pencil',\n                          items:[\n                             {\n                                label:'Save',\n                                icon:'pi pi-fw pi-calendar-plus'\n                             },\n                             {\n                                label:'Delete',\n                                icon:'pi pi-fw pi-calendar-minus'\n                             }\n                          ]\n                       },\n                       {\n                          label:'Archieve',\n                          icon:'pi pi-fw pi-calendar-times',\n                          items:[\n                             {\n                                label:'Remove',\n                                icon:'pi pi-fw pi-calendar-minus'\n                             }\n                          ]\n                       }\n                    ]\n                 },\n                 {\n                    label:'Quit',\n                    icon:'pi pi-fw pi-power-off'\n                 }\n            ],\n\n            items: [\n                {\n                    label: 'Options',\n                    items: [{label: 'New', icon: 'pi pi-fw pi-plus',command:() => window.location.hash=\"/fileupload\"},\n                            {label: 'Delete', icon: 'pi pi-fw pi-trash', url: 'http://primetek.com.tr'}]\n                }, \n                {\n                    label: 'Account',\n                    items: [{label: 'Options', icon: 'pi pi-fw pi-cog',command:() => window.location.hash=\"/\"},\n                            {label: 'Sign Out', icon: 'pi pi-fw pi-power-off'} ]\n                }\n            ],\n\n            \n            panelMenuItems: [\n                {\n                    label:'Documents',\n                    icon:'pi pi-fw pi-file',\n                    items:[\n                       {\n                          label:'New',\n                          icon:'pi pi-fw pi-plus',\n                          items:[\n                             {\n                                label:'Bookmark',\n                                icon:'pi pi-fw pi-bookmark'\n                             },\n                             {\n                                label:'Video',\n                                icon:'pi pi-fw pi-video'\n                             },\n              \n                          ]\n                       },\n                       {\n                          label:'Delete',\n                          icon:'pi pi-fw pi-trash'\n                       },\n                       {\n                          separator:true\n                       },\n                       {\n                          label:'Export',\n                          icon:'pi pi-fw pi-external-link'\n                       }\n                    ]\n                 },\n                 {\n                    label:'Manage',\n                    icon:'pi pi-fw pi-pencil',\n                    items:[\n                       {\n                          label:'Left',\n                          icon:'pi pi-fw pi-align-left'\n                       },\n                       {\n                          label:'Right',\n                          icon:'pi pi-fw pi-align-right'\n                       },\n                       {\n                          label:'Center',\n                          icon:'pi pi-fw pi-align-center'\n                       },\n                       {\n                          label:'Justify',\n                          icon:'pi pi-fw pi-align-justify'\n                       },\n              \n                    ]\n                 },\n                 {\n                    label:'Accounts',\n                    icon:'pi pi-fw pi-user',\n                    items:[\n                       {\n                          label:'New',\n                          icon:'pi pi-fw pi-user-plus',\n              \n                       },\n                       {\n                          label:'Delete',\n                          icon:'pi pi-fw pi-user-minus',\n              \n                       },\n                       {\n                          label:'Search',\n                          icon:'pi pi-fw pi-users',\n                          items:[\n                             {\n                                label:'Filter',\n                                icon:'pi pi-fw pi-filter',\n                                items:[\n                                   {\n                                      label:'Print',\n                                      icon:'pi pi-fw pi-print'\n                                   }\n                                ]\n                             },\n                             {\n                                icon:'pi pi-fw pi-bars',\n                                label:'List'\n                             }\n                          ]\n                       }\n                    ]\n                 },\n                 {\n                    label:'Calendar',\n                    icon:'pi pi-fw pi-calendar',\n                    items:[\n                       {\n                          label:'Edit',\n                          icon:'pi pi-fw pi-pencil',\n                          items:[\n                             {\n                                label:'Save',\n                                icon:'pi pi-fw pi-calendar-plus'\n                             },\n                             {\n                                label:'Delete',\n                                icon:'pi pi-fw pi-calendar-minus'\n                             }\n                          ]\n                       },\n                       {\n                          label:'Archieve',\n                          icon:'pi pi-fw pi-calendar-times',\n                          items:[\n                             {\n                                label:'Remove',\n                                icon:'pi pi-fw pi-calendar-minus'\n                             }\n                          ]\n                       }\n                    ]\n                 }\n            ],\n            tabMenuItems: [\n                {label: 'Home', icon: 'pi pi-fw pi-home'},\n                {label: 'Calendar', icon: 'pi pi-fw pi-calendar'},\n                {label: 'Edit', icon: 'pi pi-fw pi-pencil'},\n                {label: 'Documentation', icon: 'pi pi-fw pi-file'},\n                {label: 'Settings', icon: 'pi pi-fw pi-cog'}\n            ],\n            megaMenuItems: [\n                {\n                    label: 'Videos', icon: 'pi pi-fw pi-video',\n                    items: [\n                        [\n                            {\n                                label: 'Video 1',\n                                items: [{label: 'Video 1.1'}, {label: 'Video 1.2'}]\n                            },\n                            {\n                                label: 'Video 2',\n                                items: [{label: 'Video 2.1'}, {label: 'Video 2.2'}]\n                            }\n                        ],\n                        [\n                            {\n                                label: 'Video 3',\n                                items: [{label: 'Video 3.1'}, {label: 'Video 3.2'}]\n                            },\n                            {\n                                label: 'Video 4',\n                                items: [{label: 'Video 4.1'}, {label: 'Video 4.2'}]\n                            }\n                        ]\n                    ]\n                },\n                {\n                    label: 'Users', icon: 'pi pi-fw pi-users',\n                    items: [\n                        [\n                            {\n                                label: 'User 1',\n                                items: [{label: 'User 1.1'}, {label: 'User 1.2'}]\n                            },\n                            {\n                                label: 'User 2',\n                                items: [{label: 'User 2.1'}, {label: 'User 2.2'}]\n                            },\n                        ],\n                        [\n                            {\n                                label: 'User 3',\n                                items: [{label: 'User 3.1'}, {label: 'User 3.2'}]\n                            },\n                            {\n                                label: 'User 4',\n                                items: [{label: 'User 4.1'}, {label: 'User 4.2'}]\n                            }\n                        ],\n                        [\n                            {\n                                label: 'User 5',\n                                items: [{label: 'User 5.1'}, {label: 'User 5.2'}]\n                            },\n                            {\n                                label: 'User 6',\n                                items: [{label: 'User 6.1'}, {label: 'User 6.2'}]\n                            }\n                        ]\n                    ]\n                },\n                {\n                    label: 'Events', icon: 'pi pi-fw pi-calendar',\n                    items: [\n                        [\n                            {\n                                label: 'Event 1',\n                                items: [{label: 'Event 1.1'}, {label: 'Event 1.2'}]\n                            },\n                            {\n                                label: 'Event 2',\n                                items: [{label: 'Event 2.1'}, {label: 'Event 2.2'}]\n                            }\n                        ],\n                        [\n                            {\n                                label: 'Event 3',\n                                items: [{label: 'Event 3.1'}, {label: 'Event 3.2'}]\n                            },\n                            {\n                                label: 'Event 4',\n                                items: [{label: 'Event 4.1'}, {label: 'Event 4.2'}]\n                            }\n                        ]\n                    ]\n                },\n                {\n                    label: 'Settings', icon: 'pi pi-fw pi-cog',\n                    items: [\n                        [\n                            {\n                                label: 'Setting 1',\n                                items: [{label: 'Setting 1.1'}, {label: 'Setting 1.2'}]\n                            },\n                            {\n                                label: 'Setting 2',\n                                items: [{label: 'Setting 2.1'}, {label: 'Setting 2.2'}]\n                            },\n                            {\n                                label: 'Setting 3',\n                                items: [{label: 'Setting 3.1'}, {label: 'Setting 3.2'}]\n                            }\n                        ],\n                        [\n                            {\n                                label: 'Technology 4',\n                                items: [{label: 'Setting 4.1'}, {label: 'Setting 4.2'}]\n                            }\n                        ]\n                    ]\n                }\n            ]\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"p-grid p-fluid\">\n                <div className=\"p-col-12\">\n                    <div className=\"card card-w-title\">\n                        <h1>Breadcrumb</h1>\n                        <BreadCrumb model={this.state.breadcrumdItems} home={this.state.home} />\n                    </div>\n        \n                    <div className=\"card card-w-title\">\n                        <h1>Steps</h1>\n                        <Steps model={this.state.stepsItems} />\n                    </div>\n                \n                    <div className=\"card card-w-title\">\n                        <h1>MenuBar</h1>\n                        <Menubar model={this.state.tieredItems} />\n                    </div>\n                </div>\n\n                <div className=\"p-col-12 p-lg-6\">\n                    <div className=\"card card-w-title\">\n                        <h1>Plain Menu</h1>\n                        <Menu model={this.state.items} />\n                        <Menu model={this.state.items} ref={(el)=>this.menu=el} popup={true} style={{width:250}} />\n                        <Button icon=\"pi pi-external-link\" label=\"Show\" onClick={(event)=>this.menu.toggle(event)} style={{marginTop:'20px', width:'auto'}} />\n                    </div>\n\n                    <div className=\"card card-w-title\">\n                        <h1>TieredMenu</h1>\n                        <TieredMenu model={this.state.tieredItems} style={{width:'250px', marginBottom:'20px'}} />\n                    </div>\n                </div>\n\n                <div className=\"p-col-12 p-lg-6\">\n                    <div className=\"card card-w-title\">\n                        <h1 style={{marginTop:'40px'}}>ContextMenu</h1>\n                        Right click!\n                        <ContextMenu global={true} model={this.state.tieredItems} style={{width:'12.5em'}} />\n                    </div>\n        \n                    <div className=\"card\">\n                        <h1>SlideMenu</h1>\n                        <SlideMenu model={this.state.items} style={{width:'260px'}} menuWidth={260} />\n                    </div>\n\n                    <div className=\"card\">\n                        <h1>PanelMenu</h1>\n                        <PanelMenu model={this.state.panelMenuItems} />\n                    </div>\n                </div>\n\n                <div className=\"p-col-12 p-col-6\">\n                    <div className=\"card\">\n                        <h1>MegaMenu - Horizontal</h1>\n                        <MegaMenu model={this.state.megaMenuItems} />\n\n                        <h1>MegaMenu - Vertical</h1>\n                        <MegaMenu model={this.state.megaMenuItems} orientation=\"vertical\" style={{width:'200px'}} />\n                    </div>\n                </div>\n\n                <div className=\"p-col-12 p-col-6\">\n                    <div className=\"card\">\n                        <h1>TabMenu</h1>\n                        <TabMenu model={this.state.tabMenuItems} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Messages} from 'primereact/messages';\nimport {Growl} from 'primereact/growl';\nimport {Button} from 'primereact/button';\nimport {Message} from 'primereact/message';\nimport {InputText} from 'primereact/inputtext';\n\nexport class MessagesDemo extends Component {\n\n    constructor() {\n        super();\n\n        this.showInfo = this.showInfo.bind(this);\n        this.showSuccess = this.showSuccess.bind(this);\n        this.showWarn = this.showWarn.bind(this);\n        this.showError = this.showError.bind(this);\n    }\n\n    showSuccess() {\n        let msg = {severity: 'success', summary: 'Success Message', detail: 'Order submitted'};\n        this.growl.show(msg);\n        this.messages.show(msg);\n    }\n\n    showInfo() {\n        let msg = {severity: 'info', summary: 'Info Message', detail: 'PrimeReact rocks'};\n        this.growl.show(msg);\n        this.messages.show(msg);\n    }\n\n    showWarn() {\n        let msg = {severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes'};\n        this.growl.show(msg);\n        this.messages.show(msg);\n    }\n\n    showError() {\n        let msg = {severity: 'error', summary: 'Error Message', detail: 'Validation failed'};\n        this.growl.show(msg);\n        this.messages.show(msg);\n    }\n    \n    render() {\n        return (\n            <div className=\"p-grid\">\n                <div className=\"p-col-12\">\n                    <div className=\"card\">\n                        <h1>Messages and Growl</h1>\n                        <Messages ref={(el) => this.messages = el} />\n                        <Growl ref={(el) => this.growl = el} style={{marginTop: '75px'}} />\n            \n                        <Button onClick={this.showInfo} label=\"Info\" className=\"p-button-info\" style={{width:'10em', marginRight:'.25em'}} />\n                        <Button onClick={this.showSuccess} label=\"Success\" className=\"p-button-success\" style={{width:'10em', marginRight:'.25em'}} />\n                        <Button onClick={this.showWarn} label=\"Warn\" className=\"p-button-warning\" style={{width:'10em', marginRight:'.25em'}} />\n                        <Button onClick={this.showError} label=\"Error\" className=\"p-button-danger\"  style={{width:'10em', marginRight:'.25em'}} />\n                    \n                        <h1>Inline Message</h1>\n                        <div className=\"p-grid\">\n                            <div className=\"p-col-12 p-md-3\">\n                                <Message severity=\"info\" text=\"PrimeReact Rocks\" />\n                            </div>\n                            <div className=\"p-col-12 p-md-3\">\n                                <Message severity=\"success\" text=\"Record Saved\" />\n                            </div>\n                            <div className=\"p-col-12 p-md-3\">\n                                <Message severity=\"warn\" text=\"Are you sure?\" />\n                            </div>\n                            <div className=\"p-col-12 p-md-3\">\n                                <Message severity=\"error\" text=\"Field is required\" />\n                            </div>\n                        </div>\n\n                        <div style={{ marginTop: '30px', paddingLeft: '.5em' }}>\n                            <InputText placeholder=\"Username\" className=\"p-error\" style={{marginRight: '.25em'}} />\n                            <Message severity=\"error\" text=\"Field is required\" />\n                        </div>\n                        <div style={{ marginTop: '30px', paddingLeft: '.5em' }}>\n                            <InputText placeholder=\"Email\" className=\"p-error\" style={{marginRight: '.25em'}} />\n                            <Message severity=\"error\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {Chart} from 'primereact/chart';\n\nexport class ChartsDemo extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            lineData: {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                    {\n                        label: 'First Dataset',\n                        data: [65, 59, 80, 81, 56, 55, 40],\n                        fill: false,\n                        borderColor: '#03A9F4'\n                    },\n                    {\n                        label: 'Second Dataset',\n                        data: [28, 48, 40, 19, 86, 27, 90],\n                        fill: false,\n                        borderColor: '#FFC107'\n                    }\n                ]\n            },\n            barData: {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                    {\n                        label: 'My First dataset',\n                        backgroundColor: '#03A9F4',\n                        borderColor: '#03A9F4',\n                        data: [65, 59, 80, 81, 56, 55, 40]\n                    },\n                    {\n                        label: 'My Second dataset',\n                        backgroundColor: '#FFC107',\n                        borderColor: '#FFC107',\n                        data: [28, 48, 40, 19, 86, 27, 90]\n                    }\n                ]\n            },\n            pieData: {\n                labels: ['A','B','C'],\n                datasets: [\n                    {\n                        data: [300, 50, 100],\n                        backgroundColor: [\n                            \"#FFC107\",\n                            \"#03A9F4\",\n                            \"#4CAF50\"\n                        ],\n                        hoverBackgroundColor: [\n                            \"#FFE082\",\n                            \"#81D4FA\",\n                            \"#A5D6A7\"\n                        ]\n                    }]\n            },\n            polarData: {\n                datasets: [{\n                    data: [\n                        11,\n                        16,\n                        7,\n                        3,\n                        14\n                    ],\n                    backgroundColor: [\n                        \"#FFC107\",\n                        \"#03A9F4\",\n                        \"#4CAF50\",\n                        \"#E91E63\",\n                        \"#9C27B0\"\n                    ],\n                    label: 'My dataset'\n                }],\n                labels: [\n                    \"Yellow\",\n                    \"Blue\",\n                    \"Green\",\n                    \"Pink\",\n                    \"Purple\"\n                ]\n            },\n            radarData: {\n                labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n                datasets: [\n                    {\n                        label: 'My First dataset',\n                        backgroundColor: 'rgba(179,181,198,0.2)',\n                        borderColor: 'rgba(179,181,198,1)',\n                        pointBackgroundColor: 'rgba(179,181,198,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(179,181,198,1)',\n                        data: [65, 59, 90, 81, 56, 55, 40]\n                    },\n                    {\n                        label: 'My Second dataset',\n                        backgroundColor: 'rgba(255,99,132,0.2)',\n                        borderColor: 'rgba(255,99,132,1)',\n                        pointBackgroundColor: 'rgba(255,99,132,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(255,99,132,1)',\n                        data: [28, 48, 40, 19, 96, 27, 100]\n                    }\n                ]\n            }\n        };\n    }\n\n    render() {\n        return(\n            <div className=\"p-grid p-fluid\">\n                <div className=\"p-col-12 p-lg-6\">\n                    <div className=\"card\">\n                        <h1 className=\"centerText\">Linear Chart</h1>\n                        <Chart type=\"line\" data={this.state.lineData}/>\n                    </div>\n        \n                    <div className=\"card\">\n                        <h1 className=\"centerText\">Pie Chart</h1>\n                        <Chart type=\"pie\" data={this.state.pieData} height=\"150\"/>\n                    </div>\n        \n                    <div className=\"card\">\n                        <h1 className=\"centerText\">Polar Area Chart</h1>\n                        <Chart type=\"polarArea\" data={this.state.polarData} height=\"150\"/>\n                    </div>\n                </div>\n                <div className=\"p-col-12 p-lg-6\">\n                    <div className=\"card\">\n                        <h1 className=\"centerText\">Bar Chart</h1>\n                        <Chart type=\"bar\" data={this.state.barData}/>\n                    </div>\n\n                    <div className=\"card\">\n                        <h1 className=\"centerText\">Doughnut Chart</h1>\n                        <Chart type=\"doughnut\" data={this.state.pieData} height=\"150\"/>\n                    </div>\n\n                    <div className=\"card\">\n                        <h1 className=\"centerText\">Radar Chart</h1>\n                        <Chart type=\"radar\" data={this.state.radarData} height=\"150\"/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {FileUpload} from 'primereact/fileupload';\nimport {Growl} from 'primereact/growl';\nimport {ProgressBar} from 'primereact/progressbar';\n\nexport class MiscDemo extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            value: 0\n        };\n        \n        this.onUpload = this.onUpload.bind(this);\n    }\n    \n    onUpload() {\n        this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            let val = this.state.value;\n            val += Math.floor(Math.random() * 10) + 1;\n            if (val >= 100) {\n                val = 100;\n                clearInterval(this.interval);\n            }\n            this.setState({value: val});\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"p-grid\">\n                <div className=\"p-col-12\">\n                    <div className=\"card\">\n                        <h1>Upload</h1>\n                        <Growl ref={(el) => this.growl = el} />\n                \n                        <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={this.onUpload} multiple={true} accept=\"image/*\" maxFileSize={1000000} />\n                    </div>\n                </div>\n            \n                <div className=\"p-col-12\">\n                    <div className=\"card\">\n                        <h1>ProgressBar</h1>\n                        <ProgressBar value={this.state.value}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { useState } from \"react\";\nimport { Editor } from \"primereact/editor\";\nimport { Button } from \"primereact/button\";\nexport function EmptyPage() {\n  const [mytext, setMytext] = useState({ text: \"\" });\n  return (\n    <div className=\"p-grid\">\n      <div className=\"p-col-12\">\n        <div className=\"card\">\n          <h1>Empty Page</h1>\n          <p>\n            Use this page to start from scratch and place your custom content.\n          </p>\n          <div className=\"p-col-3\">\n            <Editor\n              style={{ height: \"120px\" }}\n              value={mytext.text}\n              onTextChange={(e) => setMytext({ text: e.htmlValue })}\n            />\n          </div>\n          <p>Value: {mytext.text || \"empty\"}</p>\n          <Button\n            label=\"Clear\"\n            icon=\"pi pi-times\"\n            onClick={() => setMytext({ text: \"\" })}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport class CustomerService {\n  getCustomersLarge() {\n    return axios\n      .get(\"assets/demo/data/customers-large.json\")\n      .then((res) => res.data.data);\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { CustomerService } from \"../../service/CustomerService\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Calendar } from \"primereact/calendar\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { ProgressBar } from \"primereact/progressbar\";\nimport \"./DataTableDemo.css\";\nimport classNames from \"classnames\";\n\nexport default function DataTableDemo() {\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState(null);\n  const [globalFilter, setGlobalFilter] = useState(null);\n  const [selectedRepresentatives, setSelectedRepresentatives] = useState(null);\n  const [dateFilter, setDateFilter] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const customerService = new CustomerService();\n  let dt = useRef(null);\n\n  const representatives = [\n    { name: \"Amy Elsner\", image: \"amyelsner.png\" },\n    { name: \"Anna Fali\", image: \"annafali.png\" },\n    { name: \"Asiya Javayant\", image: \"asiyajavayant.png\" },\n    { name: \"Bernardo Dominic\", image: \"bernardodominic.png\" },\n    { name: \"Elwin Sharvill\", image: \"elwinsharvill.png\" },\n    { name: \"Ioni Bowcher\", image: \"ionibowcher.png\" },\n    { name: \"Ivan Magalhaes\", image: \"ivanmagalhaes.png\" },\n    { name: \"Onyama Limba\", image: \"onyamalimba.png\" },\n    { name: \"Stephen Shaw\", image: \"stephenshaw.png\" },\n    { name: \"XuXue Feng\", image: \"xuxuefeng.png\" },\n  ];\n\n  const statuses = [\n    \"unqualified\",\n    \"qualified\",\n    \"new\",\n    \"negotiation\",\n    \"renewal\",\n    \"proposal\",\n  ];\n\n  useEffect(() => {\n    customerService.getCustomersLarge().then((data) => setCustomers(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderHeader = () => {\n    return (\n      <div>\n        List of Customers\n        <div className=\"p-datatable-globalfilter-container\">\n          <InputText\n            type=\"search\"\n            onInput={(e) => setGlobalFilter(e.target.value)}\n            placeholder=\"Global Search\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const activityBodyTemplate = (rowData) => {\n    return <ProgressBar value={rowData.activity} showValue={false} />;\n  };\n\n  const actionBodyTemplate = () => {\n    return (\n      <Button\n        type=\"button\"\n        icon=\"pi pi-cog\"\n        className=\"p-button-secondary\"\n      ></Button>\n    );\n  };\n\n  const statusBodyTemplate = (rowData) => {\n    return (\n      <span\n        className={classNames(\"customer-badge\", \"status-\" + rowData.status)}\n      >\n        {rowData.status}\n      </span>\n    );\n  };\n\n  const countryBodyTemplate = (rowData) => {\n    let { name, code } = rowData.country;\n\n    return (\n      <React.Fragment>\n        <img\n          src=\"demo/images/flag_placeholder.png\"\n          srcSet=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\"\n          alt={name}\n          className={classNames(\"flag\", \"flag-\" + code)}\n        />\n        <span style={{ verticalAlign: \"middle\", marginLeft: \".5em\" }}>\n          {name}\n        </span>\n      </React.Fragment>\n    );\n  };\n\n  const representativeBodyTemplate = (rowData) => {\n    const src = \"/demo/images/avatar/\" + rowData.representative.image;\n\n    return (\n      <React.Fragment>\n        <img\n          alt={rowData.representative.name}\n          srcSet=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\"\n          src={src}\n          width=\"32\"\n          style={{ verticalAlign: \"middle\" }}\n        />\n        <span style={{ verticalAlign: \"middle\", marginLeft: \".5em\" }}>\n          {rowData.representative.name}\n        </span>\n      </React.Fragment>\n    );\n  };\n\n  const renderRepresentativeFilter = () => {\n    return (\n      <MultiSelect\n        className=\"p-column-filter\"\n        value={selectedRepresentatives}\n        options={representatives}\n        onChange={onRepresentativeFilterChange}\n        itemTemplate={representativeItemTemplate}\n        placeholder=\"All\"\n        optionLabel=\"name\"\n        optionValue=\"name\"\n      />\n    );\n  };\n\n  const representativeItemTemplate = (option) => {\n    const src = \"demo/images/avatar/\" + option.image;\n\n    return (\n      <div className=\"p-multiselect-representative-option\">\n        <img\n          alt={option.name}\n          src={src}\n          srcSet=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\"\n          width=\"32\"\n          style={{ verticalAlign: \"middle\" }}\n        />\n        <span style={{ verticalAlign: \"middle\", marginLeft: \".5em\" }}>\n          {option.name}\n        </span>\n      </div>\n    );\n  };\n\n  const onRepresentativeFilterChange = (event) => {\n    dt.current.filter(event.value, \"representative.name\", \"in\");\n    setSelectedRepresentatives(event.value);\n  };\n\n  const renderDateFilter = () => {\n    return (\n      <Calendar\n        value={dateFilter}\n        onChange={onDateFilterChange}\n        placeholder=\"Registration Date\"\n        dateFormat=\"yy-mm-dd\"\n        className=\"p-column-filter\"\n      />\n    );\n  };\n\n  const onDateFilterChange = (event) => {\n    if (event.value !== null)\n      dt.current.filter(formatDate(event.value), \"date\", \"equals\");\n    else dt.current.filter(null, \"date\", \"equals\");\n\n    setDateFilter(event.value);\n  };\n\n  const filterDate = (value, filter) => {\n    if (\n      filter === undefined ||\n      filter === null ||\n      (typeof filter === \"string\" && filter.trim() === \"\")\n    ) {\n      return true;\n    }\n\n    if (value === undefined || value === null) {\n      return false;\n    }\n\n    return value === formatDate(filter);\n  };\n\n  const formatDate = (date) => {\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    if (day < 10) {\n      day = \"0\" + day;\n    }\n\n    return date.getFullYear() + \"-\" + month + \"-\" + day;\n  };\n\n  const renderStatusFilter = () => {\n    return (\n      <Dropdown\n        value={selectedStatus}\n        options={statuses}\n        onChange={onStatusFilterChange}\n        itemTemplate={statusItemTemplate}\n        showClear={true}\n        placeholder=\"Select a Status\"\n        className=\"p-column-filter\"\n      />\n    );\n  };\n\n  const statusItemTemplate = (option) => {\n    return (\n      <span className={classNames(\"customer-badge\", \"status-\" + option)}>\n        {option}\n      </span>\n    );\n  };\n\n  const onStatusFilterChange = (event) => {\n    dt.current.filter(event.value, \"status\", \"equals\");\n    setSelectedStatus(event.value);\n  };\n\n  const header = renderHeader();\n  const representativeFilter = renderRepresentativeFilter();\n  const dateFilterEl = renderDateFilter();\n  const statusFilter = renderStatusFilter();\n\n  return (\n    <div className=\"datatable-doc-demo\">\n      <DataTable\n        ref={dt}\n        value={customers}\n        header={header}\n        responsive\n        className=\"p-datatable-customers\"\n        dataKey=\"id\"\n        rowHover\n        globalFilter={globalFilter}\n        selection={selectedCustomers}\n        onSelectionChange={(e) => setSelectedCustomers(e.value)}\n        paginator\n        rows={10}\n        emptyMessage=\"No customers found\"\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n        rowsPerPageOptions={[10, 25, 50]}\n      >\n        <Column selectionMode=\"multiple\" style={{ width: \"3em\" }} />\n        <Column\n          field=\"name\"\n          header=\"Name\"\n          sortable\n          filter\n          filterPlaceholder=\"Search by name\"\n        />\n        <Column\n          sortField=\"country.name\"\n          filterField=\"country.name\"\n          header=\"Country\"\n          body={countryBodyTemplate}\n          sortable\n          filter\n          filterMatchMode=\"contains\"\n          filterPlaceholder=\"Search by country\"\n        />\n        <Column\n          sortField=\"representative.name\"\n          filterField=\"representative.name\"\n          header=\"Representative\"\n          body={representativeBodyTemplate}\n          sortable\n          filter\n          filterElement={representativeFilter}\n        />\n        <Column\n          field=\"date\"\n          header=\"Date\"\n          sortable\n          filter\n          filterMatchMode=\"custom\"\n          filterFunction={filterDate}\n          filterElement={dateFilterEl}\n        />\n        <Column\n          field=\"status\"\n          header=\"Status\"\n          body={statusBodyTemplate}\n          sortable\n          filter\n          filterElement={statusFilter}\n        />\n        <Column\n          field=\"activity\"\n          header=\"Activity\"\n          body={activityBodyTemplate}\n          sortable\n          filter\n          filterMatchMode=\"gte\"\n          filterPlaceholder=\"Minimum\"\n        />\n        <Column\n          body={actionBodyTemplate}\n          headerStyle={{ width: \"8em\", textAlign: \"center\" }}\n          bodyStyle={{ textAlign: \"center\", overflow: \"visible\" }}\n        />\n      </DataTable>\n    </div>\n  );\n}\n","import React from \"react\";\nimport DataTableDemo from \"./DataTableDemo\";\nexport default function CardView() {\n  return (\n    <div>\n      <h1>MyCARD VIIEW</h1>\n      <DataTableDemo />\n    </div>\n  );\n}\n","import React from \"react\";\nimport CardView from \"./CardView\";\nexport default function Gridview() {\n  return (\n    <div>\n      <h1>Hello</h1>\n      <div className=\"p-grid\">\n        <div className=\"p-col-6 p-offset-3\">6</div>\n      </div>\n\n      <div className=\"p-grid\">\n        <div className=\"p-col-4\">4 </div>\n        <div className=\"p-col-4 p-offset-4\">4</div>\n      </div>\n      <CardView />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport './Documentation.scss';\n\nexport class Documentation extends Component {\n\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className=\"p-grid\">\n                <div className=\"p-col-12\">\n                    <div className=\"card docs\">\n                        <h1>Current Version</h1>\n                        <p>React 16.8.6 and PrimeReact 3.1.7</p>\n\n                        <h1>Getting Started</h1>\n                        <p>Sigma is an application template for React based on the popular <a href=\"https://github.com/facebookincubator/create-react-app\">create-react-app</a> that allows\n                            creating React apps with no configuration. To get started, clone the <a href=\"https://github.com/primefaces/sigma\">repository</a> from GitHub and install the dependencies with npm or yarn.</p>\n                        <pre>\n{\n`npm install\n`}\n</pre>\n\n                        or\n\n                        <pre>\n{\n`yarn\n`}\n</pre>\n\n                        <p>Next step is running the application using the start script and navigate to <b>http://localhost:3000/</b> to view the application.\n                            That is it, you may now start with the development of your application using the Sigma template.</p>\n\n                        <pre>\n{\n`npm start\n`}\n</pre>\n\n                        or\n\n                        <pre>\n{\n    `yarn start\n`}\n</pre>\n\n                        <h1>React Scripts</h1>\n                        <p>Following commands are derived from create-app-app.</p>\n                        <pre>\n{\n`\"npm start\" or \"yarn start\": Starts the development server\n\"npm test\" or \"yarn test\": Runs the tests.\n\"npm run build\" or \"yarn run build\": Creates a production build.\n`}\n</pre>\n\n                        <h1>Structure</h1>\n                        <p>Sigma consists of 2 main parts; the application layout and the resources. <b>App.js</b> inside src folder is the main component containing the template for the base layout\n                            whereas required resources such as SASS structure for the layout are placed inside the <b>src/layout</b> folder.</p>\n\n                        <h1>Template</h1>\n                        <p>Main layout is the JSX template of the App.js, it is divided into a couple of child components such as topbar, profile, menu and footer. Here is render method of the\n                            App.js component that implements the logic such as menu state, layout modes and so on.\n                        </p>\n\n                        <pre>\n{\n`<div className={wrapperClass} onClick={this.onWrapperClick}>\n    <AppTopbar onToggleMenu={this.onToggleMenu}/>\n\n    <div ref={(el) => this.sidebar = el} className={sidebarClassName} onClick={this.onSidebarClick}>\n        <div className=\"layout-logo\">\n            <img alt=\"Logo\" src={logo} />\n        </div>\n        <AppProfile />\n        <AppMenu model={this.menu} onMenuItemClick={this.onMenuItemClick} />\n    </div>\n\n    <div className=\"layout-main\">\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/forms\" component={FormsDemo} />\n        <Route path=\"/sample\" component={SampleDemo} />\n        <Route path=\"/data\" component={DataDemo} />\n        <Route path=\"/panels\" component={PanelsDemo} />\n        <Route path=\"/overlays\" component={OverlaysDemo} />\n        <Route path=\"/menus\" component={MenusDemo} />\n        <Route path=\"/messages\" component={MessagesDemo} />\n        <Route path=\"/charts\" component={ChartsDemo} />\n        <Route path=\"/misc\" component={MiscDemo} />\n        <Route path=\"/empty\" component={EmptyPage} />\n        <Route path=\"/documentation\" component={Documentation} />\n    </div>\n\n    <AppFooter />\n\n    <div className=\"layout-mask\"></div>\n</div>\n`\n}\n</pre>\n\n                        <h1>Menu</h1>\n                        <p>Menu is a separate component defined in AppMenu.js file based on PrimeReact MenuModel API. In order to define the menuitems,\n                            navigate to createMenu() method App.js file and define your own model as a nested structure. Here is the menu component from the demo application.\n                            Notice that menu object is bound to the model property of AppMenu component as shown above.</p>\n\n                        <pre>\n{\n`\ncreateMenu() {\n    this.menu = [\n        {label: 'Dashboard', icon: 'pi pi-fw pi-home', command: () => {window.location = '#/'}},\n        {\n            label: 'Menu Modes', icon: 'pi pi-fw pi-cog',\n            items: [\n                {label: 'Static Menu', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutMode: 'static'}) },\n                {label: 'Overlay Menu', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutMode: 'overlay'}) }\n            ]\n        },\n        {\n            label: 'Menu Colors', icon: 'pi pi-fw pi-align-left',\n            items: [\n                {label: 'Dark', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutColorMode: 'dark'}) },\n                {label: 'Light', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutColorMode: 'light'}) }\n            ]\n        },\n        {\n            label: 'Components', icon: 'pi pi-fw pi-globe', badge: '9',\n            items: [\n                {label: 'Sample Page', icon: 'pi pi-fw pi-star-o', command: () => {window.location = '#/sample'}},\n                {label: 'Forms', icon: 'pi pi-fw pi-calendar', command: () => {window.location = '#/forms'}},\n                {label: 'Data', icon: 'pi pi-fw pi-align-justify', command: () => {window.location = \"#/data\"}},\n                {label: 'Panels', icon: 'pi pi-fw pi-th-large', command: () => {window.location = \"#/panels\"}},\n                {label: 'Overlays', icon: 'pi pi-fw pi-clone', command: () => {window.location = \"#/overlays\"}},\n                {label: 'Menus', icon: 'pi pi-fw pi-bars', command: () => {window.location = \"#/menus\"}},\n                {label: 'Messages', icon: 'pi pi-fw pi-info-circle', command: () => {window.location = \"#/messages\"}},\n                {label: 'Charts', icon: 'pi pi-fw pi-clock', command: () => {window.location = \"#/charts\"}},\n                {label: 'Misc', icon: 'pi pi-fw pi-filter', command: () => {window.location = \"#/misc\"}}\n            ]\n        },\n        {\n            label: 'Template Pages', icon: 'pi pi-fw pi-file',\n            items: [\n                {label: 'Empty Page', icon: 'pi pi-fw pi-circle-off', command: () => {window.location = \"#/empty\"}}\n            ]\n        },\n        {\n            label: 'Menu Hierarchy', icon: 'pi pi-fw pi-search',\n            items: [\n                {\n                    label: 'Submenu 1', icon: 'pi pi-fw pi-bookmark',\n                    items: [\n                        {\n                            label: 'Submenu 1.1', icon: 'pi pi-fw pi-bookmark',\n                            items: [\n                                {label: 'Submenu 1.1.1', icon: 'pi pi-fw pi-bookmark'},\n                                {label: 'Submenu 1.1.2', icon: 'pi pi-fw pi-bookmark'},\n                                {label: 'Submenu 1.1.3', icon: 'pi pi-fw pi-bookmark'},\n                            ]\n                        },\n                        {\n                            label: 'Submenu 1.2', icon: 'pi pi-fw pi-bookmark',\n                            items: [\n                                {label: 'Submenu 1.2.1', icon: 'pi pi-fw pi-bookmark'},\n                                {label: 'Submenu 1.2.2', icon: 'pi pi-fw pi-bookmark'}\n                            ]\n                        }\n                    ]\n                },\n                {\n                    label: 'Submenu 2', icon: 'pi pi-fw pi-bookmark',\n                    items: [\n                        {\n                            label: 'Submenu 2.1', icon: 'pi pi-fw pi-bookmark',\n                            items: [\n                                {label: 'Submenu 2.1.1', icon: 'pi pi-fw pi-bookmark'},\n                                {label: 'Submenu 2.1.2', icon: 'pi pi-fw pi-bookmark'},\n                                {label: 'Submenu 2.1.3', icon: 'pi pi-fw pi-bookmark'},\n                            ]\n                        },\n                        {\n                            label: 'Submenu 2.2', icon: 'pi pi-fw pi-bookmark',\n                            items: [\n                                {label: 'Submenu 2.2.1', icon: 'pi pi-fw pi-bookmark'},\n                                {label: 'Submenu 2.2.2', icon: 'pi pi-fw pi-bookmark'}\n                            ]\n                        },\n                    ]\n                }\n            ]\n        },\n        {label: 'Documentation', icon: 'pi pi-fw pi-question', command: () => {window.location = \"#/documentation\"}}\n    ];\n}\n`}\n</pre>\n\n                        <p>Dependencies of Sigma are listed below and needs to be added to package.json. Only required\n                            dependency is PrimeReact where optional dependencies exist to enable certain components in PrimeReact.</p>\n\n                        <pre>\n{\n`\"primereact\": \"^3.1.7\",                //required: PrimeReact components\n\"primeicons\": \"1.0.00\"                  //required: Icons\n`\n}\n</pre>\n\n                        <h1>Nova Theme</h1>\n                        <p>Sigma uses the free Nova-Light theme of PrimeReact which is a free theme distributed within PrimeReact, however it can be used with any PrimeReact theme.</p>\n\n                        <h1>SASS Variables</h1>\n                        <p>In case you'd like to customize the layout variables, open _variables.scss file under src/layout folder. Saving the changes\n                            will be reflected instantly at your browser.\n                        </p>\n\n                        <h3>src/layout/layout.scss</h3>\n                        <pre>\n{\n`/* General */\n$fontSize:14px;\n$bodyBgColor:#edf0f5;\n$textColor:#333333;\n$textSecondaryColor:#707070;\n$borderRadius:3px;\n$dividerColor:#e3e3e3;\n$transitionDuration:.2s;\n$maskBgColor:#424242;\n\n/* Menu Common */\n$menuitemBadgeBgColor:#007be5;\n$menuitemBadgeColor:#ffffff;\n$submenuFontSize:13px;\n$menuitemActiveRouteColor:#1fa1fc;\n\n/* Menu Light */\n$menuBgColorFirst:#f3f4f9;\n$menuBgColorLast:#d7dbe8;\n$menuitemColor:#232428;\n$menuitemHoverColor:#0388e5;\n$menuitemActiveColor:#0388e5;\n$menuitemActiveBgColor:#ffffff;\n$menuitemBorderColor:rgba(207, 211, 224, 0.6);\n\n/* Menu Dark */\n$menuDarkBgColorFirst:#4d505b;\n$menuDarkBgColorLast:#3b3e47;\n$menuitemDarkColor:#ffffff;\n$menuitemDarkHoverColor:#0388e5;\n$menuitemDarkActiveColor:#0388e5;\n$menuitemDarkActiveBgColor:#2e3035;\n$menuitemDarkBorderColor:rgba(52, 56, 65, 0.6);\n\n/* Topbar */\n$topbarLeftBgColor:#0388E5;\n$topbarRightBgColor:#07BDF4;\n$topbarItemBadgeBgColor:#ef6262;\n$topbarItemBadgeColor:#ffffff;\n$topbarItemColor:#ffffff;\n$topbarItemHoverColor:#c3e8fb;\n$topbarSearchInputBorderBottomColor:#ffffff;\n$topbarSearchInputColor:#ffffff;\n\n/* Footer */\n$footerBgColor:#ffffff;\n`\n}\n</pre>\n\n                        <h1>Menu Modes</h1>\n                        <p>Menu has 2 modes, static and overlay. Main layout container element in App.js is used to define which mode to use by adding specific classes. List\n                            below indicates the style classes for each mode.</p>\n\n                        <ul>\n                            <li>Static: \"layout-wrapper layout-static\"</li>\n                            <li>Overlay: \"layout-wrapper layout-overlay\"</li>\n                        </ul>\n\n                        <p>For example to create an overlay menu, the div element should be in following form;</p>\n                        <pre>\n&lt;div className=\"layout-wrapper layout-overlay\"&gt;\n</pre>\n\n                        <p>It is also possible to leave the choice to the user by keeping the preference at a component and using an expression to bind it so that user can switch between modes. Sample\n                            application has an example implementation of such use case. Refer to App.js for an example.</p>\n\n                        <h1>Menu Color Scheme</h1>\n                        <p>There are two alternatives as the menu colors schemes; \"light\" and \"dark\". A color scheme is applied using the <i>layout-sidebar-light</i> or <i>layout-sidebar-dark</i>\n                        to the sidebar element.</p>\n\n                        <b>Dark Menu</b>\n<pre>\n&lt;div className=\"layout-sidebar layout-sidebar-dark\"&gt;\n</pre>\n                \n                        <b>Light Menu</b>\n<pre>\n&lt;div className=\"layout-sidebar layout-sidebar-light\"&gt;\n</pre>\n\n                        <h1>Grid CSS</h1>\n                        <p>Sigma uses PrimeFlex CSS Grid throughout the samples. Although any grid library can be used, we recommend using PrimeFlex as your layout framework as it is well tested and supported by PrimeVue. PrimeFlex is\n                        available at <a href=\"https://www.npmjs.com/package/primeflex\">NPM</a>.</p>\n\n                        <h1>Customizing Styles</h1>\n                        <p>It is suggested to write your customizations in <i>src/layout/_overrides.scss</i> file instead of adding them to the\n                        scss files under sass folder to avoid maintenance issues after an update.</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tree } from \"primereact/tree\";\nimport { Button } from \"primereact/button\";\nimport { NodeService } from \"../../service/NodeService\";\nexport function TreeViewContentCreation(props) {\n  let nodeService = new NodeService();\n  const [selectionKeys, setSelectionKeys] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(null);\n  const [nodes, setNodes] = useState(null);\n\n  useEffect(() => {\n    let rootElm = [];\n    // This is Root level and iterate over units\n    if (props.unitData.units) {\n      props.unitData.units.map((unit, index) => {\n        let unitElm = {\n          key: unit.id,\n          label: unit.name,\n          data: {\n            type: \"UNIT\",\n            id: unit.id,\n            name: unit.name,\n            subjectid: props.subjectid,\n          },\n          icon: \"pi pi-fw pi-inbox\",\n        };\n        // If unit contains topic then iterate over topics and add under given unit\n        let topicElm = [];\n        if (unit.topics) {\n          unit.topics.map((topic, index) => {\n            let topicContentsElm = [];\n            //If topic contains content then add into topic node\n            if (topic.contents) {\n              topic.contents.map((content, index) => {\n                topicContentsElm.push({\n                  key: content.id,\n                  label: content.name,\n                  data: {\n                    type: \"CONTENT\",\n                    level: \"TOPIC\",\n                    topic: topic.id,\n                    topicname: topic.name,\n                    id: content.id,\n                    name: content.name,\n                    subjectid: props.subjectid,\n                  },\n                  icon: \"pi pi-fw pi-video\",\n                });\n              });\n              topicElm.push({\n                key: topic.id,\n                label: topic.name,\n                data: {\n                  type: \"TOPIC\",\n                  level: \"UNIT\",\n                  unitname: unit.name,\n                  id: topic.id,\n                  name: topic.name,\n                  subjectid: props.subjectid,\n                },\n                icon: \"pi pi-fw pi-clone\",\n                children: topicContentsElm,\n              });\n            }\n          });\n        }\n\n        // Contents directly under unit\n        //let contentsElm = [];\n        let unitLevelContent = [];\n        if (unit.contents) {\n          unit.contents.map((content, index) => {\n            unitLevelContent.push({\n              key: content.id,\n              label: content.name,\n              data: {\n                type: \"CONTENT\",\n                level: \"UNIT\",\n                id: content.id,\n                name: content.name,\n                subjectid: props.subjectid,\n              },\n              icon: \"pi pi-fw pi-video\",\n            });\n          });\n        }\n\n        unitElm[\"children\"] = [...unitLevelContent, ...topicElm];\n        rootElm.push(unitElm);\n      });\n    }\n    //Contents of Subject\n    if (props.unitData.contents) {\n      props.unitData.contents.map((content, index) => {\n        rootElm.push({\n          key: content.id,\n          label: content.name,\n          data: {\n            type: \"CONTENT\",\n            level: \"SUBJECT\",\n            id: content.id,\n            name: content.name,\n            subjectid: props.subjectid,\n          },\n          icon: \"pi pi-fw pi-video\",\n        });\n      });\n    }\n    setNodes(rootElm);\n    //nodeService.getTreeNodes().then((data) => setNodes(data));\n  }, [props.unitData]);\n  return (\n    <div>\n      <Tree\n        value={nodes}\n        selectionMode=\"single\"\n        selectionKeys={selectionKeys}\n        selectionValue={selectionValue}\n        onSelect={(e) => {\n          props.setTreeData(e.node.data);\n        }}\n        onSelectionValueChange={(e) => {\n          setSelectionKeys(e.value);\n        }}\n      />\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\nconst CREATE_CONTENT = gql`\n  mutation CREATE_CONTENT(\n    $name: String!\n    $level: Int\n    $fileInfo: Json\n    $type: String!\n    $url: String\n    $subject: String\n    $unit: String\n    $topic: String\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n  ) {\n    createContent(\n      data: {\n        name: $name\n        level: $level\n        fileInfo: $fileInfo\n        type: $type\n        url: $url\n        subject: $subject\n        unit: $unit\n        topic: $topic\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n      }\n    ) {\n      id\n      name\n      url\n      type\n      isPublished\n    }\n  }\n`;\nexport { CREATE_CONTENT };\n","import gql from \"graphql-tag\";\n\nconst GET_SUBJECT_SYLLABUS_BY_ID = gql`\n  query GET_SUBJECT_SYLLABUS_BY_ID($id: ID!) {\n    getSubjectById(id: $id) {\n      id\n      name\n      picture\n      units {\n        id\n        name\n        picture\n        description\n        topics {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst GET_SUBJECT_BY_ID = gql`\n  query GET_SUBJECT_BY_ID($id: ID!) {\n    getSubjectById(id: $id) {\n      id\n      name\n      units {\n        id\n        name\n        picture\n        description\n        contents {\n          id\n          name\n          fileInfo\n          type\n          url\n          level\n        }\n        topics {\n          id\n          name\n          contents {\n            id\n            name\n            fileInfo\n            type\n            url\n            level\n          }\n        }\n      }\n      contents {\n        id\n        name\n        fileInfo\n        type\n        url\n        level\n      }\n    }\n  }\n`;\n\nconst GET_ALLFORMULA_SUBJECT_BY_ID = gql`\n  query GET_ALLFORMULA_SUBJECT_BY_ID($id: ID!) {\n    getSubjectById(id: $id) {\n      id\n      name\n      units {\n        id\n        name\n        picture\n        description\n        formulas {\n          id\n          name\n          fileInfo\n          type\n          url\n          level\n        }\n        topics {\n          id\n          name\n          formulas {\n            id\n            name\n            fileInfo\n            type\n            url\n            level\n          }\n        }\n      }\n      formulas {\n        id\n        name\n        fileInfo\n        type\n        url\n        level\n      }\n    }\n  }\n`;\n\nconst GET_ALLTIPSTRICKS_SUBJECT_BY_ID = gql`\n  query GET_ALLTIPSTRICKS_SUBJECT_BY_ID($id: ID!) {\n    getSubjectById(id: $id) {\n      id\n      name\n      units {\n        id\n        name\n        picture\n        description\n        tipstricks {\n          id\n          name\n          fileInfo\n          type\n          url\n          level\n        }\n        topics {\n          id\n          name\n          tipstricks {\n            id\n            name\n            fileInfo\n            type\n            url\n            level\n          }\n        }\n      }\n      tipstricks {\n        id\n        name\n        fileInfo\n        type\n        url\n        level\n      }\n    }\n  }\n`;\n\nconst GET_ALLEXAMPLE_SUBJECT_BY_ID = gql`\n  query GET_ALLEXAMPLE_SUBJECT_BY_ID($id: ID!) {\n    getSubjectById(id: $id) {\n      id\n      name\n      units {\n        id\n        name\n        picture\n        description\n        examples {\n          id\n          name\n          fileInfo\n          type\n          url\n          level\n        }\n        topics {\n          id\n          name\n          examples {\n            id\n            name\n            fileInfo\n            type\n            url\n            level\n          }\n        }\n      }\n      examples {\n        id\n        name\n        fileInfo\n        type\n        url\n        level\n      }\n    }\n  }\n`;\nconst GET_ALLQUESTIONS_SUBJECT_BY_ID = gql`\n  query GET_ALLQUESTIONS_SUBJECT_BY_ID($id: ID!) {\n    getSubjectById(id: $id) {\n      id\n      name\n      units {\n        id\n        name\n        picture\n        description\n        questions {\n          id\n          quetype\n          title\n          descriptionurl\n          descriptionType\n          descriptionfileInfo\n          categories\n          options\n          level\n          explaination\n        }\n        topics {\n          id\n          name\n          questions {\n            id\n            quetype\n            title\n            descriptionurl\n            descriptionType\n            descriptionfileInfo\n            categories\n            options\n            level\n            explaination\n          }\n        }\n      }\n      questions {\n        id\n\n        quetype\n        title\n        descriptionurl\n        descriptionType\n        descriptionfileInfo\n        categories\n        options\n        level\n        explaination\n      }\n    }\n  }\n`;\n\nexport {\n  GET_SUBJECT_SYLLABUS_BY_ID,\n  GET_SUBJECT_BY_ID,\n  GET_ALLFORMULA_SUBJECT_BY_ID,\n  GET_ALLTIPSTRICKS_SUBJECT_BY_ID,\n  GET_ALLQUESTIONS_SUBJECT_BY_ID,\n  GET_ALLEXAMPLE_SUBJECT_BY_ID,\n};\n","import gql from \"graphql-tag\";\nconst GET_UNIT_BY_ID = gql`\n  query GET_UNIT_BY_ID($id: ID!) {\n    getUnitById(id: $id) {\n      id\n      name\n      picture\n      description\n      contents {\n        id\n        name\n        fileInfo\n        type\n        url\n        level\n      }\n      topics {\n        id\n        name\n      }\n    }\n  }\n`;\nexport { GET_UNIT_BY_ID };\n","import S3 from \"react-aws-s3\";\nimport { aws } from \"./keys\";\nconst config = {\n  accessKeyId: aws.accessKeyId,\n  secretAccessKey: aws.secretAccessKey,\n  region: aws.region,\n  dirName: aws.dirName,\n  bucketName: aws.bucketName,\n};\nconst S3UploadFile = (file) => {\n  const ReactS3Client = new S3(config);\n  config[\"dirName\"] = \"12th/profile\";\n  return ReactS3Client.uploadFile(file)\n    .then((data) => {\n      return data.location;\n    })\n    .catch((err) => {\n      console.log(\"Error in file upload\", err);\n      return err;\n    });\n};\nexport default S3UploadFile;\n","export const aws ={\n    accessKeyId:\"AKIAJOBDTPKWEYAAEHCQ\",\n    secretAccessKey:\"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\",\n    region:\"ap-southeast-1\",\n    dirName:\"education\",\n    bucketName:\"zbimages\"\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Card } from \"primereact/card\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Panel } from \"primereact/panel\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Editor } from \"primereact/editor\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { TreeViewContentCreation } from \"./TreeViewContentCreation\";\nimport { CREATE_CONTENT } from \"../../service/graphql/education/teacher/mutations/content\";\n\nimport { GET_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport { GET_UNIT_BY_ID } from \"../../service/graphql/education/common/queries/unit\";\nimport S3UploadFile from \"../../common/S3UploadFile\";\n\nexport function Content(props) {\n  console.log(\"PROPS contebr \", props);\n  const subjectid = props.subjectid ? props.subjectid : props.match.params.id;\n\n  const levelList = [\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"4\", value: 4 },\n    { label: \"5\", value: 5 },\n  ];\n\n  const [contentType, setContentType] = useState([\n    { label: \"HTML\", value: \"HTML\" },\n    { label: \"YOUTUBE\", value: \"YOUTUBE\" },\n    { label: \"FILE\", value: \"FILE\" },\n  ]);\n  /** TBB */\n  const [contentLevel, setContentLevel] = useState(\"SUBJECT\");\n\n  const [level, setLevel] = useState(1);\n  const [state, setState] = useState(\"ACTIVE\");\n  const [status, setStatus] = useState(\"APPROVED\");\n  const [available, setAvailable] = useState(\"FREE\");\n  const [contentTypeVal, setContentTypeVal] = useState(\"HTML\");\n  const [contentTitle, setContentTitle] = useState(\"SUBJECT\");\n  const [title, setTitle] = useState(\"\");\n  const [contentData, setContentData] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [fileInfo, setFileInfo] = useState({});\n  const [treeData, setTreeData] = useState(null);\n  const [createContent] = useMutation(CREATE_CONTENT);\n\n  const onUpload = (event) => {\n    setContentTypeVal(\"FILE\");\n    S3UploadFile(event.files[0])\n      .then((resp) => {\n        setUrl(resp);\n        setFileInfo({ fileInfo: event.files[0].type });\n        console.log(\"uploadFileRESP \", resp);\n      })\n      .catch((err) => {\n        console.log(\"ERROR \", err);\n      });\n  };\n  const cleanpage = () => {\n    setTitle(\"\");\n    setContentData(\"\");\n    setUrl(\"\");\n    console.log(\"cleanpage called\");\n    console.log(\"url\", url, \"contentdata\", contentData, \"tiitile\", title);\n  };\n  const createContentFunction = (myurl) => {\n    let myobj = {\n      name: title,\n      fileInfo: fileInfo,\n      type: contentTypeVal,\n      url: myurl,\n      level: level,\n      isPublished: true,\n      state: state,\n      status: status,\n      available: available,\n      description: \"DUMMY\",\n    };\n    if (!treeData) {\n      myobj[\"subject\"] = subjectid;\n    } else {\n      if (treeData && \"UNIT\" === treeData.type) {\n        myobj[\"unit\"] = treeData.id;\n      } else if (treeData && \"TOPIC\" === treeData.type) {\n        myobj[\"topic\"] = treeData.id;\n      }\n    }\n    console.log(\"BEFORE CREATE CONTENT\", myobj);\n    createContent({\n      variables: myobj,\n      refetchQueries: [\n        {\n          query: GET_SUBJECT_BY_ID,\n          variables: { id: props.subjectid },\n        },\n      ],\n    })\n      .then((resp) => {\n        console.log(\"Created content\", resp);\n      })\n      .catch((err) => {\n        throw new Error(\"Error in creating content \");\n      });\n    cleanpage();\n  };\n  const { loading: unitLoading, error: unitError, data: unitData } = useQuery(\n    GET_SUBJECT_BY_ID,\n    {\n      variables: { id: subjectid },\n    }\n  );\n  if (unitError) {\n    return <p>Unit ERROR: {unitError.message}</p>;\n  }\n  if (unitData === undefined) {\n    return <p>ERROR in GETTing unit</p>;\n  }\n  if (unitLoading) {\n    return <div>UnitData Loading...</div>;\n  }\n  const getEditor = () => {\n    console.log(\"contentTypeVal\", contentTypeVal);\n    switch (contentTypeVal) {\n      case \"HTML\":\n        return (\n          <Editor\n            style={{ height: \"220px\" }}\n            value={contentData}\n            onTextChange={(e) => {\n              setContentData(e.htmlValue);\n            }}\n          />\n        );\n      case \"YOUTUBE\":\n        return (\n          <InputText\n            placeholder=\"YOUTUBE URL\"\n            style={{ width: 350, height: 50, textAlign: \"center\" }}\n            onChange={(e) => {\n              setUrl(e.target.value);\n            }}\n          />\n        );\n      case \"FILE\":\n        return (\n          <FileUpload\n            name=\"demo[]\"\n            onUpload={onUpload}\n            multiple={false}\n            maxFileSize={1000000}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"p-grid \">\n      <div className=\"card card-w-title\" style={{ marginLeft: \"10px\" }}>\n        <div\n          className=\"content-section introduction\"\n          style={{ marginLeft: \"5px\" }}\n        >\n          {unitLoading ? (\n            <div>Loading ....</div>\n          ) : (\n            <TreeViewContentCreation\n              unitData={unitData.getSubjectById}\n              setContentLevel={setContentLevel}\n              setContentTitle={setContentTitle}\n              setTreeData={setTreeData}\n              subjectid={subjectid}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"p-col-12 p-md-9 p-lg-9\">\n        <div className=\"p-inputgroup\">\n          <span className=\"p-inputgroup-addon\">\n            <InputText\n              placeholder=\"Enter Title\"\n              value={title}\n              style={{\n                paddingLeft: \"21em\",\n                paddingRight: \"21em\",\n                textAlign: \"center\",\n              }}\n              onChange={(e) => {\n                console.log(\"E \", e.target.value);\n                setTitle(e.target.value);\n              }}\n            />\n          </span>\n          <span className=\"p-inputgroup-addon\">\n            <Dropdown\n              value={contentTypeVal}\n              options={contentType}\n              onChange={(e) => {\n                setContentTypeVal(e.value);\n              }}\n              autoWidth={true}\n            />\n          </span>\n          <span className=\"p-inputgroup-addon\">\n            <Dropdown\n              placeholder=\"Level\"\n              options={levelList}\n              value={level}\n              onChange={(event) => setLevel(event.value)}\n              autoWidth={true}\n            />\n          </span>\n        </div>\n        {getEditor()}\n        <Button\n          label=\"CREATE \"\n          className=\"p-button-raised p-button\"\n          onClick={() => {\n            //We need to first check if its Editor or FileUpload.\n            if (\"HTML\" === contentTypeVal) {\n              setContentTypeVal(\"HTML\");\n              const file = new File([contentData], \"HARDCODEDFILENAME.html\", {\n                type: \"text/html\",\n              });\n              S3UploadFile(file)\n                .then((resp) => {\n                  setUrl(resp);\n                  console.log(\"uploadFileRESP \", resp);\n                  createContentFunction(resp);\n                })\n                .catch((err) => {\n                  console.log(\"ERROR \", err);\n                });\n            } else {\n              createContentFunction(url);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tree } from \"primereact/tree\";\nimport { Button } from \"primereact/button\";\nimport { NodeService } from \"../../service/NodeService\";\nexport function QuestionTreeView(props) {\n  let nodeService = new NodeService();\n  const [selectionKeys, setSelectionKeys] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(null);\n  const [nodes, setNodes] = useState(null);\n\n  useEffect(() => {\n    let rootElm = [];\n    // This is Root level and iterate over units\n    if (props.unitData.units) {\n      props.unitData.units.map((unit, index) => {\n        let unitElm = {\n          key: unit.id,\n          label: unit.name,\n          data: {\n            type: \"UNIT\",\n            level: \"UNIT\",\n            id: unit.id,\n            name: unit.name,\n            subjectid: props.subjectid,\n            dataval: unit,\n          },\n          icon: \"pi pi-fw pi-inbox\",\n        };\n        // If unit contains topic then iterate over topics and add under given unit\n        let topicElm = [];\n        if (unit.topics) {\n          unit.topics.map((topic, index) => {\n            let topicquestionsElm = [];\n            //If topic contains question then add into topic node\n            if (topic.questions) {\n              topic.questions.map((question, index) => {\n                topicquestionsElm.push({\n                  key: question.id,\n                  label: question.title,\n                  data: {\n                    type: \"QUESTION\",\n                    level: \"TOPIC\",\n                    topic: topic.id,\n                    topicname: topic.name,\n                    id: question.id,\n                    title: question.title,\n                    subjectid: props.subjectid,\n                    dataval: question,\n                  },\n                  icon: \"pi pi-fw pi-question-circle\",\n                });\n              });\n              topicElm.push({\n                key: topic.id,\n                label: topic.name,\n\n                data: {\n                  type: \"TOPIC\",\n                  level: \"TOPIC\",\n                  unitname: unit.name,\n                  id: topic.id,\n                  name: topic.name,\n                  subjectid: props.subjectid,\n                },\n                icon: \"pi pi-fw pi-clone\",\n                children: topicquestionsElm,\n              });\n            }\n          });\n        }\n\n        // questions directly under unit\n        //let questionsElm = [];\n        let unitLevelquestion = [];\n        if (unit.questions) {\n          unit.questions.map((question, index) => {\n            unitLevelquestion.push({\n              key: question.id,\n              label: question.title,\n              data: {\n                type: \"QUESTION\",\n                level: \"UNIT\",\n                id: question.id,\n                title: question.title,\n                subjectid: props.subjectid,\n                dataval: question,\n              },\n              icon: \"pi pi-fw pi-question-circle\",\n            });\n          });\n        }\n\n        unitElm[\"children\"] = [...unitLevelquestion, ...topicElm];\n        rootElm.push(unitElm);\n      });\n    }\n    //questions of Subject\n    if (props.unitData.questions) {\n      props.unitData.questions.map((question, index) => {\n        rootElm.push({\n          key: question.id,\n          label: question.title,\n          level: \"SUBJECT\",\n          data: {\n            type: \"QUESTION\",\n            level: \"SUBJECT\",\n            id: question.id,\n            title: question.title,\n            subjectid: props.subjectid,\n            dataval: question,\n          },\n          icon: \"pi pi-fw pi-question-circle\",\n        });\n      });\n    }\n    setNodes(rootElm);\n    //nodeService.getTreeNodes().then((data) => setNodes(data));\n  }, [props.unitData]);\n  return (\n    <div>\n      <Tree\n        value={nodes}\n        selectionMode=\"single\"\n        selectionKeys={selectionKeys}\n        selectionValue={selectionValue}\n        onSelect={(e) => {\n          console.log(\"TREE SELECTED NODE DATA\", e.node.data);\n          props.setTreeData(e.node.data);\n        }}\n        onSelectionValueChange={(e) => {\n          setSelectionKeys(e.value);\n        }}\n      />\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\n\nconst CREATE_QUESTION = gql`\n  mutation CREATE_QUESTION(\n    $title: String\n    $level: Int!\n    $quetype: String!\n    $descriptionfileInfo: Json\n    $descriptionType: String!\n    $descriptionurl: String\n    $subject: String\n    $unit: String\n    $topic: String\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n    $options: Json!\n  ) {\n    createQuestion(\n      data: {\n        title: $title\n        level: $level\n        quetype: $quetype\n        descriptionfileInfo: $descriptionfileInfo\n        descriptionType: $descriptionType\n        descriptionurl: $descriptionurl\n        subject: $subject\n        unit: $unit\n        topic: $topic\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n        options: $options\n      }\n    ) {\n      id\n      title\n      descriptionurl\n      descriptionType\n      descriptionfileInfo\n      quetype\n      isPublished\n      state\n      options\n      status\n      available\n      descriptionType\n    }\n  }\n`;\nexport { CREATE_QUESTION };\n","import React, { useState } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { RadioButton } from \"primereact/radiobutton\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport { Card } from \"primereact/card\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Editor } from \"primereact/editor\";\nimport S3UploadFile from \"../../common/S3UploadFile\";\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2,\n} from \"react-html-parser\";\n\nexport default function Options(props) {\n  const [title, setTitle] = useState(null);\n  const [url, setUrl] = useState(null);\n  const [fileInfo, setFileInfo] = useState({ fileInfo: \"\" });\n  const [type, setType] = useState(\"HTML\");\n  const [content, setContent] = useState(null);\n  const [optionindex, setOptionindex] = useState(null);\n  const [mcqCorrect, setMcqCorrect] = useState([]);\n  const contentTypeList = [\n    { label: \"HTML\", value: \"HTML\" },\n    { label: \"YOUTUBE\", value: \"YOUTUBE\" },\n    { label: \"FILE\", value: \"FILE\" },\n  ];\n  const onChangeMCQ = (e) => {\n    let selectedMCQ = [...mcqCorrect];\n    let myData = props.optionData;\n    if (e.checked) {\n      myData[e.value] = { ...myData[e.value], isCorrect: true };\n      selectedMCQ.push(e.value);\n    } else {\n      myData[e.value] = { ...myData[e.value], isCorrect: false };\n      selectedMCQ.splice(selectedMCQ.indexOf(e.value), 1);\n    }\n    setMcqCorrect(selectedMCQ);\n  };\n\n  const [contentType, setContentType] = useState(\"HTML\");\n  const header = (\n    <React.Fragment>\n      {content ? (\n        <Button\n          label=\"AddOption\"\n          icon=\"pi pi-check\"\n          onClick={() => {\n            const myData = content;\n            props.setOptionData([...props.optionData, { data: myData }]);\n            setContent(\"\");\n          }}\n        />\n      ) : (\n        \"\"\n      )}\n    </React.Fragment>\n  );\n\n  const onUpload = (event) => {\n    //     setType(\"FILE\");\n    //     S3UploadFile(event.target.files[0])\n    //       .then((resp) => {\n    //         setUrl(resp);\n    //         setFileInfo({ fileInfo: event.target.files[0].type });\n    //       })\n    //       .catch((err) => {\n    //         console.log(\"ERROR \", err);\n    //       });\n  };\n  const getEditorType = () => {\n    switch (contentType) {\n      case \"HTML\":\n        return (\n          <React.Fragment>\n            <Editor\n              style={{ height: \"120px\" }}\n              value={content}\n              onTextChange={(e) => {\n                setContent(e.htmlValue);\n              }}\n            />\n          </React.Fragment>\n        );\n        break;\n      case \"YOUTUBE\":\n        return (\n          <React.Fragment>\n            <InputText\n              placeholder=\"Title\"\n              onChange={(e) => {\n                //setTitle(e.target.value);\n              }}\n            />\n            <InputText\n              placeholder=\"YOUTUBE URL\"\n              onChange={(e) => {\n                setUrl(e.target.value);\n                content(e.target.value);\n              }}\n            />\n          </React.Fragment>\n        );\n        break;\n      case \"FILE\":\n        return (\n          <React.Fragment>\n            <InputText\n              placeholder=\"Title\"\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <FileUpload\n              name=\"demo[]\"\n              onUpload={onUpload}\n              multiple={false}\n              maxFileSize={1000000}\n            />\n          </React.Fragment>\n        );\n        break;\n      case \"TEXT\":\n        break;\n    }\n  };\n  const getButton = (index) => {\n    switch (props.questionType) {\n      case \"SC\":\n        return (\n          <RadioButton\n            inputId={\"opt1\" + index}\n            name={\"Option\" + (index + 1)}\n            value={index}\n            onChange={(e) => {\n              setOptionindex(e.value);\n              let myoptionData = props.optionData;\n              myoptionData[e.value] = {\n                ...myoptionData[e.value],\n                isCorrect: true,\n              };\n              props.setOptionData(myoptionData);\n            }}\n            checked={optionindex === index}\n          />\n        );\n        break;\n      case \"MCQ\":\n        return (\n          <React.Fragment>\n            <Checkbox\n              inputId={\"opt1\" + index}\n              name={\"Option\" + (index + 1)}\n              value={index}\n              onChange={onChangeMCQ}\n              checked={mcqCorrect.indexOf(index) !== -1}\n            ></Checkbox>\n          </React.Fragment>\n        );\n        break;\n      case \"TF\":\n        return (\n          <RadioButton\n            inputId={\"opt1\" + index}\n            name={\"Option\" + (index + 1)}\n            value={index}\n            onChange={(e) => {\n              setOptionindex(e.value);\n              let myoptionData = props.optionData;\n              myoptionData[e.value] = {\n                ...myoptionData[e.value],\n                isCorrect: true,\n              };\n              props.setOptionData(myoptionData);\n            }}\n            checked={optionindex === index}\n          />\n        );\n        break;\n    }\n  };\n  const getCardForOption = (data, index) => {\n    return (\n      <div className=\"p-col-12 p-lg-3\" key={index}>\n        <div className=\"card\" key={index}>\n          <h1 style={{ fontSize: \"16px\" }}>{\"Option\" + index}</h1>\n          {ReactHtmlParser(data)}\n          {getButton(index)}\n          <label htmlFor={index} className=\"p-radiobutton-label\">\n            isCorrect?\n          </label>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <React.Fragment>\n      <Card header={header}>{getEditorType()}</Card>\n      <h1>Question Type {props.questionType}</h1>\n      <div className=\"p-grid p-fluid\">\n        {props.optionData\n          ? props.optionData.map((option, index) => {\n              return getCardForOption(option.data, index);\n            })\n          : \"\"}\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Editor } from \"primereact/editor\";\n\nimport { Button } from \"primereact/button\";\nexport default function QuestionContent(props) {\n  return (\n    <React.Fragment>\n      <Editor\n        style={{ height: \"220px\" }}\n        value={props.questionContent}\n        onTextChange={(e) => {\n          props.setQuestionContent(e.htmlValue);\n        }}\n      />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nexport default function Explaination() {\n  return (\n    <div>\n      <h1>Explaination</h1>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { InputText } from \"primereact/inputtext\";\n\nimport { TabMenu } from \"primereact/tabmenu\";\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2,\n} from \"react-html-parser\";\nimport { Button } from \"primereact/button\";\n\nimport { Card } from \"primereact/card\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Panel } from \"primereact/panel\";\n\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { QuestionTreeView } from \"./QuestionTreeView\";\nimport { GET_ALLQUESTIONS_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport { CREATE_QUESTION } from \"../../service/graphql/education/teacher/mutations/question\";\n\nimport Options from \"./Options\";\nimport QuestionContent from \"./QuestionContent\";\nimport Explaination from \"./Explaination\";\nimport S3UploadFile from \"../../common/S3UploadFile\";\n\nexport function Question(props) {\n  const items = [\n    {\n      label: \"Question\",\n      icon: \"pi pi-question\",\n    },\n    {\n      label: \"Options\",\n      icon: \"pi pi-fw pi-sitemap\",\n    },\n  ];\n  const [optionData, setOptionData] = useState([]);\n\n  const subjectid = props.subjectid ? props.subjectid : props.match.params.id;\n  const [title, setTitle] = useState(null);\n  const [contentLevel, setContentLevel] = useState(\"SUBJECT\");\n  const [level, setLevel] = useState(null);\n  const [questionContent, setQuestionContent] = useState(\"\");\n  const [activeItem, setActiveItem] = useState(\"Question\");\n  const [treeData, setTreeData] = useState(null);\n  const [dataList, setDataList] = useState(null);\n  const [questionType, setQuestionType] = useState(\"SC\");\n  const [createQuestion] = useMutation(CREATE_QUESTION);\n\n  const uploadFiles = () => {\n    let myQueObj = {\n      title: \"\",\n      quetype: \"\",\n      descrtionType: \"HTML\",\n      descrtionurl: \"\",\n      options: [],\n      level: 1,\n      isPublished: true,\n      state: \"ACTIVE\",\n      status: \"APPROVED\",\n      available: \"FREE\",\n      descriptionfileInfo: {},\n    };\n    let modifiedData = [...optionData];\n    optionData.map((opt, index) => {\n      const file = new File([opt.data], \"HARDCODEDFILENAME.html\", {\n        type: \"text/html\",\n      });\n      S3UploadFile(file).then((resp) => {\n        modifiedData[index] = { ...optionData[index], url: resp };\n      });\n    });\n    const quefile = new File([questionContent], \"HARDCODEDFILENAME.html\", {\n      type: \"text/html\",\n    });\n    S3UploadFile(quefile).then((resp) => {\n      myQueObj[\"descrtionurl\"] = resp;\n    });\n    if (!treeData) {\n      myQueObj[\"subject\"] = subjectid;\n    } else {\n      if (treeData && \"UNIT\" === treeData.type) {\n        console.log(\"SET UNIT LEVEL \");\n        myQueObj[\"unit\"] = treeData.id;\n      } else if (treeData && \"TOPIC\" === treeData.type) {\n        console.log(\"SET TOPIC LEVEL \");\n        myQueObj[\"topic\"] = treeData.id;\n      }\n    }\n    myQueObj[\"title\"] = title ? title : \"NEEDTOUPDATE\";\n    myQueObj[\"level\"] = level ? level : 1;\n    myQueObj[\"quetype\"] = questionType;\n    myQueObj[\"options\"] = modifiedData;\n    myQueObj[\"descriptionType\"] = \"This is HARD CODED VALUE\";\n    console.log(\"myQueObj\", myQueObj);\n\n    createQuestion({\n      variables: myQueObj,\n      refetchQueries: [\n        {\n          query: GET_ALLQUESTIONS_SUBJECT_BY_ID,\n          variables: { id: subjectid },\n        },\n      ],\n    }).then((res) => {\n      console.log(\"Created content\", res);\n      resetData();\n    });\n  };\n  const resetData = () => {\n    setTitle(\"\");\n    setQuestionContent(\"\");\n  };\n  const getComponent = () => {\n    console.log(\"activeItem\", activeItem);\n    switch (activeItem) {\n      case \"Question\":\n        return (\n          <QuestionContent\n            questionContent={questionContent}\n            setQuestionContent={setQuestionContent}\n          />\n        );\n        break;\n      case \"Options\":\n        return (\n          <Options\n            questionType={questionType}\n            optionData={optionData}\n            setOptionData={setOptionData}\n          />\n        );\n\n      case \"Explaination\":\n        return <Explaination />;\n    }\n  };\n  const levelList = [\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"4\", value: 4 },\n    { label: \"5\", value: 5 },\n  ];\n  const questionTypeList = [\n    { label: \"MCQ\", value: \"MCQ\" },\n    { label: \"SC\", value: \"SC\" },\n    { label: \"T/F\", value: \"TF\" },\n    { label: \"SUB\", value: \"Subjective\" },\n  ];\n  const { loading: unitLoading, error: unitError, data: unitData } = useQuery(\n    GET_ALLQUESTIONS_SUBJECT_BY_ID,\n    {\n      variables: { id: subjectid },\n    }\n  );\n  if (unitError) {\n    console.log(\"UNIT ERROR\", unitError);\n    return <p>Unit ERROR: {unitError.message}</p>;\n  }\n  if (unitData === undefined) {\n    console.log(\"UNIT DATA UNDIFINED\");\n    return <p>ERROR in GETTing unit</p>;\n  }\n  if (unitLoading) {\n    console.log(\"UNIT DATA is LOADING\");\n    return <div>UnitData Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-grid \">\n      <div\n        className=\"card card-w-title\"\n        style={{ marginLeft: \"20px\", marginRiight: \"1 0px\" }}\n      >\n        <div\n          className=\"content-section introduction\"\n          style={{ marginLeft: \"5px\" }}\n        >\n          {unitLoading ? (\n            <div>Loading ....</div>\n          ) : (\n            <QuestionTreeView\n              unitData={unitData.getSubjectById}\n              setContentLevel={setContentLevel}\n              setTreeData={setTreeData}\n              subjectid={subjectid}\n            />\n          )}\n        </div>\n      </div>\n\n      <div className=\"card card-w-title\" style={{ marginLeft: \"2px\" }}>\n        <Button\n          label={treeData ? treeData.level : \"SUBJECT\"}\n          disabled=\"disabled\"\n          className=\"p-button p-button-secondary\"\n          style={{\n            textAlign: \"center\",\n            marginTop: \".3em\",\n            marginLeft: \".2em\",\n            width: \"10em\",\n          }}\n        />\n        <div className=\"p-grid p-fluid\">\n          <div className=\"p-col-12 p-md-6 p-lg-6\">\n            <TabMenu\n              model={items}\n              activeItem={activeItem}\n              onTabChange={(e) => {\n                console.log(\"ACTIVE ITEM \", e.value.label);\n                setActiveItem(e.value.label);\n              }}\n            />\n          </div>\n          <div className=\"p-col-12 p-md-4 p-lg-2\">\n            <Dropdown\n              placeholder=\"Level\"\n              options={levelList}\n              value={level}\n              onChange={(event) => setLevel(event.value)}\n              autoWidth={true}\n            />\n          </div>\n          <div className=\"p-col-12 p-md-3 p-lg-2\">\n            <Dropdown\n              placeholder=\"QueType\"\n              options={questionTypeList}\n              value={questionType}\n              onChange={(event) => setQuestionType(event.value)}\n              autoWidth={true}\n            />\n          </div>\n        </div>\n        <InputText\n          placeholder=\"Title\"\n          style={{ width: 350, height: 50, textAlign: \"center\" }}\n          onChange={(e) => {\n            console.log(\"E \", e.target.value);\n            setTitle(e.target.value);\n          }}\n        />\n        {getComponent()}\n        <h1></h1>\n        <Button\n          label=\"SAVE\"\n          className=\"p-button-Primary\"\n          icon=\"pi pi-check\"\n          onClick={() => {\n            uploadFiles();\n          }}\n        />\n        <Button\n          label=\"CANCEL\"\n          className=\"p-button-warning\"\n          icon=\"pi pi-times\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Content } from \"./content/Content\";\nimport { Question } from \"./question/Question\";\nexport function ContentTypes(props) {\n  let history = useHistory;\n  const cars = [\n    { label: \"MATERIAL\", value: \"MATERIAL\" },\n    { label: \"QUESTION\", value: \"QUESTION\" },\n    { label: \"EXAMS\", value: \"EXAMS\" },\n    { label: \"FORMULA\", value: \"FORMULA\" },\n    { label: \"TIPS&TRICS\", value: \"TIPS&TRICS\" },\n    { label: \"PAPERS\", value: \"PAPERS\" },\n  ];\n  const [selected, setSelected] = useState(null);\n  const [state, setState] = useState(cars);\n\n  const onChange = (e) => {\n    props.setType(e.value);\n    setSelected(e.value);\n  };\n  return (\n    <div className=\"content-section implementation\">\n      <Dropdown\n        value={selected}\n        options={state}\n        onChange={onChange}\n        style={{ width: \"12em\" }}\n        filter={true}\n        filterPlaceholder=\"Select Car\"\n        filterBy=\"label,value\"\n        showClear={true}\n      />\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\nconst MY_ASSIGNED_SUBJECTS = gql`\n  query MY_ASSIGNED_SUBJECTS {\n    mySubscription {\n      id\n      userid {\n        id\n        firstname\n        lastname\n        email\n      }\n      mySubjects {\n        id\n        name\n        picture\n        std {\n          id\n          gradename\n        }\n        contents {\n          id\n          name\n        }\n        units {\n          id\n          name\n          contents {\n            id\n            name\n          }\n          topics {\n            id\n            name\n            contents {\n              id\n              name\n            }\n          }\n        }\n      }\n      subscribedAs {\n        id\n        name\n      }\n    }\n  }\n`;\nconst MY_ASSIGNED_SUBJECTS_QUE = gql`\n  query MY_ASSIGNED_SUBJECTS_QUE {\n    mySubscription {\n      id\n      userid {\n        id\n        firstname\n        lastname\n        email\n      }\n      mySubjects {\n        id\n        name\n        picture\n        questions {\n          id\n          quetype\n          title\n          descriptionurl\n          descriptionType\n          descriptionfileInfo\n          categories\n          options\n          level\n          explaination\n        }\n\n        std {\n          id\n          gradename\n        }\n\n        units {\n          id\n          name\n          questions {\n            id\n            quetype\n            title\n            descriptionurl\n            descriptionType\n            descriptionfileInfo\n            categories\n            options\n            level\n            explaination\n          }\n\n          topics {\n            id\n            name\n            questions {\n              id\n              quetype\n              title\n              descriptionurl\n              descriptionType\n              descriptionfileInfo\n              categories\n              options\n              level\n              explaination\n            }\n          }\n        }\n      }\n      subscribedAs {\n        id\n        name\n      }\n    }\n  }\n`;\nexport { MY_ASSIGNED_SUBJECTS, MY_ASSIGNED_SUBJECTS_QUE };\n","import gql from \"graphql-tag\";\n\nconst CREATE_SUBJECT = gql`\n  mutation CREATE_SUBJECT(\n    $name: String!\n    $picture: String\n    $medium: String\n    $std: String!\n    $category: String\n    $board: String\n    $group: String\n    $subgroup: String\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n    $description: String\n  ) {\n    createSubject(\n      data: {\n        name: $name\n        picture: $picture\n        medium: $medium\n        std: $std\n        category: $category\n        board: $board\n        group: $group\n        subgroup: $subgroup\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n        description: $description\n      }\n    ) {\n      id\n      name\n      picture\n      category\n      board\n      isPublished\n      state\n      status\n      available\n      description\n      medium {\n        id\n        name\n      }\n      std {\n        id\n        gradename\n      }\n      group {\n        id\n        name\n      }\n      subgroup {\n        id\n        name\n      }\n    }\n  }\n`;\nconst UPDATE_SUBJECT = gql`\n  mutation UPDATE_SUBJECT(\n    $id: ID!\n    $name: String\n    $picture: String\n    $board: String\n    $category: String\n    $group: String\n    $subgroup: String\n    $medium: String\n    $std: String\n  ) {\n    updateSubject(\n      id: $id\n      data: {\n        name: $name\n        board: $board\n        category: $category\n        group: $group\n        subgroup: $subgroup\n        medium: $medium\n        picture: $picture\n        std: $std\n      }\n    ) {\n      id\n      name\n      board\n      category\n      picture\n      group {\n        id\n        name\n      }\n      subgroup {\n        id\n        name\n      }\n      medium {\n        id\n        name\n      }\n      std {\n        id\n        gradename\n      }\n    }\n  }\n`;\n\nconst DELETE_SUBJECT = gql`\n  mutation DELETE_SUBJECT($id: ID!) {\n    deleteSubject(id: $id) {\n      id\n      name\n      board\n      category\n      group {\n        id\n        name\n      }\n      subgroup {\n        id\n        name\n      }\n      medium {\n        id\n        name\n      }\n      std {\n        id\n        gradename\n      }\n    }\n  }\n`;\n\nexport { CREATE_SUBJECT, UPDATE_SUBJECT, DELETE_SUBJECT };\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button } from \"primereact/button\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport S3UploadFile from \"../common/S3UploadFile\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Card } from \"primereact/card\";\nimport { ContentTypes } from \"./contenttypes\";\nimport { UPDATE_SUBJECT } from \"../service/graphql/education/teacher/mutations/subject\";\nimport { GET_SUBJECT_BY_ID } from \"../service/graphql/education/common/queries/subjects\";\nimport { MY_ASSIGNED_SUBJECTS } from \"../service/graphql/education/common/queries/assignedsubjects\";\n\nexport function Subjectcard(props) {\n  console.log(\"Props \", props);\n  const [url, setUrl] = useState(props.subject.picture);\n  let subject = props.subject;\n  const [fileInfo, setFileInfo] = useState({\n    fileInfo: \"\",\n  });\n  console.log(\"PROPS Subjectcard\", props, \"  SUBJECT ID \", subject.id);\n  const [type, setType] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [updateSubject] = useMutation(UPDATE_SUBJECT);\n  const header = (\n    <span>\n      <div className=\"p-card-title\">{subject.name}</div>\n      <Button\n        label=\"Details\"\n        className=\"p-button-rounded p-button-danger\"\n        onClick={() => {\n          setType(\"TEACHERTABVIEW\");\n        }}\n      />\n      <img alt=\"Card\" src={url} />\n    </span>\n  );\n  useEffect(() => {\n    updateSubjectURL();\n    setRefresh(false);\n  }, [refresh]);\n  const updateSubjectURL = () => {\n    updateSubject({\n      variables: {\n        id: subject.id,\n        picture: url,\n      },\n    })\n      .then((res) => {\n        console.log(\"Created content\", res);\n        setRefresh(false);\n      })\n      .catch((err) => {\n        throw new Error(\"Error in creating content \");\n      });\n  };\n\n  const onUpload = (event) => {\n    console.log(\"EVENT for file upload \", event);\n    setType(\"FILE\");\n    S3UploadFile(event.files[0])\n      .then((resp) => {\n        setUrl(resp);\n        setRefresh(true);\n        console.log(\"uploadFileRESP \", resp);\n      })\n      .catch((err) => {\n        console.log(\"ERROR \", err);\n      });\n  };\n  if (url) {\n  }\n  const getPage = (subjectid, subjectname) => {\n    console.log(\n      \"GET PAGE   SUBBJ=> \",\n      subjectname,\n      \" Subjectid \",\n      subjectid,\n      \"type\",\n      type\n    );\n    switch (type) {\n      case \"MATERIAL\":\n        return (\n          <Redirect to={\"/content/SUBJECT/\" + subjectid + \"/\" + subjectname} />\n        );\n        break;\n      case \"QUESTION\":\n        return (\n          <Redirect to={\"/question/SUBJECT/\" + subjectid + \"/\" + subjectname} />\n        );\n        break;\n      case \"EXAMS\":\n        return (\n          <Redirect to={\"/exams/SUBJECT/\" + subjectid + \"/\" + subjectname} />\n        );\n        break;\n      case \"FORMULA\":\n        return (\n          <Redirect to={\"/formulas/SUBJECT/\" + subjectid + \"/\" + subjectname} />\n        );\n        break;\n      case \"TIPS&TRICS\":\n        return (\n          <Redirect\n            to={\"/tipstricks/SUBJECT/\" + subjectid + \"/\" + subjectname}\n          />\n        );\n      case \"QUESTIONBANK\":\n        return (\n          <Redirect to={\"/question/SUBJECT/\" + subjectid + \"/\" + subjectname} />\n        );\n        break;\n      case \"PAPERS\":\n        return (\n          <Redirect to={\"/papers/SUBJECT/\" + subjectid + \"/\" + subjectname} />\n        );\n        break;\n      case \"TEACHERTABVIEW\":\n        return (\n          <Redirect\n            to={\"/teachertabview/SUBJECT/\" + subject.id + \"/\" + subject.name}\n          />\n        );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {type ? (\n        getPage(subject.id, subject.name)\n      ) : (\n        <div\n          className=\"p-grid\"\n          style={{\n            fontSize: \"16px\",\n            textAlign: \"center\",\n            padding: \"20px\",\n          }}\n        >\n          <Card\n            key={subject.id}\n            title={subject.name}\n            subTitle={subject.std.gradename}\n            style={{ width: \"360px\" }}\n            className=\"ui-card-shadow\"\n            header={header}\n            footer={\n              <ContentTypes\n                id={subject.id}\n                type={\"SUBJECT\"}\n                name={subject.name}\n                setType={setType}\n              />\n            }\n          >\n            <div>\n              <div>\n                <i className=\"pi pi-user-plus\"></i>\n                <img\n                  src={props.url}\n                  alt={\"AVATAR  \"}\n                  style={{\n                    verticalAlign: \"middle\",\n                    width: \"50px\",\n                    height: \"50px\",\n                    borderRadius: \"50%\",\n                  }}\n                />\n\n                <span>{props.username} </span>\n              </div>\n              {url ? (\n                \"\"\n              ) : (\n                <FileUpload\n                  name=\"demo[]\"\n                  onUpload={onUpload}\n                  multiple={false}\n                  maxFileSize={10000000}\n                />\n              )}\n            </div>\n          </Card>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { Button } from \"primereact/button\";\nimport { ContentTypes } from \"../projectcomponents/contenttypes\";\nimport { MY_ASSIGNED_SUBJECTS } from \"../service/graphql/education/common/queries/assignedsubjects\";\nimport { Subjectcard } from \"../projectcomponents/Subjectcard\";\nexport default function TeacherSubjects() {\n  const {\n    loading: assignedSubjectsLoading,\n    error: assignedSubjectsError,\n    data: assignedSubjectsData,\n  } = useQuery(MY_ASSIGNED_SUBJECTS);\n  if (assignedSubjectsError)\n    return <p>SUBORG ERROR: {assignedSubjectsError.message}</p>;\n  if (assignedSubjectsData === undefined)\n    return <p>ERROR in GETTing assignedSubjects</p>;\n  if (assignedSubjectsLoading) {\n    return <div>SUBORG Loading</div>;\n  }\n  let mySubjectList = [];\n  let username = \"TEACHER:\";\n\n  assignedSubjectsData.mySubscription.map((sub) => {\n    if ((\"TEACHER\", sub.subscribedAs.name)) {\n      username =\n        sub.userid.firstname +\n        \" \" +\n        sub.userid.lastname +\n        \" , \" +\n        sub.userid.email;\n      mySubjectList = [...mySubjectList, ...sub.mySubjects];\n    }\n  });\n\n  return (\n    <div className=\"p-grid p-nogutter\">\n      {mySubjectList.map((subject, index) => {\n        return (\n          <Subjectcard\n            key={index}\n            subject={subject}\n            username={username}\n            type=\"SUBJECT\"\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { CountryService } from \"../service/CountryService\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { AutoComplete } from \"primereact/autocomplete\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Chips } from \"primereact/chips\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { RadioButton } from \"primereact/radiobutton\";\nimport { InputSwitch } from \"primereact/inputswitch\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Password } from \"primereact/password\";\nimport { Spinner } from \"primereact/spinner\";\nimport { Slider } from \"primereact/components/slider/Slider\";\nimport { ListBox } from \"primereact/listbox\";\nimport { Rating } from \"primereact/rating\";\nimport { ColorPicker } from \"primereact/colorpicker\";\nimport { Editor } from \"primereact/editor\";\nimport { ToggleButton } from \"primereact/togglebutton\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { Button } from \"primereact/button\";\nimport { SplitButton } from \"primereact/splitbutton\";\nimport Coursedesign from \"../projectcomponents/coursedesign\";\nimport TeacherSubjects from \"./TeacherSubjects\";\nexport default class MySubjects extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [\n        {\n          label: \"File\",\n          icon: \"pi pi-fw pi-file\",\n          items: [\n            {\n              label: \"New\",\n              icon: \"pi pi-fw pi-plus\",\n              items: [\n                {\n                  label: \"Bookmark\",\n                  icon: \"pi pi-fw pi-bookmark\",\n                },\n                {\n                  label: \"Video\",\n                  icon: \"pi pi-fw pi-video\",\n                },\n              ],\n            },\n            {\n              label: \"Delete\",\n              icon: \"pi pi-fw pi-trash\",\n            },\n            {\n              label: \"Export\",\n              icon: \"pi pi-fw pi-external-link\",\n            },\n          ],\n        },\n        {\n          label: \"Edit\",\n          icon: \"pi pi-fw pi-pencil\",\n          items: [\n            {\n              label: \"Left\",\n              icon: \"pi pi-fw pi-align-left\",\n            },\n            {\n              label: \"Right\",\n              icon: \"pi pi-fw pi-align-right\",\n            },\n            {\n              label: \"Center\",\n              icon: \"pi pi-fw pi-align-center\",\n            },\n            {\n              label: \"Justify\",\n              icon: \"pi pi-fw pi-align-justify\",\n            },\n          ],\n        },\n        {\n          label: \"Users\",\n          icon: \"pi pi-fw pi-user\",\n          items: [\n            {\n              label: \"New\",\n              icon: \"pi pi-fw pi-user-plus\",\n            },\n            {\n              label: \"Delete\",\n              icon: \"pi pi-fw pi-user-minus\",\n            },\n            {\n              label: \"Search\",\n              icon: \"pi pi-fw pi-users\",\n              items: [\n                {\n                  label: \"Filter\",\n                  icon: \"pi pi-fw pi-filter\",\n                  items: [\n                    {\n                      label: \"Print\",\n                      icon: \"pi pi-fw pi-print\",\n                    },\n                  ],\n                },\n                {\n                  icon: \"pi pi-fw pi-bars\",\n                  label: \"List\",\n                },\n              ],\n            },\n          ],\n        },\n        {\n          label: \"Events\",\n          icon: \"pi pi-fw pi-calendar\",\n          items: [\n            {\n              label: \"Edit\",\n              icon: \"pi pi-fw pi-pencil\",\n              items: [\n                {\n                  label: \"Save\",\n                  icon: \"pi pi-fw pi-calendar-plus\",\n                },\n                {\n                  label: \"Delete\",\n                  icon: \"pi pi-fw pi-calendar-minus\",\n                },\n              ],\n            },\n            {\n              label: \"Archieve\",\n              icon: \"pi pi-fw pi-calendar-times\",\n              items: [\n                {\n                  label: \"Remove\",\n                  icon: \"pi pi-fw pi-calendar-minus\",\n                },\n              ],\n            },\n          ],\n        },\n      ],\n      countriesData: [],\n      cars: [],\n      selectedType: null,\n      chipsValue: [],\n      date1: null,\n      date2: null,\n      date3: null,\n      date4: null,\n      date5: null,\n      date6: null,\n      date7: null,\n      checkboxValue: [],\n      radioValue: null,\n      inputSwitchValue: false,\n      dropdownCity: null,\n      spinnerValue: null,\n      sliderValue: [20, 80],\n      listBoxCity: null,\n      ratingValue: null,\n      colorPickerValue: null,\n      inputGroupValue: null,\n      carOptions: [\n        { label: \"Audi\", value: \"Audi\" },\n        { label: \"BMW\", value: \"BMW\" },\n        { label: \"Fiat\", value: \"Fiat\" },\n        { label: \"Honda\", value: \"Honda\" },\n        { label: \"Jaguar\", value: \"Jaguar\" },\n        { label: \"Mercedes\", value: \"Mercedes\" },\n        { label: \"Renault\", value: \"Renault\" },\n        { label: \"VW\", value: \"VW\" },\n        { label: \"Volvo\", value: \"Volvo\" },\n      ],\n      cities: [\n        { label: \"Select City\", value: null },\n        { label: \"New York\", value: \"New York\" },\n        { label: \"Rome\", value: \"Rome\" },\n        { label: \"London\", value: \"London\" },\n        { label: \"Istanbul\", value: \"Istanbul\" },\n        { label: \"Paris\", value: \"Paris\" },\n      ],\n      listBoxCities: [\n        { label: \"Madrid\", value: \"Madrid\" },\n        { label: \"Geneva\", value: \"Geneva\" },\n        { label: \"Los Angeles\", value: \"Los Angeles\" },\n        { label: \"Monaco\", value: \"Monaco\" },\n        { label: \"Berlin\", value: \"Berlin\" },\n      ],\n      types: [\n        { label: \"Apartment\", value: \"Apartment\" },\n        { label: \"House\", value: \"House\" },\n        { label: \"Studio\", value: \"Studio\" },\n      ],\n      splitButtonItems: [\n        { label: \"Update\", icon: \"pi pi-refresh\" },\n        { label: \"Delete\", icon: \"pi pi-times\" },\n        {\n          label: \"Home\",\n          icon: \"pi pi-home\",\n          url: \"http://www.primefaces.org/primereact\",\n        },\n      ],\n    };\n\n    this.countryService = new CountryService();\n    this.onCheckboxChange = this.onCheckboxChange.bind(this);\n    this.filterCountry = this.filterCountry.bind(this);\n    this.filterBrands = this.filterBrands.bind(this);\n    this.autoCompleteItemTemplate = this.autoCompleteItemTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ countriesData: this.countryService.getCountries(this) });\n    this.brands = [\n      \"Audi\",\n      \"BMW\",\n      \"Fiat\",\n      \"Ford\",\n      \"Honda\",\n      \"Jaguar\",\n      \"Mercedes\",\n      \"Renault\",\n      \"Volvo\",\n    ];\n  }\n\n  filterCountry(event) {\n    let results = this.state.countriesData.filter((country) => {\n      return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n    });\n    this.setState({ filteredCountries: results });\n  }\n\n  filterBrands(event) {\n    setTimeout(() => {\n      let results;\n\n      if (event.query.length === 0) {\n        results = [...this.brands];\n      } else {\n        results = this.brands.filter((brand) => {\n          return brand.toLowerCase().startsWith(event.query.toLowerCase());\n        });\n      }\n\n      this.setState({ filteredBrands: results });\n    }, 250);\n  }\n\n  autoCompleteItemTemplate(brand) {\n    if (!brand) {\n      return;\n    }\n\n    return (\n      <div className=\"p-clearfix\">\n        <img\n          alt={brand}\n          src={`assets/demo/images/car/${brand}.png`}\n          style={{\n            width: \"32px\",\n            display: \"inline-block\",\n            margin: \"5px 0 2px 5px\",\n          }}\n        />\n        <div\n          style={{ fontSize: \"18px\", float: \"right\", margin: \"10px 10px 0 0\" }}\n        >\n          {brand}\n        </div>\n      </div>\n    );\n  }\n\n  onCheckboxChange(event) {\n    let selected = [...this.state.checkboxValue];\n    if (event.checked) selected.push(event.value);\n    else selected.splice(selected.indexOf(event.value), 1);\n\n    this.setState({ checkboxValue: selected });\n  }\n\n  render() {\n    return (\n      <div>\n        <TeacherSubjects />\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tree } from \"primereact/tree\";\nimport { Button } from \"primereact/button\";\nimport { NodeService } from \"../../service/NodeService\";\nexport function FormulaTreeView(props) {\n  let nodeService = new NodeService();\n  const [selectionKeys, setSelectionKeys] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(null);\n  const [nodes, setNodes] = useState(null);\n\n  useEffect(() => {\n    let rootElm = [];\n    // This is Root level and iterate over units\n    if (props.unitData.units) {\n      props.unitData.units.map((unit, index) => {\n        let unitElm = {\n          key: unit.id,\n          label: unit.name,\n          data: {\n            type: \"UNIT\",\n            level: \"UNIT\",\n            id: unit.id,\n            name: unit.name,\n            subjectid: props.subjectid,\n            dataval: unit,\n          },\n          icon: \"pi pi-fw pi-inbox\",\n        };\n        // If unit contains topic then iterate over topics and add under given unit\n        let topicElm = [];\n        if (unit.topics) {\n          unit.topics.map((topic, index) => {\n            let topicformulasElm = [];\n            //If topic contains formula then add into topic node\n            if (topic.formulas) {\n              topic.formulas.map((formula, index) => {\n                topicformulasElm.push({\n                  key: formula.id,\n                  label: formula.name,\n                  data: {\n                    type: \"FORMULA\",\n                    level: \"TOPIC\",\n                    topic: topic.id,\n                    topicname: topic.name,\n                    id: formula.id,\n                    name: formula.name,\n                    subjectid: props.subjectid,\n                    dataval: formula,\n                  },\n                  icon: \"pi pi-fw pi-external-link\",\n                });\n              });\n              topicElm.push({\n                key: topic.id,\n                label: topic.name,\n\n                data: {\n                  type: \"TOPIC\",\n                  level: \"TOPIC\",\n                  unitname: unit.name,\n                  id: topic.id,\n                  name: topic.name,\n                  subjectid: props.subjectid,\n                },\n                icon: \"pi pi-fw pi-clone\",\n                children: topicformulasElm,\n              });\n            }\n          });\n        }\n\n        // formulas directly under unit\n        //let formulasElm = [];\n        let unitLevelformula = [];\n        if (unit.formulas) {\n          unit.formulas.map((formula, index) => {\n            unitLevelformula.push({\n              key: formula.id,\n              label: formula.name,\n              data: {\n                type: \"FORMULA\",\n                level: \"UNIT\",\n                id: formula.id,\n                name: formula.name,\n                subjectid: props.subjectid,\n                dataval: formula,\n              },\n              icon: \"pi pi-fw pi-external-link\",\n            });\n          });\n        }\n\n        unitElm[\"children\"] = [...unitLevelformula, ...topicElm];\n        rootElm.push(unitElm);\n      });\n    }\n    //formulas of Subject\n    if (props.unitData.formulas) {\n      props.unitData.formulas.map((formula, index) => {\n        rootElm.push({\n          key: formula.id,\n          label: formula.name,\n          level: \"SUBJECT\",\n          data: {\n            type: \"FORMULA\",\n            level: \"SUBJECT\",\n            id: formula.id,\n            name: formula.name,\n            subjectid: props.subjectid,\n            dataval: formula,\n          },\n          icon: \"pi pi-fw pi-external-link\",\n        });\n      });\n    }\n    setNodes(rootElm);\n    //nodeService.getTreeNodes().then((data) => setNodes(data));\n  }, [props.unitData]);\n  return (\n    <div>\n      <Tree\n        value={nodes}\n        selectionMode=\"single\"\n        selectionKeys={selectionKeys}\n        selectionValue={selectionValue}\n        onSelect={(e) => {\n          console.log(\"TREE SELECTED NODE DATA\", e.node.data);\n          props.setTreeData(e.node.data);\n        }}\n        onSelectionValueChange={(e) => {\n          setSelectionKeys(e.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"primereact/dropdown\";\nexport default function OptionalField(props) {\n  const stateList = [\n    { label: \"ACTIVE\", value: \"ACTIVE\" },\n    { label: \"DORMANT\", value: \"DORMANT\" },\n    { label: \"DEACTIVE\", value: \"DEACTIVE\" },\n  ];\n  const availableList = [\n    { label: \"FREE\", value: \"FREE\" },\n    { label: \"PAID\", value: \"PAID\" },\n    { label: \"SPONSERED\", value: \"SPONSERED\" },\n    { label: \"SUBSIDIZED\", value: \"SUBSIDIZED\" },\n  ];\n  const levelList = [\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"4\", value: 4 },\n    { label: \"5\", value: 5 },\n  ];\n\n  const statusList = [\n    { label: \"APPROVED\", value: \"APPROVED\" },\n    { label: \"SUBMITTED\", value: \"SUBMITTED\" },\n    { label: \"REJECTED\", value: \"REJECTED\" },\n  ];\n  const contentTypeList = [\n    { label: \"HTML\", value: \"HTML\" },\n    { label: \"YOUTUBE\", value: \"YOUTUBE\" },\n    { label: \"FILE\", value: \"FILE\" },\n  ];\n  const questionTypeList = [\n    { label: \"MCQ\", value: \"MCQ\" },\n    { label: \"SC\", value: \"SC\" },\n    { label: \"T/F\", value: \"TF\" },\n    { label: \"SUB\", value: \"Subjective\" },\n  ];\n\n  return (\n    <div className=\"p-grid p-fluid\">\n      <div className=\"card card-w-title\">\n        <div className=\"p-grid\">\n          <div className=\"p-col-12 p-md-4\">\n            <Dropdown\n              options={contentTypeList}\n              value={props.contentTypeVal}\n              onChange={(event) => props.setContentTypeVal(event.value)}\n              autoWidth={true}\n            />\n          </div>\n          {/**<div className=\"p-col-12 p-md-3\">\n            <Dropdown\n              options={stateList}\n              value={props.state}\n              onChange={(event) => props.setState(event.value)}\n              autoWidth={true}\n            />\n          </div>\n          <div className=\"p-col-12 p-md-2\">\n            <Dropdown\n              options={statusList}\n              value={props.status}\n              onChange={(event) => props.setStatus(event.value)}\n              autoWidth={true}\n            />\n          </div>\n          <div className=\"p-col-12 p-md-2\">\n            <Dropdown\n              options={availableList}\n              value={props.available}\n              onChange={(event) => props.setAvailable(event.value)}\n              autoWidth={true}\n            />\n          </div>**/}\n          <div className=\"p-col-12 p-md-4\">\n            <Dropdown\n              placeholder=\"Level\"\n              options={levelList}\n              value={props.level}\n              onChange={(event) => props.setLevel(event.value)}\n              autoWidth={true}\n            />\n          </div>\n          <div className=\"p-col-12 p-md-4\">\n            {props.questionType ? (\n              <Dropdown\n                options={questionTypeList}\n                value={props.questionType}\n                placeholder=\"OptionType\"\n                onChange={(event) => props.setQuestionType(event.value)}\n                autoWidth={true}\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\nconst CREATE_FORMULA = gql`\n  mutation CREATE_FORMULA(\n    $name: String!\n    $level: Int\n    $fileInfo: Json\n    $type: String!\n    $url: String\n    $subject: String\n    $unit: String\n    $topic: String\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n  ) {\n    createFormula(\n      data: {\n        name: $name\n        level: $level\n        fileInfo: $fileInfo\n        type: $type\n        url: $url\n        subject: $subject\n        unit: $unit\n        topic: $topic\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n      }\n    ) {\n      id\n      name\n      url\n      type\n      isPublished\n    }\n  }\n`;\nexport { CREATE_FORMULA };\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport S3UploadFile from \"../../common/S3UploadFile\";\n\nimport { Editor } from \"primereact/editor\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { InputText } from \"primereact/inputtext\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport { Button } from \"primereact/button\";\nimport { GET_ALLFORMULA_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport { CREATE_FORMULA } from \"../../service/graphql/education/teacher/mutations/formula\";\n\nimport OptionalField from \"../common/OptionalField\";\nexport function FormulaCreation(props) {\n  console.log(\"FORMULA CREATION  props \", props);\n  const [createFormula] = useMutation(CREATE_FORMULA);\n\n  const [title, setTitle] = useState(null);\n  const [url, setUrl] = useState(null);\n  const [fileInfo, setFileInfo] = useState({ fileInfo: \"\" });\n  const [type, setType] = useState(props.contentTypeVal);\n  const [content, setContent] = useState(null);\n  const [state, setState] = useState(\"ACTIVE\");\n  const [status, setStatus] = useState(\"APPROVED\");\n  const [level, setLevel] = useState(1);\n  const [available, setAvailable] = useState(\"FREE\");\n  const onUpload = (event) => {\n    setType(\"FILE\");\n    S3UploadFile(event.target.files[0])\n      .then((resp) => {\n        setUrl(resp);\n        setFileInfo({ fileInfo: event.target.files[0].type });\n        console.log(\"uploadFileRESP \", resp);\n      })\n      .catch((err) => {\n        console.log(\"ERROR \", err);\n      });\n  };\n  const getEditorType = () => {\n    switch (props.contentTypeVal) {\n      case \"HTML\":\n        return (\n          <div>\n            <InputText\n              placeholder=\"Title\"\n              style={{ width: 350, height: 40, textAlign: \"center\" }}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <Editor\n              style={{ height: \"220px\" }}\n              value={content}\n              onTextChange={(e) => setContent(e.htmlValue)}\n            />\n          </div>\n        );\n        break;\n      case \"YOUTUBE\":\n        return (\n          <div>\n            <InputText\n              placeholder=\"Title\"\n              style={{ width: 350, height: 40, textAlign: \"center\" }}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <InputText\n              placeholder=\"YOUTUBE URL\"\n              style={{ width: 350, height: 50, textAlign: \"center\" }}\n              onChange={(e) => {\n                setUrl(e.target.value);\n                content(e.target.value);\n              }}\n            />\n          </div>\n        );\n        break;\n      case \"FILE\":\n        return (\n          <div>\n            <InputText\n              placeholder=\"Title\"\n              style={{ width: 450, height: 40, textAlign: \"center\" }}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <FileUpload\n              name=\"demo[]\"\n              onUpload={onUpload}\n              multiple={false}\n              maxFileSize={1000000}\n            />\n          </div>\n        );\n        break;\n      case \"TEXT\":\n        break;\n    }\n  };\n  const resetData = () => {\n    setTitle(\"\");\n    setFileInfo();\n    setUrl(\"\");\n  };\n  const saveContent = () => {\n    return (\n      <Button\n        label=\"SAVE\"\n        icon=\"pi pi-check\"\n        onClick={() => {\n          //We need to first check if its Editor or FileUpload.\n          if (\"HTML\" === props.contentTypeVal) {\n            setType(\"HTML\");\n            const file = new File([content], \"HARDCODEDFILENAME.html\", {\n              type: \"text/html\",\n            });\n            S3UploadFile(file)\n              .then((resp) => {\n                let myobj = {\n                  name: title,\n                  fileInfo: fileInfo,\n                  type: type,\n                  url: resp,\n                  level: level,\n                  isPublished: true,\n                  state: state,\n                  status: status,\n                  available: available,\n                  description: \"DUMMY\",\n                };\n                if (!props.treeData) {\n                  console.log(\"SET SUBJECT LEVEL \");\n                  myobj[\"subject\"] = props.subjectid;\n                } else {\n                  if (props.treeData && \"UNIT\" === props.treeData.type) {\n                    console.log(\"SET UNIT LEVEL \");\n                    myobj[\"unit\"] = props.treeData.id;\n                  } else if (\n                    props.treeData &&\n                    \"TOPIC\" === props.treeData.type\n                  ) {\n                    console.log(\"SET TOPIC LEVEL \");\n                    myobj[\"topic\"] = props.treeData.id;\n                  }\n                }\n                console.log(\"Myobj Formula\", myobj);\n                createFormula({\n                  variables: myobj,\n                  refetchQueries: [\n                    {\n                      query: GET_ALLFORMULA_SUBJECT_BY_ID,\n                      variables: { id: props.subjectid },\n                    },\n                  ],\n                })\n                  .then((res) => {\n                    console.log(\"Created content\", res);\n                    resetData();\n                  })\n                  .catch((err) => {\n                    throw new Error(\"Error in creating content \");\n                  });\n              })\n              .catch((err) => {\n                console.log(\"ERROR \", err);\n              });\n          }\n        }}\n      />\n    );\n  };\n  return (\n    <div>\n      <h1>Formula</h1>\n      {content ? saveContent() : \"\"}\n      {getEditorType()}\n      <OptionalField\n        state={state}\n        setState={setState}\n        status={status}\n        setStatus={setStatus}\n        level={level}\n        setLevel={setLevel}\n        available={available}\n        setAvailable={setAvailable}\n      />\n      <div>\n        state{state}:status{status}:available{available}:level{level}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"primereact/card\";\nimport ReactPlayer from \"react-player\";\nimport Iframe from \"react-iframe\";\nexport default function CardView(props) {\n  if (!props.dataList) return <div>Error</div>;\n  const getCard = (data) => {\n    if (\"YOUTUBE\" === data.type) {\n      return (\n        <ReactPlayer\n          className=\"react-player\"\n          url={data.url}\n          controls={true}\n          id={data.id}\n          light={true}\n          playbackRate={1}\n          width=\"420px\"\n          height=\"280px\"\n        />\n      );\n    }\n    if (\"HTML\" === data.type || \"FILE\" === data.type) {\n      return (\n        <Iframe\n          url={data.url}\n          width=\"350px\"\n          height=\"350px\"\n          id={data.id}\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n        />\n      );\n    }\n  };\n  const getCardData = (data) => {\n    return (\n      <Card\n        key={data.id}\n        title={data.name}\n        style={{ width: \"360px\" }}\n        className=\"ui-card-shadow\"\n      >\n        {getCard(data)}\n      </Card>\n    );\n  };\n\n  return props.dataList.map((data) => {\n    return getCardData(data);\n  });\n}\n","import React from \"react\";\n\nimport CardView from \"./CardView\";\nimport TableView from \"./TableView\";\nexport default function PreviewController(props) {\n  console.log(\"PreviewController =>\", props);\n  /**\n    1. This component will recieve list and also it will recieve viewType\n    2. Responsibility of this component Based on viewType return component\n     */\n  const dataList = props.dataList;\n  const viewType = props.viewType;\n  const getComponent = () => {\n    switch (viewType) {\n      case \"CARD\":\n        return <CardView dataList={dataList} />;\n        break;\n      case \"TABLE\":\n        return <TableView dataList={dataList} />;\n        break;\n    }\n  };\n  return getComponent();\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Card } from \"primereact/card\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Panel } from \"primereact/panel\";\nimport { Link } from \"react-router-dom\";\n\nimport { InputText } from \"primereact/inputtext\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { FormulaTreeView } from \"../formulas/FormulaTreeView\";\nimport { GET_ALLFORMULA_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport OptionalField from \"../common/OptionalField\";\nimport { FormulaCreation } from \"./FormulaCreation\";\nimport PreviewController from \"../content/preview/PreviewController\";\nimport { Accordion, AccordionTab } from \"primereact/accordion\";\nimport StudentSubjectView from \"../student/StudentSubjectView\";\nexport function Formulas(props) {\n  //const subjectid = props.match.params.id;\n  const subjectid = props.subjectid ? props.subjectid : props.match.params.id;\n\n  const [contentLevel, setContentLevel] = useState(\"SUBJECT\");\n  const [itemVal, setItemVal] = useState(items);\n  const [contentTypeVal, setContentTypeVal] = useState(\"HTML\");\n  const [contentType, setContentType] = useState([\n    { label: \"HTML\", value: \"HTML\" },\n    { label: \"YOUTUBE\", value: \"YOUTUBE\" },\n    { label: \"FILE\", value: \"FILE\" },\n  ]);\n\n  const [treeData, setTreeData] = useState(null);\n  const [panelCollapsed, setPanelCollapsed] = useState(true);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const items = [\n    {\n      label: \"File\",\n      icon: \"pi pi-fw pi-clone\",\n    },\n  ];\n\n  const [state, setState] = useState(\"ACTIVE\");\n  const [status, setStatus] = useState(\"APPROVED\");\n  const [level, setLevel] = useState(1);\n  const [available, setAvailable] = useState(\"FREE\");\n  const [dataList, setDataList] = useState(null);\n  const { loading: unitLoading, error: unitError, data: unitData } = useQuery(\n    GET_ALLFORMULA_SUBJECT_BY_ID,\n    {\n      variables: { id: subjectid },\n    }\n  );\n  if (unitError) {\n    console.log(\"UNIT ERROR\", unitError);\n    return <p>Unit ERROR: {unitError.message}</p>;\n  }\n  if (unitData === undefined) {\n    console.log(\"UNIT DATA UNDIFINED\");\n    return <p>ERROR in GETTing unit</p>;\n  }\n  if (unitLoading) {\n    console.log(\"UNIT DATA is LOADING\");\n    return <div>UnitData Loading...</div>;\n  }\n  console.log(\"GET_ALLFORMULA_SUBJECT_BY_ID \", unitData, \"treeData \", treeData);\n\n  if (!treeData) {\n    console.log(\"TREE DATA is NULL\");\n    // setDataList(unitData.getSubjectById.formulas);\n    console.log(\"PREVIEW SUBJECT  DATA \", unitData.getSubjectById.formulas);\n  } else {\n    console.log(\"PREVIEW UNIT and Topic Level Data\", treeData);\n  }\n  console.log(\"contentLevel\", contentLevel);\n  return (\n    <div className=\"p-grid \">\n      <div className=\"card card-w-title\" style={{ marginLeft: \"10px\" }}>\n        <div\n          className=\"content-section introduction\"\n          style={{ marginLeft: \"5px\" }}\n        >\n          {unitLoading ? (\n            <div>Loading ....</div>\n          ) : (\n            <FormulaTreeView\n              items={itemVal}\n              unitData={unitData.getSubjectById}\n              setContentLevel={setContentLevel}\n              setTreeData={setTreeData}\n              subjectid={subjectid}\n            />\n          )}\n        </div>\n      </div>\n\n      <div className=\"card card-w-title\" style={{ marginLeft: \"10px\" }}>\n        <Button\n          label={treeData ? treeData.level : \"SUBJECT\"}\n          disabled=\"disabled\"\n          className=\"p-button p-button-secondary\"\n          style={{\n            textAlign: \"center\",\n            marginTop: \".3em\",\n            marginLeft: \".3em\",\n            width: \"10em\",\n          }}\n        />\n\n        <OptionalField\n          contentTypeVal={contentTypeVal}\n          setContentTypeVal={setContentTypeVal}\n          state={state}\n          setState={setState}\n          status={status}\n          setStatus={setStatus}\n          level={level}\n          setLevel={setLevel}\n          available={available}\n          setAvailable={setAvailable}\n        />\n\n        <Accordion\n          activeIndex={activeIndex}\n          onTabChange={(e) => setActiveIndex(e.index)}\n        >\n          <AccordionTab>\n            {\" \"}\n            <FormulaCreation\n              contentTypeVal={contentTypeVal}\n              treeData={treeData}\n              subjectid={subjectid}\n            />\n          </AccordionTab>\n          <AccordionTab header=\"Preview Formulas\">\n            {treeData ? (\n              treeData.dataval && treeData.dataval.formulas ? (\n                <PreviewController\n                  dataList={treeData.dataval.formulas}\n                  viewType=\"CARD\"\n                />\n              ) : (\n                \"\"\n              )\n            ) : (\n              <PreviewController\n                dataList={unitData.getSubjectById.formulas}\n                viewType=\"CARD\"\n              />\n            )}\n          </AccordionTab>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport { GET_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport { TreeViewContentCreation } from \"./TreeViewContentCreation\";\nimport { Formulas } from \"../formulas/Formulas\";\n\nexport default function Syllabus(props) {\n  const [contentLevel, setContentLevel] = useState(\"SUBJECT\");\n  const items = [\n    {\n      label: \"File\",\n      icon: \"pi pi-fw pi-clone\",\n    },\n  ];\n  const [contentTitle, setContentTitle] = useState(\"HardCodedSubject\");\n  const [treeData, setTreeData] = useState(null);\n\n  const [itemVal, setItemVal] = useState(items);\n  const [contentTypeVal, setContentTypeVal] = useState(\"HTML\");\n  const { loading: unitLoading, error: unitError, data: unitData } = useQuery(\n    GET_SUBJECT_BY_ID,\n    {\n      variables: { id: props.subjectid },\n    }\n  );\n  if (unitError) {\n    console.log(\"UNIT ERROR\", unitError);\n    return <p>Unit ERROR: {unitError.message}</p>;\n  }\n  if (unitData === undefined) {\n    console.log(\"UNIT DATA UNDIFINED\");\n    return <p>ERROR in GETTing unit</p>;\n  }\n  if (unitLoading) {\n    console.log(\"UNIT DATA is LOADING\");\n    return <div>UnitData Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-grid p-fluid\">\n      <div className=\"p-col-12 p-lg-4\">\n        <TreeViewContentCreation\n          items={itemVal}\n          unitData={unitData.getSubjectById}\n          setContentLevel={setContentLevel}\n          setContentTitle={setContentTitle}\n          setTreeData={setTreeData}\n          subjectid={props.subjectid}\n        />\n      </div>\n      <div className=\"p-col-12 p-lg-8\">\n        <Formulas />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Material(props) {\n  return (\n    <div>\n      <h1>Material</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Exams(props) {\n  return (\n    <div>\n      <h1>Exams</h1>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Toolbar } from \"primereact/toolbar\";\nimport { Button } from \"primereact/button\";\nimport Syllabus from \"./Syllabus\";\nimport Material from \"./Material\";\nimport Exams from \"./Exams\";\nexport default function TeacherMgmt(props) {\n  const [compName, setCompName] = useState(\"SYLLABUS\");\n  const subjectid = \"ck96ucd6b040l0884c0k16zrr\";\n  const getComponent = () => {\n    switch (compName) {\n      case \"MATERIAL\":\n        return <Material />;\n        break;\n      case \"SYLLABUS\":\n        return <Syllabus subjectid={subjectid} />;\n        break;\n      case \"EXAMS\":\n        return <Exams />;\n        break;\n    }\n  };\n  return (\n    <Toolbar>\n      <div className=\"p-toolbar-group-left\">\n        <Button\n          label=\"Syllabus\"\n          icon=\"pi pi-plus\"\n          className=\"p-button-info\"\n          style={{ marginRight: \".25em\" }}\n          onClick={() => {\n            setCompName(\"SYLLABUS\");\n          }}\n        />\n        <Button\n          label=\"Material\"\n          icon=\"pi pi-money-bill\"\n          className=\"p-button-success\"\n          style={{ marginRight: \".25em\" }}\n          onClick={() => {\n            setCompName(\"MATERIAL\");\n          }}\n        />\n        <Button\n          label=\"Exams\"\n          icon=\"pi pi-question\"\n          className=\"p-button-warning\"\n          style={{ marginRight: \".25em\" }}\n          onClick={() => {\n            setCompName(\"EXAMS\");\n          }}\n        />\n        {getComponent()}\n      </div>\n    </Toolbar>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tree } from \"primereact/tree\";\nimport { Button } from \"primereact/button\";\nimport { Panel } from \"primereact/panel\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { NodeService } from \"../../service/NodeService\";\nexport function ExamTreeView(props) {\n  let nodeService = new NodeService();\n  const [selectionKeys, setSelectionKeys] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(null);\n  const [nodes, setNodes] = useState(null);\n\n  useEffect(() => {\n    const rootNode = [];\n    const mySubjectList = props.mySubjectList;\n    if (mySubjectList) {\n      mySubjectList.map((subject) => {\n        let unitNodes = [];\n\n        if (subject.units) {\n          subject.units.map((unit) => {\n            let myunitlevelquestionsList = [];\n            if (unit.questions) {\n              myunitlevelquestionsList = [...unit.questions];\n            }\n            let unitElm = {\n              key: unit.id,\n              label: unit.name,\n              data: {\n                type: \"UNIT\",\n                level: \"UNIT\",\n                id: unit.id,\n                name: unit.name,\n                subjectid: props.subjectid,\n                dataval: myunitlevelquestionsList,\n              },\n              icon: \"pi pi-fw pi-inbox\",\n            };\n            // If unit contains topic then iterate over topics and add under given unit\n            let topicElm = [];\n\n            if (unit.topics) {\n              unit.topics.map((topic, index) => {\n                let mytopiclevelquestionsList = [];\n                if (topic.questions) {\n                  mytopiclevelquestionsList = [...topic.questions];\n                }\n                let topicquestionsElm = [];\n                //If topic contains question then add into topic node\n                if (topic.questions) {\n                  topic.questions.map((question, index) => {\n                    topicquestionsElm.push({\n                      key: question.id,\n                      label: question.title,\n                      data: {\n                        type: \"QUESTION\",\n                        level: \"TOPIC\",\n                        topic: topic.id,\n                        topicname: topic.name,\n                        id: question.id,\n                        title: question.title,\n                        subjectid: props.subjectid,\n                      },\n                      icon: \"pi pi-fw pi-question-circle\",\n                    });\n                  });\n                  topicElm.push({\n                    key: topic.id,\n                    label: topic.name,\n\n                    data: {\n                      type: \"TOPIC\",\n                      level: \"TOPIC\",\n                      unitname: unit.name,\n                      id: topic.id,\n                      name: topic.name,\n                      subjectid: props.subjectid,\n                      dataval: mytopiclevelquestionsList,\n                    },\n                    icon: \"pi pi-fw pi-clone\",\n                    children: topicquestionsElm,\n                  });\n                }\n              });\n            }\n\n            // questions directly under unit\n            //let questionsElm = [];\n            let unitLevelquestion = [];\n            if (unit.questions) {\n              unit.questions.map((question, index) => {\n                unitLevelquestion.push({\n                  key: question.id,\n                  label: question.title,\n                  data: {\n                    type: \"QUESTION\",\n                    level: \"UNIT\",\n                    id: question.id,\n                    title: question.title,\n                    subjectid: props.subjectid,\n                  },\n                  icon: \"pi pi-fw pi-question-circle\",\n                });\n              });\n            }\n\n            unitElm[\"children\"] = [...unitLevelquestion, ...topicElm];\n            unitNodes.push(unitElm);\n          });\n        }\n        let subjectQueElm = [];\n        if (subject.questions) {\n          subject.questions.map((question) => {\n            subjectQueElm.push({\n              key: question.id,\n              label: question.title,\n              data: {\n                type: \"QUESTION\",\n                level: \"SUBJECT\",\n                subjectname: subject.name,\n                id: question.id,\n                title: question.title,\n                subjectid: props.subjectid,\n              },\n              icon: \"pi pi-fw pi-question-circle\",\n            });\n          });\n        }\n        let mysubjectquestionsList = [];\n        if (subject.questions) {\n          mysubjectquestionsList = [...subject.questions];\n        }\n        let subjectELM = {\n          key: subject.id,\n          label: subject.name,\n          icon: \"pi pi-fw pi-folder\",\n          data: {\n            id: subject.id,\n            type: \"SUBJECT\",\n            level: \"SUBJECT\",\n            dataval: mysubjectquestionsList,\n          },\n          children: [...unitNodes, ...subjectQueElm],\n        };\n        rootNode.push(subjectELM);\n      });\n      setNodes(rootNode);\n    }\n  }, [props.mySubjectList]);\n\n  const [examSettings, setExamSettings] = useState({\n    retryAllowed: true,\n    showAnswer: false,\n    isForLevelPromotion: true,\n  });\n  const onChangeExamSetting = (e, comp) => {\n    if (e.checked) setExamSettings({ ...examSettings, [comp]: true });\n    else setExamSettings({ ...examSettings, [comp]: false });\n  };\n  console.log(\"OBBJECT \", examSettings);\n  return (\n    <div>\n      <Tree\n        value={nodes}\n        selectionMode=\"single\"\n        style={{ top: 20, bottom: 10, left: 20, right: 200 }}\n        selectionKeys={selectionKeys}\n        selectionValue={selectionValue}\n        leaf={true}\n        className=\"p-button p-button-secondary\"\n        onSelect={(e) => {\n          if (e.node.data.dataval) {\n            props.setAvbQue(e.node.data.dataval);\n          }\n          //props.setAvbQue(e.node.data)\n          console.log(\"TREE SELECTED NODE DATA\", e.node.data);\n          //props.setTreeData(e.node.data);\n        }}\n        onSelectionValueChange={(e) => {\n          // setSelectionKeys(e.value);\n        }}\n      />\n      <Panel header=\"Exam Details\">\n        <div className=\"p-col-12\">\n          <div className=\"p-grid\" style={{ width: \"250px\" }}>\n            <div className=\"p-col-12\">\n              <Checkbox\n                inputId=\"retryAllowed\"\n                onChange={(e) => onChangeExamSetting(e, \"retryAllowed\")}\n                checked={examSettings.retryAllowed}\n              ></Checkbox>\n              <label htmlFor=\"cb1\" className=\"p-checkbox-label\">\n                retryAllowed\n              </label>\n            </div>\n            <div className=\"p-col-12\">\n              <Checkbox\n                inputId=\"showAnswer?\"\n                onChange={(e) => onChangeExamSetting(e, \"showAnswer\")}\n                checked={examSettings.showAnswer}\n              ></Checkbox>\n              <label htmlFor=\"showAnswer?\" className=\"p-checkbox-label\">\n                showAnswer?\n              </label>\n            </div>\n            <div className=\"p-col-12\">\n              <Checkbox\n                inputId=\"isForLevelPromotion\"\n                onChange={(e) => onChangeExamSetting(e, \"isForLevelPromotion\")}\n                checked={examSettings.isForLevelPromotion}\n              ></Checkbox>\n              <label htmlFor=\"cb3\" className=\"p-checkbox-label\">\n                is For Level Promotion?\n              </label>\n            </div>\n          </div>\n        </div>\n      </Panel>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { Growl } from \"primereact/growl\";\nimport { Button } from \"primereact/button\";\n\nexport function GrowlDemo() {\n  let growl = useRef(null);\n  const showSuccess = () => {\n    growl.current.show({\n      severity: \"success\",\n      summary: \"Success Message\",\n      detail: \"Order submitted\",\n    });\n  };\n  const showInfo = () => {\n    growl.current.show({\n      severity: \"info\",\n      summary: \"Info Message\",\n      detail: \"PrimeReact rocks\",\n    });\n  };\n  const showWarn = () => {\n    growl.current.show({\n      severity: \"warn\",\n      summary: \"Warn Message\",\n      detail: \"There are unsaved changes\",\n    });\n  };\n  const showError = () => {\n    growl.current.show({\n      severity: \"error\",\n      summary: \"Error Message\",\n      detail: \"Validation failed\",\n    });\n  };\n  const showSticky = () => {\n    growl.current.show({\n      severity: \"info\",\n      summary: \"Sticky Message\",\n      detail: \"You need to close Me\",\n      sticky: true,\n    });\n  };\n  const showCustom = () => {\n    const summary = (\n      <span>\n        <i className=\"pi pi-check\" /> <strong>PrimeReact</strong>\n      </span>\n    );\n    const detail = (\n      <img\n        alt=\"PrimeReact\"\n        src=\"showcase/images/logo.png\"\n        srcSet=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\"\n        width=\"80px\"\n        style={{ backgroundColor: \"#212121\", marginLeft: \"22px\" }}\n      />\n    );\n    growl.current.show({\n      severity: \"info\",\n      summary: summary,\n      detail: detail,\n      sticky: true,\n    });\n  };\n  const showMultiple = () => {\n    growl.current.show([\n      { severity: \"info\", summary: \"Message 1\", detail: \"PrimeReact rocks\" },\n      { severity: \"info\", summary: \"Message 2\", detail: \"PrimeReact rocks\" },\n      { severity: \"info\", summary: \"Message 3\", detail: \"PrimeFaces rocks\" },\n    ]);\n  };\n  const clear = () => {\n    growl.current.clear();\n  };\n\n  return (\n    <div className=\"p-fluid\">\n      <Growl ref={growl} />\n      <h3 style={{ marginTop: 0 }}>Severities</h3>\n      <div className=\"p-grid\">\n        <div className=\"p-col-12 p-md-3\">\n          <Button\n            onClick={showSuccess}\n            label=\"Success\"\n            className=\"p-button-success\"\n          />\n        </div>\n        <div className=\"p-col-12 p-md-3\">\n          <Button onClick={showInfo} label=\"Info\" className=\"p-button-info\" />\n        </div>\n        <div className=\"p-col-12 p-md-3\">\n          <Button\n            onClick={showWarn}\n            label=\"Warn\"\n            className=\"p-button-warning\"\n          />\n        </div>\n        <div className=\"p-col-12 p-md-3\">\n          <Button\n            onClick={showError}\n            label=\"Error\"\n            className=\"p-button-danger\"\n          />\n        </div>\n      </div>\n      <h3>Options</h3>\n      <div className=\"p-grid\">\n        <div className=\"p-col-12 p-md-4\">\n          <Button\n            onClick={showMultiple}\n            label=\"Multiple\"\n            className=\"p-button-warning\"\n          />\n        </div>\n        <div className=\"p-col-12 p-md-4\">\n          <Button onClick={showSticky} label=\"Sticky\" />\n        </div>\n        <div className=\"p-col-12 p-md-4\">\n          <Button\n            onClick={showCustom}\n            label=\"Custom\"\n            className=\"p-button-success\"\n          />\n        </div>\n      </div>\n      <h3>Remove All</h3>\n      <Button\n        onClick={clear}\n        label=\"Clear\"\n        style={{ width: \"auto\", marginLeft: \".5em\" }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"primereact/card\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { RadioButton } from \"primereact/radiobutton\";\nimport { Button } from \"primereact/button\";\nimport { PickList } from \"primereact/picklist\";\nimport { InputText } from \"primereact/inputtext\";\nimport { GrowlDemo } from \"./GrowlDemo\";\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2,\n} from \"react-html-parser\";\nexport default function QuestionAvailable(props) {\n  console.log(\"QuestionAvailable =>\", props.avaialableQue);\n  const [selectedQue, setSelectedQue] = useState([]);\n  const onChangeQueSelection = (e) => {\n    let myselectedQue = [...selectedQue];\n    if (e.checked) {\n      myselectedQue.push(e.value);\n    } else {\n      myselectedQue.splice(myselectedQue.indexOf(e.value), 1);\n    }\n    setSelectedQue(myselectedQue);\n  };\n  const getOptionCard = (option, type, index) => {\n    return (\n      <Card>\n        {\"SC\" === type ? (\n          <RadioButton\n            inputId={\"opt1\" + index}\n            name={\"Option\" + (index + 1)}\n            value={index}\n          ></RadioButton>\n        ) : (\n          <Checkbox\n            inputId={\"opt1\" + index}\n            name={\"Option\" + (index + 1)}\n            value={index}\n          ></Checkbox>\n        )}\n\n        {ReactHtmlParser(option.data)}\n      </Card>\n    );\n  };\n  const selectBox = (id) => {\n    return (\n      <Checkbox\n        value={id}\n        onChange={onChangeQueSelection}\n        checked={selectedQue.indexOf(id) !== -1}\n      />\n    );\n  };\n  const getCard = (data) => {\n    return (\n      <Card\n        title={data.title}\n        header={selectBox(data.id)}\n        subTitle={data.quetype}\n        style={{ backgroundColor: \"#f9c851\", color: \"#b58c2b\" }}\n      >\n        <div className=\"p-grid p-fluid dashboard\">\n          {data.options\n            ? data.options.map((option, index) => {\n                return (\n                  <div\n                    className=\"p-col-12 p-md-6 p-xl-3\"\n                    style={{ backgroundColor: \"#1976D2\", color: \"#1976D2\" }}\n                  >\n                    {getOptionCard(option, data.quetype, index)}\n                  </div>\n                );\n              })\n            : \"\"}\n        </div>\n      </Card>\n    );\n  };\n  const [sourceState, setSourceState] = useState([]);\n  const [targetState, setTargetState] = useState([]);\n\n  useEffect(() => {\n    let myavailableQue = [];\n    if (props.avaialableQue) {\n      props.avaialableQue.map((que) => {\n        if (targetState.indexOf(que) === -1) {\n          myavailableQue.push(que);\n        }\n      });\n    }\n    setSourceState(myavailableQue);\n  }, [props.avaialableQue]);\n\n  const [cb11, setCb11] = useState(true);\n  const [cb12, setCb12] = useState(true);\n  const getInputGroup = (que) => {\n    return (\n      <div className=\"p-inputgroup\">\n        <span className=\"p-inputgroup-addon\">\n          <Button label={que.title} />\n        </span>\n        <Button label={que.level} />\n        <span className=\"p-inputgroup-addon\">\n          <Button label={que.quetype} />\n        </span>\n      </div>\n    );\n  };\n  const queTemplate = (que) => {\n    return <div>{getInputGroup(que)}</div>;\n  };\n\n  const onChange = (event) => {\n    setSourceState(event.source);\n    setTargetState(event.target);\n  };\n  console.log(\"QuestionAvailable\", sourceState, \"  Target \", targetState);\n  return (\n    <div>\n      {props.avaialableQue ? (\n        <div className=\"content-section implementation\">\n          <PickList\n            source={sourceState}\n            target={targetState}\n            itemTemplate={queTemplate}\n            sourceHeader=\"Available\"\n            targetHeader=\"Selected\"\n            showSourceControls={false}\n            showTargetControls={false}\n            responsive={true}\n            sourceStyle={{ height: \"300px\" }}\n            targetStyle={{ height: \"300px\" }}\n            onChange={onChange}\n          ></PickList>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {/* {props.avaialableQue\n        ? props.avaialableQue.map((que) => {\n            if (selectedQue.indexOf(que.id) == -1) return getCard(que);\n          })\n        : \"\"}*/}\n      <GrowlDemo />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Card } from \"primereact/card\";\nimport { TabMenu } from \"primereact/tabmenu\";\nimport { Panel } from \"primereact/panel\";\n\nimport { MY_ASSIGNED_SUBJECTS_QUE } from \"../../service/graphql/education/common/queries/assignedsubjects\";\nimport { ExamTreeView } from \"./ExamTreeView\";\nimport QuestionAvailable from \"./QuestionAvailable\";\nimport SelectedQuetion from \"./SelectedQuetion\";\nexport function Exams(props) {\n  const myrole = \"TEACHER\";\n  const [avbQue, setAvbQue] = useState(null);\n  const [activeItem, setActiveItem] = useState(\"QUEAVAILABLE\");\n\n  const {\n    loading: assignedSubjectsLoading,\n    error: assignedSubjectsError,\n    data: assignedSubjectsData,\n  } = useQuery(MY_ASSIGNED_SUBJECTS_QUE);\n  if (assignedSubjectsError)\n    return <p>SUBORG ERROR: {assignedSubjectsError.message}</p>;\n  if (assignedSubjectsData === undefined)\n    return <p>ERROR in GETTing assignedSubjects</p>;\n  if (assignedSubjectsLoading) {\n    return <div>SUBORG Loading</div>;\n  }\n  let mySubjectList = [];\n  assignedSubjectsData.mySubscription.map((sub) => {\n    if ((myrole, sub.subscribedAs.name)) {\n      mySubjectList = [...mySubjectList, ...sub.mySubjects];\n    }\n  });\n  const items = [\n    { label: \"QUEAVAILABLE\", icon: \"pi pi-fw pi-info-circle\" },\n    { label: \"SELECTEDQUE\", icon: \"pi pi-fw pi-info\" },\n  ];\n  const getComponent = () => {\n    switch (activeItem) {\n      case \"QUEAVAILABLE\":\n        return;\n        break;\n      case \"SELECTEDQUE\":\n        return <SelectedQuetion />;\n    }\n  };\n  return (\n    <div className=\"p-grid p-fluid dashboard\">\n      <div className=\"p-col-12 p-md-6 p-xl-3\">\n        <ExamTreeView mySubjectList={mySubjectList} setAvbQue={setAvbQue} />\n      </div>\n      <div className=\"p-col-12 p-md-6 p-xl-9\">\n        {avbQue ? (\n          <QuestionAvailable avaialableQue={avbQue} />\n        ) : (\n          <h1>Select Question</h1>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Papers(props) {\n  console.log(\"PAPERS\", props);\n  return (\n    <div>\n      <h1>Papers</h1>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tree } from \"primereact/tree\";\nimport { Button } from \"primereact/button\";\nimport { NodeService } from \"../../service/NodeService\";\nexport function TipsTricsTreeView(props) {\n  let nodeService = new NodeService();\n  const [selectionKeys, setSelectionKeys] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(null);\n  const [nodes, setNodes] = useState(null);\n\n  useEffect(() => {\n    let rootElm = [];\n    // This is Root level and iterate over units\n    if (props.unitData.units) {\n      props.unitData.units.map((unit, index) => {\n        let unitElm = {\n          key: unit.id,\n          label: unit.name,\n          data: {\n            type: \"UNIT\",\n            level: \"UNIT\",\n            id: unit.id,\n            name: unit.name,\n            subjectid: props.subjectid,\n            dataval: unit,\n          },\n          icon: \"pi pi-fw pi-inbox\",\n        };\n        // If unit contains topic then iterate over topics and add under given unit\n        let topicElm = [];\n        if (unit.topics) {\n          unit.topics.map((topic, index) => {\n            let topictipstricksElm = [];\n            //If topic contains formula then add into topic node\n            if (topic.tipstricks) {\n              topic.tipstricks.map((formula, index) => {\n                topictipstricksElm.push({\n                  key: formula.id,\n                  label: formula.name,\n                  data: {\n                    type: \"FORMULA\",\n                    level: \"TOPIC\",\n                    topic: topic.id,\n                    topicname: topic.name,\n                    id: formula.id,\n                    name: formula.name,\n                    subjectid: props.subjectid,\n                    dataval: formula,\n                  },\n                  icon: \"pi pi-fw pi-external-link\",\n                });\n              });\n              topicElm.push({\n                key: topic.id,\n                label: topic.name,\n\n                data: {\n                  type: \"TOPIC\",\n                  level: \"TOPIC\",\n                  unitname: unit.name,\n                  id: topic.id,\n                  name: topic.name,\n                  subjectid: props.subjectid,\n                },\n                icon: \"pi pi-fw pi-clone\",\n                children: topictipstricksElm,\n              });\n            }\n          });\n        }\n\n        // tipstricks directly under unit\n        //let tipstricksElm = [];\n        let unitLevelformula = [];\n        if (unit.tipstricks) {\n          unit.tipstricks.map((formula, index) => {\n            unitLevelformula.push({\n              key: formula.id,\n              label: formula.name,\n              data: {\n                type: \"FORMULA\",\n                level: \"UNIT\",\n                id: formula.id,\n                name: formula.name,\n                subjectid: props.subjectid,\n                dataval: formula,\n              },\n              icon: \"pi pi-fw pi-external-link\",\n            });\n          });\n        }\n\n        unitElm[\"children\"] = [...unitLevelformula, ...topicElm];\n        rootElm.push(unitElm);\n      });\n    }\n    //tipstricks of Subject\n    if (props.unitData.tipstricks) {\n      props.unitData.tipstricks.map((formula, index) => {\n        rootElm.push({\n          key: formula.id,\n          label: formula.name,\n          level: \"SUBJECT\",\n          data: {\n            type: \"FORMULA\",\n            level: \"SUBJECT\",\n            id: formula.id,\n            name: formula.name,\n            subjectid: props.subjectid,\n            dataval: formula,\n          },\n          icon: \"pi pi-fw pi-external-link\",\n        });\n      });\n    }\n    setNodes(rootElm);\n    //nodeService.getTreeNodes().then((data) => setNodes(data));\n  }, [props.unitData]);\n  return (\n    <div>\n      <Tree\n        value={nodes}\n        selectionMode=\"single\"\n        selectionKeys={selectionKeys}\n        selectionValue={selectionValue}\n        onSelect={(e) => {\n          console.log(\"TREE SELECTED NODE DATA\", e.node.data);\n          props.setTreeData(e.node.data);\n        }}\n        onSelectionValueChange={(e) => {\n          setSelectionKeys(e.value);\n        }}\n      />\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\nconst CREATE_TIPSTRICKS = gql`\n  mutation CREATE_TIPSTRICKS(\n    $name: String!\n    $level: Int\n    $fileInfo: Json\n    $type: String!\n    $url: String\n    $subject: String\n    $unit: String\n    $topic: String\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n  ) {\n    createTipsTrick(\n      data: {\n        name: $name\n        level: $level\n        fileInfo: $fileInfo\n        type: $type\n        url: $url\n        subject: $subject\n        unit: $unit\n        topic: $topic\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n      }\n    ) {\n      id\n      name\n      url\n      type\n      isPublished\n    }\n  }\n`;\nexport { CREATE_TIPSTRICKS };\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport S3UploadFile from \"../../common/S3UploadFile\";\n\nimport { Editor } from \"primereact/editor\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { InputText } from \"primereact/inputtext\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport { Button } from \"primereact/button\";\nimport { GET_ALLTIPSTRICKS_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport { CREATE_TIPSTRICKS } from \"../../service/graphql/education/teacher/mutations/tipstricks\";\n\nimport OptionalField from \"../common/OptionalField\";\nexport function TipsTricksCreation(props) {\n  console.log(\"TipsTricks CREATION  props \", props);\n  const [createTipsTricks] = useMutation(CREATE_TIPSTRICKS);\n\n  const [title, setTitle] = useState(null);\n  const [url, setUrl] = useState(null);\n  const [fileInfo, setFileInfo] = useState({ fileInfo: \"\" });\n  const [type, setType] = useState(props.contentTypeVal);\n  const [content, setContent] = useState(null);\n  const [state, setState] = useState(\"ACTIVE\");\n  const [status, setStatus] = useState(\"APPROVED\");\n  const [level, setLevel] = useState(1);\n  const [available, setAvailable] = useState(\"FREE\");\n  const onUpload = (event) => {\n    setType(\"FILE\");\n    S3UploadFile(event.target.files[0])\n      .then((resp) => {\n        setUrl(resp);\n        setFileInfo({ fileInfo: event.target.files[0].type });\n        console.log(\"uploadFileRESP \", resp);\n      })\n      .catch((err) => {\n        console.log(\"ERROR \", err);\n      });\n  };\n  const getEditorType = () => {\n    switch (props.contentTypeVal) {\n      case \"HTML\":\n        return (\n          <div>\n            <InputText\n              placeholder=\"Title\"\n              style={{ width: 350, height: 40, textAlign: \"center\" }}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <Editor\n              style={{ height: \"220px\" }}\n              value={content}\n              onTextChange={(e) => setContent(e.htmlValue)}\n            />\n          </div>\n        );\n        break;\n      case \"YOUTUBE\":\n        return (\n          <div>\n            <InputText\n              placeholder=\"Title\"\n              style={{ width: 350, height: 40, textAlign: \"center\" }}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <InputText\n              placeholder=\"YOUTUBE URL\"\n              style={{ width: 350, height: 50, textAlign: \"center\" }}\n              onChange={(e) => {\n                setUrl(e.target.value);\n                content(e.target.value);\n              }}\n            />\n          </div>\n        );\n        break;\n      case \"FILE\":\n        return (\n          <div>\n            <InputText\n              placeholder=\"Title\"\n              style={{ width: 450, height: 40, textAlign: \"center\" }}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <FileUpload\n              name=\"demo[]\"\n              onUpload={onUpload}\n              multiple={false}\n              maxFileSize={1000000}\n            />\n          </div>\n        );\n        break;\n      case \"TEXT\":\n        break;\n    }\n  };\n  const resetData = () => {\n    setTitle(\"\");\n    setFileInfo();\n    setUrl(\"\");\n  };\n  const saveContent = () => {\n    return (\n      <Button\n        label=\"SAVE\"\n        icon=\"pi pi-check\"\n        onClick={() => {\n          //We need to first check if its Editor or FileUpload.\n          if (\"HTML\" === props.contentTypeVal) {\n            setType(\"HTML\");\n            const file = new File([content], \"HARDCODEDFILENAME.html\", {\n              type: \"text/html\",\n            });\n            S3UploadFile(file)\n              .then((resp) => {\n                let myobj = {\n                  name: title,\n                  fileInfo: fileInfo,\n                  type: type,\n                  url: resp,\n                  level: level,\n                  isPublished: true,\n                  state: state,\n                  status: status,\n                  available: available,\n                  description: \"DUMMY\",\n                };\n                if (!props.treeData) {\n                  console.log(\"SET SUBJECT LEVEL \");\n                  myobj[\"subject\"] = props.subjectid;\n                } else {\n                  if (props.treeData && \"UNIT\" === props.treeData.type) {\n                    console.log(\"SET UNIT LEVEL \");\n                    myobj[\"unit\"] = props.treeData.id;\n                  } else if (\n                    props.treeData &&\n                    \"TOPIC\" === props.treeData.type\n                  ) {\n                    console.log(\"SET TOPIC LEVEL \");\n                    myobj[\"topic\"] = props.treeData.id;\n                  }\n                }\n                console.log(\"Myobj TipsTricks\", myobj);\n                createTipsTricks({\n                  variables: myobj,\n                  refetchQueries: [\n                    {\n                      query: GET_ALLTIPSTRICKS_SUBJECT_BY_ID,\n                      variables: { id: props.subjectid },\n                    },\n                  ],\n                })\n                  .then((res) => {\n                    console.log(\"Created content\", res);\n                    resetData();\n                  })\n                  .catch((err) => {\n                    throw new Error(\"Error in creating content \");\n                  });\n              })\n              .catch((err) => {\n                console.log(\"ERROR \", err);\n              });\n          }\n        }}\n      />\n    );\n  };\n  return (\n    <div>\n      <h1>TipsTricks</h1>\n      {content ? saveContent() : \"\"}\n      {getEditorType()}\n      <OptionalField\n        state={state}\n        setState={setState}\n        status={status}\n        setStatus={setStatus}\n        level={level}\n        setLevel={setLevel}\n        available={available}\n        setAvailable={setAvailable}\n      />\n      <div>\n        state{state}:status{status}:available{available}:level{level}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Card } from \"primereact/card\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Panel } from \"primereact/panel\";\nimport { Link } from \"react-router-dom\";\n\nimport { InputText } from \"primereact/inputtext\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { TipsTricsTreeView } from \"./TipsTricsTreeView\";\nimport { GET_ALLTIPSTRICKS_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport OptionalField from \"../common/OptionalField\";\nimport { TipsTricksCreation } from \"./TipsTricksCreation\";\nimport PreviewController from \"../content/preview/PreviewController\";\nimport { Accordion, AccordionTab } from \"primereact/accordion\";\nimport StudentSubjectView from \"../student/StudentSubjectView\";\nexport function TipsTrics(props) {\n  //const subjectid = props.match.params.id;\n  const subjectid = props.subjectid ? props.subjectid : props.match.params.id;\n\n  const [contentLevel, setContentLevel] = useState(\"SUBJECT\");\n  const [itemVal, setItemVal] = useState(items);\n  const [contentTypeVal, setContentTypeVal] = useState(\"HTML\");\n  const [contentType, setContentType] = useState([\n    { label: \"HTML\", value: \"HTML\" },\n    { label: \"YOUTUBE\", value: \"YOUTUBE\" },\n    { label: \"FILE\", value: \"FILE\" },\n  ]);\n\n  const [treeData, setTreeData] = useState(null);\n  const [panelCollapsed, setPanelCollapsed] = useState(true);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const items = [\n    {\n      label: \"File\",\n      icon: \"pi pi-fw pi-clone\",\n    },\n  ];\n\n  const [state, setState] = useState(\"ACTIVE\");\n  const [status, setStatus] = useState(\"APPROVED\");\n  const [level, setLevel] = useState(1);\n  const [available, setAvailable] = useState(\"FREE\");\n  const [dataList, setDataList] = useState(null);\n  const { loading: unitLoading, error: unitError, data: unitData } = useQuery(\n    GET_ALLTIPSTRICKS_SUBJECT_BY_ID,\n    {\n      variables: { id: subjectid },\n    }\n  );\n  if (unitError) {\n    console.log(\"UNIT ERROR\", unitError);\n    return <p>Unit ERROR: {unitError.message}</p>;\n  }\n  if (unitData === undefined) {\n    console.log(\"UNIT DATA UNDIFINED\");\n    return <p>ERROR in GETTing unit</p>;\n  }\n  if (unitLoading) {\n    console.log(\"UNIT DATA is LOADING\");\n    return <div>UnitData Loading...</div>;\n  }\n  console.log(\n    \"GET_ALGET_ALLTIPSTRICKS_SUBJECT_BY_IDLFORMULA_SUBJECT_BY_ID \",\n    unitData,\n    \"treeData \",\n    treeData\n  );\n\n  if (!treeData) {\n    console.log(\"TREE DATA is NULL\");\n    // setDataList(unitData.getSubjectById.formulas);\n    console.log(\"PREVIEW SUBJECT  DATA \", unitData.getSubjectById.formulas);\n  } else {\n    console.log(\"PREVIEW UNIT and Topic Level Data\", treeData);\n  }\n  console.log(\"contentLevel\", contentLevel);\n  return (\n    <div className=\"p-grid \">\n      <div className=\"card card-w-title\" style={{ marginLeft: \"10px\" }}>\n        <div\n          className=\"content-section introduction\"\n          style={{ marginLeft: \"5px\" }}\n        >\n          {unitLoading ? (\n            <div>Loading ....</div>\n          ) : (\n            <TipsTricsTreeView\n              items={itemVal}\n              unitData={unitData.getSubjectById}\n              setContentLevel={setContentLevel}\n              setTreeData={setTreeData}\n              subjectid={subjectid}\n            />\n          )}\n        </div>\n      </div>\n\n      <div className=\"card card-w-title\" style={{ marginLeft: \"10px\" }}>\n        <Button\n          label={treeData ? treeData.level : \"SUBJECT\"}\n          disabled=\"disabled\"\n          className=\"p-button p-button-secondary\"\n          style={{\n            textAlign: \"center\",\n            marginTop: \".3em\",\n            marginLeft: \".3em\",\n            width: \"10em\",\n          }}\n        />\n\n        <OptionalField\n          contentTypeVal={contentTypeVal}\n          setContentTypeVal={setContentTypeVal}\n          state={state}\n          setState={setState}\n          status={status}\n          setStatus={setStatus}\n          level={level}\n          setLevel={setLevel}\n          available={available}\n          setAvailable={setAvailable}\n        />\n\n        <Accordion\n          activeIndex={activeIndex}\n          onTabChange={(e) => setActiveIndex(e.index)}\n        >\n          <AccordionTab>\n            {\" \"}\n            <TipsTricksCreation\n              contentTypeVal={contentTypeVal}\n              treeData={treeData}\n              subjectid={subjectid}\n            />\n          </AccordionTab>\n          <AccordionTab header=\"Preview Formulas\">\n            {treeData ? (\n              treeData.dataval && treeData.dataval.formulas ? (\n                <PreviewController\n                  dataList={treeData.dataval.formulas}\n                  viewType=\"CARD\"\n                />\n              ) : (\n                \"\"\n              )\n            ) : (\n              <PreviewController\n                dataList={unitData.getSubjectById.formulas}\n                viewType=\"CARD\"\n              />\n            )}\n          </AccordionTab>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Tree } from \"primereact/tree\";\nimport { Button } from \"primereact/button\";\nimport { NodeService } from \"../../service/NodeService\";\nexport function ExampleTreeView(props) {\n  let nodeService = new NodeService();\n  const [selectionKeys, setSelectionKeys] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(null);\n  const [nodes, setNodes] = useState(null);\n\n  useEffect(() => {\n    let rootElm = [];\n    // This is Root level and iterate over units\n    if (props.unitData.units) {\n      props.unitData.units.map((unit, index) => {\n        let unitElm = {\n          key: unit.id,\n          label: unit.name,\n          data: {\n            type: \"UNIT\",\n            level: \"UNIT\",\n            id: unit.id,\n            name: unit.name,\n            subjectid: props.subjectid,\n            dataval: unit,\n          },\n          icon: \"pi pi-fw pi-inbox\",\n        };\n        // If unit contains topic then iterate over topics and add under given unit\n        let topicElm = [];\n        if (unit.topics) {\n          unit.topics.map((topic, index) => {\n            let topicexamplesElm = [];\n            //If topic contains example then add into topic node\n            if (topic.examples) {\n              topic.examples.map((example, index) => {\n                topicexamplesElm.push({\n                  key: example.id,\n                  label: example.name,\n                  data: {\n                    type: \"EXAMPLE\",\n                    level: \"TOPIC\",\n                    topic: topic.id,\n                    topicname: topic.name,\n                    id: example.id,\n                    name: example.name,\n                    subjectid: props.subjectid,\n                    dataval: example,\n                  },\n                  icon: \"pi pi-fw pi-info-circle\",\n                });\n              });\n              topicElm.push({\n                key: topic.id,\n                label: topic.name,\n\n                data: {\n                  type: \"TOPIC\",\n                  level: \"TOPIC\",\n                  unitname: unit.name,\n                  id: topic.id,\n                  name: topic.name,\n                  subjectid: props.subjectid,\n                },\n                icon: \"pi pi-fw pi-clone\",\n                children: topicexamplesElm,\n              });\n            }\n          });\n        }\n\n        // examples directly under unit\n        //let examplesElm = [];\n        let unitLevelexample = [];\n        if (unit.examples) {\n          unit.examples.map((example, index) => {\n            unitLevelexample.push({\n              key: example.id,\n              label: example.name,\n              data: {\n                type: \"EXAMPLE\",\n                level: \"UNIT\",\n                id: example.id,\n                name: example.name,\n                subjectid: props.subjectid,\n                dataval: example,\n              },\n              icon: \"pi pi-fw pi-info-circle\",\n            });\n          });\n        }\n\n        unitElm[\"children\"] = [...unitLevelexample, ...topicElm];\n        rootElm.push(unitElm);\n      });\n    }\n    //examples of Subject\n    if (props.unitData.examples) {\n      props.unitData.examples.map((example, index) => {\n        rootElm.push({\n          key: example.id,\n          label: example.name,\n          level: \"SUBJECT\",\n          data: {\n            type: \"EXAMPLE\",\n            level: \"SUBJECT\",\n            id: example.id,\n            name: example.name,\n            subjectid: props.subjectid,\n            dataval: example,\n          },\n          icon: \"pi pi-fw pi-info-circle\",\n        });\n      });\n    }\n    const subjectRoot = [\n      {\n        key: props.unitData.id,\n        label: props.unitData.name,\n        data: {\n          id: props.subjectid,\n          type: \"SUBJECT\",\n          action: \"UNIT\",\n          actionid: props.subjectid,\n          level: \"SUBJECT\",\n        },\n        children: rootElm,\n      },\n    ];\n    setNodes(subjectRoot);\n  }, [props.unitData]);\n\n  return (\n    <div>\n      <Tree\n        value={nodes}\n        selectionMode=\"single\"\n        selectionKeys={selectionKeys}\n        selectionValue={selectionValue}\n        onSelect={(e) => {\n          console.log(\"TREE SELECTED NODE DATA\", e.node.data);\n          props.setTreeData(e.node.data);\n        }}\n        onSelectionValueChange={(e) => {\n          setSelectionKeys(e.value);\n        }}\n      />\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\nconst CREATE_EXAMPLE = gql`\n  mutation CREATE_EXAMPLE(\n    $name: String!\n    $level: Int\n    $fileInfo: Json\n    $type: String!\n    $url: String\n    $subject: String\n    $unit: String\n    $topic: String\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n  ) {\n    createExample(\n      data: {\n        name: $name\n        level: $level\n        fileInfo: $fileInfo\n        type: $type\n        url: $url\n        subject: $subject\n        unit: $unit\n        topic: $topic\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n      }\n    ) {\n      id\n      name\n      url\n      type\n      isPublished\n    }\n  }\n`;\nexport { CREATE_EXAMPLE };\n","import React, { useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Card } from \"primereact/card\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Panel } from \"primereact/panel\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Editor } from \"primereact/editor\";\nimport { FileUpload } from \"primereact/fileupload\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { ExampleTreeView } from \"./ExampleTreeView\";\nimport { CREATE_EXAMPLE } from \"../../service/graphql/education/teacher/mutations/example\";\nimport { GET_ALLEXAMPLE_SUBJECT_BY_ID } from \"../../service/graphql/education/common/queries/subjects\";\nimport S3UploadFile from \"../../common/S3UploadFile\";\n\nexport function Example(props) {\n  console.log(\"PROPS contebr \", props);\n  const subjectid = props.subjectid ? props.subjectid : props.match.params.id;\n\n  const levelList = [\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"4\", value: 4 },\n    { label: \"5\", value: 5 },\n  ];\n\n  const [contentType, setContentType] = useState([\n    { label: \"HTML\", value: \"HTML\" },\n    { label: \"YOUTUBE\", value: \"YOUTUBE\" },\n    { label: \"FILE\", value: \"FILE\" },\n  ]);\n  /** TBB */\n  const [contentLevel, setContentLevel] = useState(\"SUBJECT\");\n\n  const [level, setLevel] = useState(1);\n  const [state, setState] = useState(\"ACTIVE\");\n  const [status, setStatus] = useState(\"APPROVED\");\n  const [available, setAvailable] = useState(\"FREE\");\n  const [contentTypeVal, setContentTypeVal] = useState(\"HTML\");\n  const [contentTitle, setContentTitle] = useState(\"SUBJECT\");\n  const [title, setTitle] = useState(\"\");\n  const [contentData, setContentData] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [fileInfo, setFileInfo] = useState({});\n  const [treeData, setTreeData] = useState(null);\n  const [createExample] = useMutation(CREATE_EXAMPLE);\n\n  const onUpload = (event) => {\n    setContentTypeVal(\"FILE\");\n    S3UploadFile(event.files[0])\n      .then((resp) => {\n        setUrl(resp);\n        setFileInfo({ fileInfo: event.files[0].type });\n        console.log(\"uploadFileRESP \", resp);\n      })\n      .catch((err) => {\n        console.log(\"ERROR \", err);\n      });\n  };\n  const cleanpage = () => {\n    setTitle(\"\");\n    setContentData(\"\");\n    setUrl(\"\");\n  };\n  const createExampleFunction = (myurl) => {\n    let myobj = {\n      name: title,\n      fileInfo: fileInfo,\n      type: contentTypeVal,\n      url: myurl,\n      level: level,\n      isPublished: true,\n      state: state,\n      status: status,\n      available: available,\n      description: \"DUMMY\",\n    };\n    if (!treeData) {\n      myobj[\"subject\"] = subjectid;\n    } else {\n      if (treeData && \"UNIT\" === treeData.type) {\n        myobj[\"unit\"] = treeData.id;\n      } else if (treeData && \"TOPIC\" === treeData.type) {\n        myobj[\"topic\"] = treeData.id;\n      }\n    }\n    console.log(\"BEFORE CREATE CONTENT\", myobj);\n    createExample({\n      variables: myobj,\n      refetchQueries: [\n        {\n          query: GET_ALLEXAMPLE_SUBJECT_BY_ID,\n          variables: { id: props.subjectid },\n        },\n      ],\n    })\n      .then((resp) => {\n        console.log(\"Created content\", resp);\n      })\n      .catch((err) => {\n        throw new Error(\"Error in creating content \");\n      });\n    cleanpage();\n  };\n  const { loading: unitLoading, error: unitError, data: unitData } = useQuery(\n    GET_ALLEXAMPLE_SUBJECT_BY_ID,\n    {\n      variables: { id: subjectid },\n    }\n  );\n  if (unitError) {\n    return <p>Unit ERROR: {unitError.message}</p>;\n  }\n  if (unitData === undefined) {\n    return <p>ERROR in GETTing unit</p>;\n  }\n  if (unitLoading) {\n    return <div>UnitData Loading...</div>;\n  }\n  const getEditor = () => {\n    console.log(\"contentTypeVal\", contentTypeVal);\n    switch (contentTypeVal) {\n      case \"HTML\":\n        return (\n          <Editor\n            style={{ height: \"220px\" }}\n            value={contentData}\n            onTextChange={(e) => {\n              setContentData(e.htmlValue);\n            }}\n          />\n        );\n      case \"YOUTUBE\":\n        return (\n          <InputText\n            placeholder=\"YOUTUBE URL\"\n            style={{ width: 350, height: 50, textAlign: \"center\" }}\n            onChange={(e) => {\n              setUrl(e.target.value);\n            }}\n          />\n        );\n      case \"FILE\":\n        return (\n          <FileUpload\n            name=\"demo[]\"\n            onUpload={onUpload}\n            multiple={false}\n            maxFileSize={1000000}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"p-grid \">\n      <div className=\"card card-w-title\" style={{ marginLeft: \"10px\" }}>\n        <div\n          className=\"content-section introduction\"\n          style={{ marginLeft: \"5px\" }}\n        >\n          {unitLoading ? (\n            <div>Loading ....</div>\n          ) : (\n            <ExampleTreeView\n              unitData={unitData.getSubjectById}\n              setContentLevel={setContentLevel}\n              setContentTitle={setContentTitle}\n              setTreeData={setTreeData}\n              subjectid={subjectid}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"p-col-12 p-md-9 p-lg-9\">\n        <div className=\"p-inputgroup\">\n          <span className=\"p-inputgroup-addon\">\n            <InputText\n              placeholder=\"Enter Title\"\n              value={title}\n              style={{\n                paddingLeft: \"21em\",\n                paddingRight: \"21em\",\n                textAlign: \"center\",\n              }}\n              onChange={(e) => {\n                console.log(\"E \", e.target.value);\n                setTitle(e.target.value);\n              }}\n            />\n          </span>\n          <span className=\"p-inputgroup-addon\">\n            <Dropdown\n              value={contentTypeVal}\n              options={contentType}\n              onChange={(e) => {\n                setContentTypeVal(e.value);\n              }}\n              autoWidth={true}\n            />\n          </span>\n          <span className=\"p-inputgroup-addon\">\n            <Dropdown\n              placeholder=\"Level\"\n              options={levelList}\n              value={level}\n              onChange={(event) => setLevel(event.value)}\n              autoWidth={true}\n            />\n          </span>\n        </div>\n        {getEditor()}\n        <Button\n          label=\"CREATE \"\n          className=\"p-button-raised p-button\"\n          onClick={() => {\n            //We need to first check if its Editor or FileUpload.\n            if (\"HTML\" === contentTypeVal) {\n              setContentTypeVal(\"HTML\");\n              const file = new File([contentData], \"HARDCODEDFILENAME.html\", {\n                type: \"text/html\",\n              });\n              S3UploadFile(file)\n                .then((resp) => {\n                  setUrl(resp);\n                  console.log(\"uploadFileRESP \", resp);\n                  createExampleFunction(resp);\n                })\n                .catch((err) => {\n                  console.log(\"ERROR \", err);\n                });\n            } else {\n              createExampleFunction(url);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import gql from \"graphql-tag\";\nconst CREATE_UNIT = gql`\n  mutation CREATE_UNIT(\n    $name: String!\n    $subject: String!\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n    $description: String\n    $picture: String\n  ) {\n    createUnit(\n      data: {\n        name: $name\n        subject: $subject\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n        description: $description\n        picture: $picture\n      }\n    ) {\n      id\n      name\n      isPublished\n    }\n  }\n`;\nexport { CREATE_UNIT };\n","import gql from \"graphql-tag\";\nconst CREATE_TOPIC = gql`\n  mutation CREATE_TOPIC(\n    $name: String!\n    $unit: String\n    $isPublished: Boolean\n    $state: String\n    $status: String\n    $available: String\n    $description: String\n    $picture: String\n  ) {\n    createTopic(\n      data: {\n        name: $name\n        unit: $unit\n        isPublished: $isPublished\n        state: $state\n        status: $status\n        available: $available\n        picture: $picture\n        description: $description\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\nexport { CREATE_TOPIC };\n","import React, { useState, useEffect } from \"react\";\nimport { Tree } from \"primereact/tree\";\nimport { Button } from \"primereact/button\";\nexport function SyllabusTreeView(props) {\n  const [selectionKeys, setSelectionKeys] = useState(null);\n  const [selectionValue, setSelectionValue] = useState(null);\n  const [nodes, setNodes] = useState(null);\n  useEffect(() => {\n    let rootElm = [];\n    // This is Root level and iterate over units\n    if (props.unitData.units) {\n      props.unitData.units.map((unit, index) => {\n        let unitElm = {\n          key: unit.id,\n          label: unit.name,\n          data: {\n            action: \"TOPIC\",\n            id: unit.id,\n            type: \"UNIT\",\n            level: \"UNIT\",\n            actionid: unit.id,\n            name: unit.name,\n            subjectid: props.subjectid,\n            dataval: unit,\n          },\n          icon: \"pi pi-fw pi-inbox\",\n        };\n        // If unit contains topic then iterate over topics and add under given unit\n        let topicElm = [];\n        if (unit.topics) {\n          unit.topics.map((topic, index) => {\n            let topicquestionsElm = [];\n            topicElm.push({\n              key: topic.id,\n              label: topic.name,\n              data: {\n                type: \"TOPIC\",\n                level: \"TOPIC\",\n                action: \"TOPIC\",\n                actionid: unit.id,\n                unitname: unit.name,\n                id: topic.id,\n                name: topic.name,\n                subjectid: props.subjectid,\n              },\n              icon: \"pi pi-fw pi-clone\",\n              children: topicquestionsElm,\n            });\n          });\n        }\n\n        unitElm[\"children\"] = [...topicElm];\n        rootElm.push(unitElm);\n      });\n    }\n    const subjectRoot = [\n      {\n        key: props.unitData.id,\n        label: props.unitData.name,\n        data: {\n          id: props.subjectid,\n          type: \"SUBJECT\",\n          action: \"UNIT\",\n          actionid: props.subjectid,\n          level: \"SUBJECT\",\n        },\n        children: rootElm,\n      },\n    ];\n    setNodes(subjectRoot);\n    //nodeService.getTreeNodes().then((data) => setNodes(data));\n  }, [props.unitData]);\n  return (\n    <div>\n      <Tree\n        value={nodes}\n        selectionMode=\"single\"\n        selectionKeys={selectionKeys}\n        selectionValue={selectionValue}\n        onSelect={(e) => {\n          props.setTreeData(e.node.data);\n        }}\n        onSelectionValueChange={(e) => {\n          setSelectionKeys(e.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Button } from \"primereact/button\";\nimport { Card } from \"primereact/card\";\nimport { InputText } from \"primereact/inputtext\";\nimport { GET_SUBJECT_SYLLABUS_BY_ID } from \"../../../service/graphql/education/common/queries/subjects\";\nimport { CREATE_UNIT } from \"../../../service/graphql/education/teacher/mutations/unit\";\nimport { CREATE_TOPIC } from \"../../../service/graphql/education/teacher/mutations/topic\";\n\nimport { SyllabusTreeView } from \"./SyllabusTreeView\";\n\nexport default function Syllabus(props) {\n  const subjectid = props.subjectid ? props.subjectid : props.match.params.id;\n\n  const [treeData, setTreeData] = useState(null);\n  const [contentLevel, setContentLevel] = useState(\"SUBJECT\");\n  const [createUnit] = useMutation(CREATE_UNIT);\n  const [createTopic] = useMutation(CREATE_TOPIC);\n  const [unittopicName, setUnittopicName] = useState(\"\");\n\n  const { loading: unitLoading, error: unitError, data: unitData } = useQuery(\n    GET_SUBJECT_SYLLABUS_BY_ID,\n    {\n      variables: { id: subjectid },\n    }\n  );\n  if (unitError) {\n    console.log(\"UNIT ERROR\", unitError);\n    return <p>Unit ERROR: {unitError.message}</p>;\n  }\n  if (unitData === undefined) {\n    console.log(\"UNIT DATA UNDIFINED\");\n    return <p>ERROR in GETTing unit</p>;\n  }\n  if (unitLoading) {\n    console.log(\"UNIT DATA is LOADING\");\n    return <div>UnitData Loading...</div>;\n  }\n  console.log(\"TREE DATA\", treeData);\n  const footer = (\n    <span>\n      <div\n        style={{ marginTop: \"30px\", paddingLeft: \"15em\", paddingRight: \"15em\" }}\n      >\n        <Button\n          label=\"Create\"\n          className=\"p-button-raised p-button-rounded\"\n          onClick={() => {\n            if (!treeData || (treeData && \"SUBJECT\" === treeData.type)) {\n              createUnit({\n                variables: {\n                  name: unittopicName,\n                  subject: subjectid,\n                },\n                refetchQueries: () => [\n                  {\n                    query: GET_SUBJECT_SYLLABUS_BY_ID,\n                    variables: { id: subjectid },\n                  },\n                ],\n              })\n                .then((res) => {\n                  setUnittopicName(\"\");\n                  console.log(\"Created Unit\", res);\n\n                  console.log(\"CLEARD AT UNIT LEVEL\", unittopicName);\n                })\n                .catch((err) => {\n                  throw new Error(\"Error in creating Unit\");\n                });\n            } else if (treeData && \"UNIT\" === treeData.type) {\n              createTopic({\n                variables: {\n                  name: unittopicName,\n                  unit: treeData.id,\n                },\n                refetchQueries: () => [\n                  {\n                    query: GET_SUBJECT_SYLLABUS_BY_ID,\n                    variables: { id: subjectid },\n                  },\n                ],\n              })\n                .then((res) => {\n                  setUnittopicName(\"\");\n                  console.log(\n                    \"Created TopicResep\",\n                    res,\n                    \" clearn \",\n                    unittopicName\n                  );\n                })\n                .catch((err) => {\n                  throw new Error(\"Error in creating Topic\");\n                });\n            }\n            setUnittopicName(\"\");\n          }}\n        />\n      </div>\n    </span>\n  );\n\n  return (\n    <div className=\"p-grid p-fluid\">\n      <div className=\"p-col-12 p-md-4 p-lg-4\">\n        {\" \"}\n        {unitLoading ? (\n          <div>Loading ....</div>\n        ) : (\n          <SyllabusTreeView\n            unitData={unitData.getSubjectById}\n            setContentLevel={setContentLevel}\n            setTreeData={setTreeData}\n            subjectid={subjectid}\n          />\n        )}\n      </div>\n      <div className=\"p-col-12 p-md-6 p-lg-6\">\n        <Card footer={footer}>\n          <div\n            style={{\n              marginTop: \"30px\",\n              paddingLeft: \"10em\",\n              paddingRight: \"15em\",\n            }}\n          >\n            <InputText\n              placeholder=\"EnterName\"\n              value={unittopicName}\n              style={{ width: 350, height: 50, textAlign: \"center\" }}\n              onChange={(e) => {\n                setUnittopicName(e.target.value);\n              }}\n            />\n          </div>\n        </Card>\n      </div>\n      <div className=\"p-col-12 p-md-2 p-lg-2\"></div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { TabMenu } from \"primereact/tabmenu\";\nimport Syllabus from \"./Syllabus/Syllabus\";\nimport { Question } from \"../question/Question\";\nimport { Content } from \"../content/Content\";\nimport { Example } from \"../example/Example\";\nimport { Formulas } from \"../formulas/Formulas\";\nimport { TipsTrics } from \"../tipstricks/TipsTrics\";\nimport { Exams } from \"../exams/Exams\";\nexport function TeacherTabbedView(props) {\n  const subjectid = props.match.params.id;\n  const [activeItem, setActiveItem] = useState(\"Syllabus\");\n\n  const items = [\n    { label: \"Syllabus\", icon: \"pi pi-fw pi-home\" },\n    { label: \"Content\", icon: \"pi pi-fw pi-calendar\" },\n    { label: \"Question\", icon: \"pi pi-fw pi-pencil\" },\n    { label: \"TipsTricks\", icon: \"pi pi-fw pi-file\" },\n    { label: \"Formulas\", icon: \"pi pi-fw pi-cog\" },\n    { label: \"Examples\", icon: \"pi pi-fw pi-cog\" },\n    { label: \"Exams\", icon: \"pi pi-fw pi-cog\" },\n    { label: \"Papers\", icon: \"pi pi-fw pi-cog\" },\n  ];\n  const getComponent = () => {\n    switch (activeItem) {\n      case \"Syllabus\":\n        return <Syllabus subjectid={subjectid} />;\n\n      case \"Content\":\n        return <Content subjectid={subjectid} />;\n        break;\n      case \"Question\":\n        return <Question subjectid={subjectid} />;\n        break;\n      case \"TipsTricks\":\n        return <TipsTrics subjectid={subjectid} />;\n        break;\n      case \"Formulas\":\n        return <Formulas subjectid={subjectid} />;\n        break;\n      case \"Examples\":\n        return <Example subjectid={subjectid} />;\n        break;\n      case \"Exams\":\n        return <Exams subjectid={subjectid} />;\n\n        break;\n      case \"Papers\":\n        break;\n    }\n  };\n  return (\n    <div className=\"p-grid p-fluid\">\n      <div className=\"p-col-12 p-md-12 p-lg-12\">\n        <div className=\"content-section implementation\">\n          <TabMenu\n            model={items}\n            activeItem={activeItem}\n            onTabChange={(e) => {\n              console.log(\"activeItem\", e.value.label);\n              setActiveItem(e.value.label);\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"p-col-12 p-md-12 p-lg-12\">{getComponent()}</div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { AppTopbar } from \"./AppTopbar\";\n\nimport { AppMenu } from \"./AppMenu\";\nimport { AppProfile } from \"./AppProfile\";\nimport { Route } from \"react-router-dom\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { FormsDemo } from \"./components/FormsDemo\";\nimport { SampleDemo } from \"./components/SampleDemo\";\nimport { DataDemo } from \"./components/DataDemo\";\nimport { PanelsDemo } from \"./components/PanelsDemo\";\nimport { OverlaysDemo } from \"./components/OverlaysDemo\";\nimport { MenusDemo } from \"./components/MenusDemo\";\nimport { MessagesDemo } from \"./components/MessagesDemo\";\nimport { ChartsDemo } from \"./components/ChartsDemo\";\nimport { MiscDemo } from \"./components/MiscDemo\";\nimport { EmptyPage } from \"./components/EmptyPage\";\nimport Gridview from \"./tbd/mypractice/Gridview\";\nimport \"primereact/resources/themes/nova-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"./layout/layout.scss\";\nimport \"./App.scss\";\nimport { Documentation } from \"./components/Documentation\";\n\nimport MySubjects from \"./components/MySubjects\";\nimport TeacherMgmt from \"./projectcomponents/content/TeacherMgmt\";\nimport { Content } from \"./projectcomponents/content/Content\";\nimport { Exams } from \"./projectcomponents/exams/Exams\";\nimport { Formulas } from \"./projectcomponents/formulas/Formulas\";\nimport { Papers } from \"./projectcomponents/papers/Papers\";\nimport { Question } from \"./projectcomponents/question/Question\";\nimport { TipsTrics } from \"./projectcomponents/tipstricks/TipsTrics\";\nimport { Example } from \"./projectcomponents/example/Example\";\n\nimport { TeacherTabbedView } from \"./projectcomponents/teacher/TeacherTabbedView\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      layoutMode: \"static\",\n      layoutColorMode: \"dark\",\n      staticMenuInactive: false,\n      overlayMenuActive: false,\n      mobileMenuActive: false,\n    };\n\n    this.onWrapperClick = this.onWrapperClick.bind(this);\n    this.onToggleMenu = this.onToggleMenu.bind(this);\n    this.onSidebarClick = this.onSidebarClick.bind(this);\n    this.onMenuItemClick = this.onMenuItemClick.bind(this);\n    this.createMenu();\n  }\n\n  onWrapperClick(event) {\n    if (!this.menuClick) {\n      this.setState({\n        overlayMenuActive: false,\n        mobileMenuActive: false,\n      });\n    }\n\n    this.menuClick = false;\n  }\n\n  onToggleMenu(event) {\n    this.menuClick = true;\n\n    if (this.isDesktop()) {\n      if (this.state.layoutMode === \"overlay\") {\n        this.setState({\n          overlayMenuActive: !this.state.overlayMenuActive,\n        });\n      } else if (this.state.layoutMode === \"static\") {\n        this.setState({\n          staticMenuInactive: !this.state.staticMenuInactive,\n        });\n      }\n    } else {\n      const mobileMenuActive = this.state.mobileMenuActive;\n      this.setState({\n        mobileMenuActive: !mobileMenuActive,\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  onSidebarClick(event) {\n    this.menuClick = true;\n  }\n\n  onMenuItemClick(event) {\n    if (!event.item.items) {\n      this.setState({\n        overlayMenuActive: false,\n        mobileMenuActive: false,\n      });\n    }\n  }\n\n  createMenu() {\n    this.menu = [\n      {\n        label: \"TEACHERVIEW\",\n        icon: \"pi pi-fw pi-user\",\n        command: () => {\n          window.location = \"#/teachermgmt\";\n        },\n      },\n      {\n        label: \"PRACTICE\",\n        command: () => {\n          window.location = \"#/practice\";\n        },\n      },\n      {\n        label: \"Dashboard\",\n        icon: \"pi pi-fw pi-home\",\n        command: () => {\n          window.location = \"#/\";\n        },\n      },\n      {\n        label: \"Menu Modes\",\n        icon: \"pi pi-fw pi-cog\",\n        items: [\n          {\n            label: \"Static Menu\",\n            icon: \"pi pi-fw pi-bars\",\n            command: () => this.setState({ layoutMode: \"static\" }),\n          },\n          {\n            label: \"Overlay Menu\",\n            icon: \"pi pi-fw pi-bars\",\n            command: () => this.setState({ layoutMode: \"overlay\" }),\n          },\n        ],\n      },\n      {\n        label: \"Menu Colors\",\n        icon: \"pi pi-fw pi-align-left\",\n        items: [\n          {\n            label: \"Dark\",\n            icon: \"pi pi-fw pi-bars\",\n            command: () => this.setState({ layoutColorMode: \"dark\" }),\n          },\n          {\n            label: \"Light\",\n            icon: \"pi pi-fw pi-bars\",\n            command: () => this.setState({ layoutColorMode: \"light\" }),\n          },\n        ],\n      },\n      {\n        label: \"Components\",\n        icon: \"pi pi-fw pi-globe\",\n        badge: \"9\",\n        items: [\n          { label: \"Sample Page\", icon: \"pi pi-fw pi-th-large\", to: \"/sample\" },\n          {\n            label: \"Teacher Page\",\n            icon: \"pi pi-fw pi-th-large\",\n            to: \"/mysubjects\",\n          },\n\n          { label: \"Forms\", icon: \"pi pi-fw pi-file\", to: \"/forms\" },\n          { label: \"Data\", icon: \"pi pi-fw pi-table\", to: \"/data\" },\n          { label: \"Panels\", icon: \"pi pi-fw pi-list\", to: \"/panels\" },\n          { label: \"Overlays\", icon: \"pi pi-fw pi-clone\", to: \"/overlays\" },\n          { label: \"Menus\", icon: \"pi pi-fw pi-plus\", to: \"/menus\" },\n          { label: \"Messages\", icon: \"pi pi-fw pi-spinner\", to: \"/messages\" },\n          { label: \"Charts\", icon: \"pi pi-fw pi-chart-bar\", to: \"/charts\" },\n          { label: \"Misc\", icon: \"pi pi-fw pi-upload\", to: \"/misc\" },\n        ],\n      },\n      {\n        label: \"Template Pages\",\n        icon: \"pi pi-fw pi-file\",\n        items: [\n          { label: \"Empty Page\", icon: \"pi pi-fw pi-circle-off\", to: \"/empty\" },\n        ],\n      },\n      {\n        label: \"Menu Hierarchy\",\n        icon: \"pi pi-fw pi-search\",\n        items: [\n          {\n            label: \"Submenu 1\",\n            icon: \"pi pi-fw pi-bookmark\",\n            items: [\n              {\n                label: \"Submenu 1.1\",\n                icon: \"pi pi-fw pi-bookmark\",\n                items: [\n                  { label: \"Submenu 1.1.1\", icon: \"pi pi-fw pi-bookmark\" },\n                  { label: \"Submenu 1.1.2\", icon: \"pi pi-fw pi-bookmark\" },\n                  { label: \"Submenu 1.1.3\", icon: \"pi pi-fw pi-bookmark\" },\n                ],\n              },\n              {\n                label: \"Submenu 1.2\",\n                icon: \"pi pi-fw pi-bookmark\",\n                items: [\n                  { label: \"Submenu 1.2.1\", icon: \"pi pi-fw pi-bookmark\" },\n                  { label: \"Submenu 1.2.2\", icon: \"pi pi-fw pi-bookmark\" },\n                ],\n              },\n            ],\n          },\n          {\n            label: \"Submenu 2\",\n            icon: \"pi pi-fw pi-bookmark\",\n            items: [\n              {\n                label: \"Submenu 2.1\",\n                icon: \"pi pi-fw pi-bookmark\",\n                items: [\n                  { label: \"Submenu 2.1.1\", icon: \"pi pi-fw pi-bookmark\" },\n                  { label: \"Submenu 2.1.2\", icon: \"pi pi-fw pi-bookmark\" },\n                  { label: \"Submenu 2.1.3\", icon: \"pi pi-fw pi-bookmark\" },\n                ],\n              },\n              {\n                label: \"Submenu 2.2\",\n                icon: \"pi pi-fw pi-bookmark\",\n                items: [\n                  { label: \"Submenu 2.2.1\", icon: \"pi pi-fw pi-bookmark\" },\n                  { label: \"Submenu 2.2.2\", icon: \"pi pi-fw pi-bookmark\" },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      {\n        label: \"MyAssignedSubjects\",\n        icon: \"pi pi-fw pi-clone\",\n        command: () => {\n          window.location = \"#/mysubjects\";\n        },\n      },\n      {\n        label: \"Documentation\",\n        icon: \"pi pi-fw pi-question\",\n        command: () => {\n          window.location = \"#/documentation\";\n        },\n      },\n      {\n        label: \"View Source\",\n        icon: \"pi pi-fw pi-search\",\n        command: () => {\n          window.location = \"https://github.com/primefaces/sigma\";\n        },\n      },\n    ];\n  }\n\n  addClass(element, className) {\n    if (element.classList) element.classList.add(className);\n    else element.className += \" \" + className;\n  }\n\n  removeClass(element, className) {\n    if (element.classList) element.classList.remove(className);\n    else\n      element.className = element.className.replace(\n        new RegExp(\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\n          \"gi\"\n        ),\n        \" \"\n      );\n  }\n\n  isDesktop() {\n    return window.innerWidth > 1024;\n  }\n\n  componentDidUpdate() {\n    if (this.state.mobileMenuActive)\n      this.addClass(document.body, \"body-overflow-hidden\");\n    else this.removeClass(document.body, \"body-overflow-hidden\");\n  }\n\n  render() {\n    const logo =\n      this.state.layoutColorMode === \"dark\"\n        ? \"assets/layout/images/logo-white.svg\"\n        : \"assets/layout/images/logo.svg\";\n\n    const wrapperClass = classNames(\"layout-wrapper\", {\n      \"layout-overlay\": this.state.layoutMode === \"overlay\",\n      \"layout-static\": this.state.layoutMode === \"static\",\n      \"layout-static-sidebar-inactive\":\n        this.state.staticMenuInactive && this.state.layoutMode === \"static\",\n      \"layout-overlay-sidebar-active\":\n        this.state.overlayMenuActive && this.state.layoutMode === \"overlay\",\n      \"layout-mobile-sidebar-active\": this.state.mobileMenuActive,\n    });\n\n    const sidebarClassName = classNames(\"layout-sidebar\", {\n      \"layout-sidebar-dark\": this.state.layoutColorMode === \"dark\",\n      \"layout-sidebar-light\": this.state.layoutColorMode === \"light\",\n    });\n\n    return (\n      <div className={wrapperClass} onClick={this.onWrapperClick}>\n        <AppTopbar onToggleMenu={this.onToggleMenu} />\n\n        <div\n          ref={(el) => (this.sidebar = el)}\n          className={sidebarClassName}\n          onClick={this.onSidebarClick}\n        >\n          <div className=\"layout-logo\">\n            <img alt=\"Logo\" src={logo} />\n          </div>\n          <AppProfile />\n          <AppMenu model={this.menu} onMenuItemClick={this.onMenuItemClick} />\n        </div>\n\n        <div className=\"layout-main\">\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/practice\" component={Gridview} />\n          <Route path=\"/teachermgmt\" exact component={TeacherMgmt} />\n          <Route path=\"/mysubjects\" component={MySubjects} />\n          <Route path=\"/forms\" component={FormsDemo} />\n          <Route path=\"/sample\" component={SampleDemo} />\n          <Route path=\"/content/:type/:id/:name\" component={Content} />\n          <Route\n            path=\"/teachertabview/:type/:id/:name\"\n            component={TeacherTabbedView}\n          />\n          <Route path=\"/exams/:type/:id/:name\" component={Exams} />\n          <Route path=\"/papers/:type/:id/:name\" component={Papers} />\n          <Route path=\"/formulas/:type/:id/:name\" component={Formulas} />\n          <Route path=\"/tipstricks/:type/:id/:name\" component={TipsTrics} />\n          <Route path=\"/example/:type/:id/:name\" component={Example} />\n          <Route path=\"/question/:type/:id/:name\" component={Question} />\n          <Route path=\"/data\" component={DataDemo} />\n          <Route path=\"/panels\" component={PanelsDemo} />\n          <Route path=\"/overlays\" component={OverlaysDemo} />\n          <Route path=\"/menus\" component={MenusDemo} />\n          <Route path=\"/messages\" component={MessagesDemo} />\n          <Route path=\"/charts\" component={ChartsDemo} />\n          <Route path=\"/misc\" component={MiscDemo} />\n          <Route path=\"/empty\" component={EmptyPage} />\n          <Route path=\"/documentation\" component={Documentation} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {Component} from 'react';\nimport {withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop);","import gql from \"graphql-tag\";\nconst LOGGED_IN = gql`\n  query LOGGED_IN {\n    loggedInUser {\n      roles {\n        id\n        name\n        org {\n          id\n          name\n        }\n        suborg {\n          id\n          name\n        }\n        group {\n          id\n          name\n        }\n        subgroup {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\nconst MY_ASSIGNED_SUBJECTS = gql`\n  query MY_ASSIGNED_SUBJECTS {\n    mySubscription {\n      id\n      mySubjects {\n        id\n        name\n        contents {\n          id\n          name\n        }\n        units {\n          id\n          name\n          contents {\n            id\n            name\n          }\n          topics {\n            id\n            name\n            contents {\n              id\n              name\n            }\n          }\n        }\n      }\n      subscribedAs {\n        id\n        name\n      }\n    }\n  }\n`;\nconst LOGIN_USER = gql`\n  mutation LOGIN($email: String!, $password: String!) {\n    login(data: { email: $email, password: $password }) {\n      user {\n        id\n        firstname\n        email\n      }\n      token\n    }\n  }\n`;\nexport { LOGGED_IN, LOGIN_USER, MY_ASSIGNED_SUBJECTS };\n","import \"./login.css\";\nimport React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../service/graphql/users/query/user\";\nexport default function LoginMd(props) {\n  const [userLogin] = useMutation(LOGIN_USER);\n\n  //const handleRegister = (event) => {};\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    console.log(\"email\", email, \"passowrd\", password);\n    userLogin({ variables: { email, password } })\n      .then((loginResponse) => {\n        console.log(\"loginResponse\", loginResponse);\n        if (\n          loginResponse &&\n          loginResponse.data &&\n          loginResponse.data.login &&\n          loginResponse.data.login.token\n        ) {\n          localStorage.setItem(\"token\", loginResponse.data.login.token);\n        }\n      })\n      .catch((error) => {\n        console.log(\"\\n Error in login \", error);\n      });\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"logo\">LOGO TBD</div>\n      <div class=\"login-item\">\n        <form id=\"login-form\" class=\"form form-login\" onSubmit={handleSubmit}>\n          <div class=\"form-field\">\n            <label class=\"user\" for=\"login-username\">\n              <span class=\"hidden\">Username</span>\n            </label>\n            <input\n              id=\"login-username\"\n              type=\"email\"\n              class=\"form-input\"\n              name=\"email\"\n              placeholder=\"Email Id\"\n              required\n            />\n          </div>\n\n          <div class=\"form-field\">\n            <label class=\"lock\" for=\"login-password\">\n              <span class=\"hidden\">Password</span>\n            </label>\n            <input\n              id=\"login-password\"\n              type=\"password\"\n              name=\"password\"\n              class=\"form-input\"\n              placeholder=\"Password\"\n              required\n            />\n          </div>\n\n          <div class=\"form-field\">\n            <input type=\"submit\" value=\"Log in\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink, Observable } from \"apollo-link\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\nconst getClient = (\n  jwt,\n  httpURL = \"http://localhost:4000\",\n  websocketURL = \"ws://localhost:4000\"\n) => {\n  // Setup the authorization header for the http client\n  const request = async (operation) => {\n    if (jwt) {\n      operation.setContext({\n        headers: {\n          Authorization: `Bearer ${jwt}`,\n        },\n      });\n    }\n  };\n\n  // Setup the request handlers for the http clients\n  const requestLink = new ApolloLink((operation, forward) => {\n    return new Observable((observer) => {\n      let handle;\n      Promise.resolve(operation)\n        .then((oper) => {\n          request(oper);\n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          });\n        })\n        .catch(observer.error.bind(observer));\n\n      return () => {\n        if (handle) {\n          handle.unsubscribe();\n        }\n      };\n    });\n  });\n\n  // Web socket link for subscriptions\n  const wsLink = ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError}`);\n      }\n    }),\n    requestLink,\n    new WebSocketLink({\n      uri: websocketURL,\n      options: {\n        reconnect: true,\n        connectionParams: () => {\n          if (jwt) {\n            return {\n              Authorization: `Bearer ${jwt}`,\n            };\n          }\n        },\n      },\n    }),\n  ]);\n\n  // HTTP link for queries and mutations\n  const httpLink = ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        return graphQLErrors.map(({ message, locations, path }) => {\n          console.log(`[GraphQL error]: Message: ${message}, Path: ${path}`);\n          return `[GraphQL error]: Message: ${message}, Path: ${path}`;\n        });\n      }\n      if (networkError) {\n        console.log(`[Network error]: ${networkError}`);\n        throw new Error(`[Network error]: ${networkError}`);\n      }\n    }),\n    requestLink,\n    new HttpLink({\n      uri: httpURL,\n      credentials: \"same-origin\",\n    }),\n  ]);\n\n  // Link to direct ws and http traffic to the correct place\n  const link = ApolloLink.split(\n    // Pick which links get the data based on the operation kind\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === \"OperationDefinition\" && operation === \"subscription\";\n    },\n    wsLink,\n    httpLink\n  );\n\n  return new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n  });\n};\nconst token = localStorage.getItem(\"token\");\nconst client = getClient(token);\nexport { client };\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport Login from \"./tbd/login\";\nimport { client } from \"./common/apolloclient\";\n\nReactDOM.render(\n  <HashRouter>\n    <ScrollToTop>\n      <ApolloProvider client={client}>\n        {localStorage.getItem(\"token\") ? <App /> : <Login />}\n      </ApolloProvider>\n    </ScrollToTop>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}